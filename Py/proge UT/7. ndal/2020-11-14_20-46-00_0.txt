[
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T20:46:00.167112"
    },
    {
        "view_id": "AssistantView",
        "view_class": "AssistantView",
        "sequence": "ShowView",
        "time": "2020-11-14T20:46:00.174112"
    },
    {
        "view_id": "NotesView",
        "view_class": "NotesView",
        "sequence": "ShowView",
        "time": "2020-11-14T20:46:00.178114"
    },
    {
        "view_id": "VariablesView",
        "view_class": "VariablesView",
        "sequence": "ShowView",
        "time": "2020-11-14T20:46:00.181114"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "EditorTextCreated",
        "time": "2020-11-14T20:46:00.195112"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Open",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T20:46:00.196113"
    },
    {
        "index1": "1.0",
        "index2": "2.0",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:46:00.196113"
    },
    {
        "index": "1.0",
        "text": "",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:46:00.206114"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T20:46:00.207112"
    },
    {
        "view_id": "VariablesView",
        "view_class": "VariablesView",
        "sequence": "ShowView",
        "time": "2020-11-14T20:46:00.207112"
    },
    {
        "view_id": "AssistantView",
        "view_class": "AssistantView",
        "sequence": "ShowView",
        "time": "2020-11-14T20:46:00.208112"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T20:46:00.320114"
    },
    {
        "index": "1.0",
        "text": "Python 3.7.2 (bundled)",
        "tags": "('comment',)",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:46:00.640112"
    },
    {
        "index": "1.22",
        "text": "\n",
        "tags": "('io',)",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:46:00.640112"
    },
    {
        "index": "2.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:46:00.641113"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T20:46:05.927272"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T20:47:20.616879"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T20:47:20.617880"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T20:47:20.617880"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:47:21.135068"
    },
    {
        "index": "1.0",
        "text": "from urllib.request import urlopen\n \nfailVeebis = urlopen(\"https://courses.cs.ut.ee/2018/eprogalused/uploads/Main/mesipuu.txt\")\nbaidid = failVeebis.read()  # kogu fail baitidena\ntekst = baidid.decode()     # baitidest saab s\u00f5ne\nfailVeebis.close()\nprint(tekst)",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:47:21.380281"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Paste>>",
        "time": "2020-11-14T20:47:21.380281"
    },
    {
        "widget_id": 92031952,
        "widget_class": "AutomaticPanedWindow",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:47:23.360975"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:47:25.543426"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T20:47:25.647530"
    },
    {
        "index1": "2.4",
        "index2": "3.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:47:25.657527"
    },
    {
        "index": "2.4",
        "text": "%cd 'C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal'\n%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:47:25.657527"
    },
    {
        "index1": "4.0",
        "index2": "4.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:47:25.658527"
    },
    {
        "cmd_line": "%cd 'C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T20:47:25.659527"
    },
    {
        "command_text": "%cd 'C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T20:47:25.659527"
    },
    {
        "index": "3.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:47:25.661528"
    },
    {
        "index1": "4.0",
        "index2": "4.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:47:25.661528"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T20:47:25.662527"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T20:47:25.662527"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T20:47:26.117739"
    },
    {
        "index": "4.0",
        "text": "T",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:47:26.117739"
    },
    {
        "index": "4.1",
        "text": "a lendab mesipuu poole.\r\n\r\nTa lendab lillest lillesse\r\nja lendab mesipuu poole;\r\nja t\u00f5useb k\u00f5uepilv \u00fclesse -\r\nta lendab mesipuu poole.\r\nJa langevad teele ka tuhanded:\r\nveel koju j\u00f5uavad tuhanded\r\nja viivad vaeva ja hoole\r\nja lendavad mesipuu poole.\n",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:47:26.118739"
    },
    {
        "index": "14.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:47:26.150739"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T20:47:52.194079"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T20:47:52.750463"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:47:52.752459"
    },
    {
        "index1": "1.0",
        "index2": "7.12",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:47:53.937036"
    },
    {
        "index": "1.0",
        "text": "from urllib.request import urlopen\n \nfailVeebis = urlopen(\"https://courses.cs.ut.ee/2018/eprogalused/uploads/Main/mesipuu.txt\")\nbaidid = failVeebis.read()\ntekst = baidid.decode()            # baitidest saab s\u00f5ne\nridadeKaupa = tekst.splitlines()   # s\u00f5ne jaotatakse reavahetuse kohtadelt\nfailVeebis.close()\nprint(ridadeKaupa[4])              # rida indeksiga 4",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:47:53.938037"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Paste>>",
        "time": "2020-11-14T20:47:53.939037"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:47:55.436257"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T20:47:55.528327"
    },
    {
        "index1": "14.4",
        "index2": "15.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:47:55.538326"
    },
    {
        "index": "14.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:47:55.538326"
    },
    {
        "index1": "15.0",
        "index2": "15.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:47:55.540328"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T20:47:55.540328"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T20:47:55.697327"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T20:47:55.983518"
    },
    {
        "index": "15.0",
        "text": "j",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:47:55.983518"
    },
    {
        "index": "15.1",
        "text": "a t\u00f5useb k\u00f5uepilv \u00fclesse -\n",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:47:55.984521"
    },
    {
        "index": "16.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:47:55.991519"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:47:57.088560"
    },
    {
        "index1": "8.18",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:47:58.048357"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:47:59.152433"
    },
    {
        "index1": "8.18",
        "index2": "8.19",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:47:59.944023"
    },
    {
        "index1": "8.17",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:48:00.241050"
    },
    {
        "index1": "8.16",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:48:01.739322"
    },
    {
        "index1": "8.15",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:48:02.246825"
    },
    {
        "index1": "8.14",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:48:02.278840"
    },
    {
        "index1": "8.13",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:48:02.309840"
    },
    {
        "index1": "8.12",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:48:02.340842"
    },
    {
        "index1": "8.11",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:48:02.372841"
    },
    {
        "index1": "8.10",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:48:02.705077"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:48:04.904075"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T20:48:05.024087"
    },
    {
        "index1": "16.4",
        "index2": "17.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:48:05.034086"
    },
    {
        "index": "16.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:48:05.034086"
    },
    {
        "index1": "17.0",
        "index2": "17.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:48:05.035087"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T20:48:05.035087"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T20:48:05.193089"
    },
    {
        "view_id": "AssistantView",
        "view_class": "AssistantView",
        "sequence": "ShowView",
        "time": "2020-11-14T20:48:05.538244"
    },
    {
        "index": "17.0",
        "text": "Traceback (most recent call last):\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:48:05.544245"
    },
    {
        "index": "18.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_61424432')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:48:05.544245"
    },
    {
        "index": "18.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1171, in wrapper",
        "tags": "('io', 'stderr', 'frame_61424432', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:48:05.544245"
    },
    {
        "index": "18.113",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_61424432')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:48:05.545245"
    },
    {
        "index": "19.0",
        "text": "    result = method(self, *args, **kwargs)\n",
        "tags": "('io', 'stderr', 'frame_61424432')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:48:05.545245"
    },
    {
        "index": "20.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_59860528')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:48:05.545245"
    },
    {
        "index": "20.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1158, in wrapper",
        "tags": "('io', 'stderr', 'frame_59860528', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:48:05.545245"
    },
    {
        "index": "20.113",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_59860528')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:48:05.546245"
    },
    {
        "index": "21.0",
        "text": "    return method(self, *args, **kwargs)\n",
        "tags": "('io', 'stderr', 'frame_59860528')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:48:05.546245"
    },
    {
        "index": "22.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_64514256')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:48:05.546245"
    },
    {
        "index": "22.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1232, in _execute_prepared_user_code",
        "tags": "('io', 'stderr', 'frame_64514256', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:48:05.547246"
    },
    {
        "index": "22.133",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_64514256')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:48:05.547246"
    },
    {
        "index": "23.0",
        "text": "    exec(statements, global_vars)\n",
        "tags": "('io', 'stderr', 'frame_64514256')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:48:05.547246"
    },
    {
        "index": "24.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_64492240')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:48:05.548245"
    },
    {
        "index": "24.2",
        "text": "File \"C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py\", line 8, in <module>",
        "tags": "('io', 'stderr', 'frame_64492240', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:48:05.548245"
    },
    {
        "index": "24.75",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_64492240')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:48:05.548245"
    },
    {
        "index": "25.0",
        "text": "    print(rida)              # rida indeksiga 4\n",
        "tags": "('io', 'stderr', 'frame_64492240')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:48:05.548245"
    },
    {
        "index": "26.0",
        "text": "NameError: name 'rida' is not defined\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:48:05.549245"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T20:48:05.549245"
    },
    {
        "index": "27.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:48:05.550246"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:48:06.915407"
    },
    {
        "index1": "8.9",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:48:08.470879"
    },
    {
        "index1": "8.8",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:48:08.688017"
    },
    {
        "index1": "8.7",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:48:08.875097"
    },
    {
        "index1": "8.6",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:48:09.041195"
    },
    {
        "index": "8.6",
        "text": "t",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:48:09.684590"
    },
    {
        "index": "8.7",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:48:09.769656"
    },
    {
        "index": "8.8",
        "text": "k",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:48:10.725319"
    },
    {
        "index": "8.9",
        "text": "s",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:48:10.832404"
    },
    {
        "index": "8.10",
        "text": "t",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:48:11.041574"
    },
    {
        "index": "8.11",
        "text": "r",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:48:11.053574"
    },
    {
        "index1": "8.11",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:48:11.822237"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:48:12.397653"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T20:48:12.489715"
    },
    {
        "index1": "27.4",
        "index2": "28.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:48:12.500716"
    },
    {
        "index": "27.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:48:12.500716"
    },
    {
        "index1": "28.0",
        "index2": "28.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:48:12.501715"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T20:48:12.502717"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T20:48:12.661714"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T20:48:12.967946"
    },
    {
        "index": "28.0",
        "text": "T",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:48:12.967946"
    },
    {
        "index": "28.1",
        "text": "a lendab mesipuu poole.\r\n\r\nTa lendab lillest lillesse\r\nja lendab mesipuu poole;\r\nja t\u00f5useb k\u00f5uepilv \u00fclesse -\r\nta lendab mesipuu poole.\r\nJa langevad teele ka tuhanded:\r\nveel koju j\u00f5uavad tuhanded\r\nja viivad vaeva ja hoole\r\nja lendavad mesipuu poole.\n",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:48:12.968947"
    },
    {
        "index": "38.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:48:12.976946"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T20:48:37.210439"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T20:50:14.796686"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:50:14.798687"
    },
    {
        "index1": "1.1",
        "index2": "8.44",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:50:15.630036"
    },
    {
        "index": "1.1",
        "text": "from urllib.request import urlopen\n \n#valitud kuup\u00e4ev\np\u00e4ev = 24\nkuu = 10\naasta = 2018\n \n#paneme lingi kokku\nvastus = urlopen(\"http://meteo.physic.ut.ee/et/showperiod.php?type=setday&year=\"+str(aasta)+\"&month=\"+str(kuu)+\"&day=\"+str(p\u00e4ev))\n#loeme terve faili\nbaidid = vastus.read()\ntekst = baidid.decode()\n \n#otsime failis s\u00f5na 'keskmine', mis on \u00fcmbritsetud HTML-m\u00e4rgenditega\notsitav = \"<SMALL>keskmine</SMALL><BR><B>\"\nalgus = tekst.index(otsitav)       #meetod index tagastab otsitava s\u00f5na positsiooni alguse\ntemp_algus = algus + len(otsitav)  #indeks, kust tekstis v\u00f5ib leida temperatuuri\ndeg = tekst.index(\" &deg;\")        #peale temperatuuri on t\u00fchik ja s\u00fcmbol\ntemp = tekst[temp_algus:deg]       #l\u00f5ikame temperatuuri v\u00e4lja\n \n#v\u00e4ljastame kuup\u00e4eva ja keskmise temperatuuri\nprint(str(p\u00e4ev)+\".\"+str(kuu)+\".\"+str(aasta)+\": \"+str(temp))",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:50:15.634035"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Paste>>",
        "time": "2020-11-14T20:50:15.634035"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:50:16.597877"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T20:50:16.701943"
    },
    {
        "index1": "38.4",
        "index2": "39.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:50:16.711943"
    },
    {
        "index": "38.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:50:16.711943"
    },
    {
        "index1": "39.0",
        "index2": "39.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:50:16.712941"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T20:50:16.713941"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T20:50:16.873943"
    },
    {
        "view_id": "AssistantView",
        "view_class": "AssistantView",
        "sequence": "ShowView",
        "time": "2020-11-14T20:50:16.975941"
    },
    {
        "index": "39.0",
        "text": "Traceback (most recent call last):\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:50:16.981942"
    },
    {
        "index": "40.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_64074976')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:50:16.981942"
    },
    {
        "index": "40.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1208, in execute_source",
        "tags": "('io', 'stderr', 'frame_64074976', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:50:16.982942"
    },
    {
        "index": "40.120",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_64074976')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:50:16.982942"
    },
    {
        "index": "41.0",
        "text": "    root = self._prepare_ast(source, filename, mode)\n",
        "tags": "('io', 'stderr', 'frame_64074976')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:50:16.982942"
    },
    {
        "index": "42.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_64046944')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:50:16.983942"
    },
    {
        "index": "42.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1244, in _prepare_ast",
        "tags": "('io', 'stderr', 'frame_64046944', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:50:16.983942"
    },
    {
        "index": "42.118",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_64046944')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:50:16.983942"
    },
    {
        "index": "43.0",
        "text": "    return ast.parse(source, filename, mode)\n",
        "tags": "('io', 'stderr', 'frame_64046944')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:50:16.983942"
    },
    {
        "index": "44.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_61477632')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:50:16.984942"
    },
    {
        "index": "44.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\ast.py\", line 35, in parse",
        "tags": "('io', 'stderr', 'frame_61477632', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:50:16.984942"
    },
    {
        "index": "44.84",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_61477632')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:50:16.984942"
    },
    {
        "index": "45.0",
        "text": "    return compile(source, filename, mode, PyCF_ONLY_AST)\n",
        "tags": "('io', 'stderr', 'frame_61477632')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:50:16.985942"
    },
    {
        "index": "46.0",
        "text": "  ",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:50:16.985942"
    },
    {
        "index": "46.2",
        "text": "File \"C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py\", line 1",
        "tags": "('io', 'stderr', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:50:16.985942"
    },
    {
        "index": "46.62",
        "text": "\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:50:16.985942"
    },
    {
        "index": "47.0",
        "text": "    ffrom urllib.request import urlopen\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:50:16.986942"
    },
    {
        "index": "48.0",
        "text": "               ^\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:50:16.986942"
    },
    {
        "index": "49.0",
        "text": "SyntaxError: invalid syntax\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:50:16.986942"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T20:50:16.987942"
    },
    {
        "index": "50.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:50:16.988943"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:50:27.161604"
    },
    {
        "index": "1.1",
        "text": "=",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:50:27.331782"
    },
    {
        "index1": "1.1",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:50:28.101310"
    },
    {
        "index1": "1.0",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:50:28.288534"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:50:28.970089"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T20:50:29.090225"
    },
    {
        "index1": "50.4",
        "index2": "51.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:50:29.098225"
    },
    {
        "index": "50.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:50:29.098225"
    },
    {
        "index1": "51.0",
        "index2": "51.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:50:29.099225"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T20:50:29.100225"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T20:50:29.257226"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T20:50:29.372226"
    },
    {
        "index": "51.0",
        "text": "2",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:50:29.372226"
    },
    {
        "index": "51.1",
        "text": "4.10.2018: 3.6\n",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:50:29.373227"
    },
    {
        "index": "52.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:50:29.381226"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:50:37.899537"
    },
    {
        "index1": "6.11",
        "index2": "6.12",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:50:39.640898"
    },
    {
        "index": "6.11",
        "text": "7",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:50:39.643897"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:50:40.488634"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T20:50:40.603672"
    },
    {
        "index1": "52.4",
        "index2": "53.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:50:40.612672"
    },
    {
        "index": "52.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:50:40.612672"
    },
    {
        "index1": "53.0",
        "index2": "53.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:50:40.613672"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T20:50:40.614672"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T20:50:40.773673"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T20:50:40.887698"
    },
    {
        "index": "53.0",
        "text": "2",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:50:40.887698"
    },
    {
        "index": "53.1",
        "text": "4.10.2017: -1.0\n",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:50:40.887698"
    },
    {
        "index": "54.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:50:40.894697"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T20:51:06.008063"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T20:51:15.720646"
    },
    {
        "widget_id": 46743376,
        "widget_class": "ShellText",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "text_widget_context": "shell",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:51:15.722648"
    },
    {
        "widget_id": 92099408,
        "widget_class": "AutomaticNotebook",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:51:16.497093"
    },
    {
        "widget_id": 92100976,
        "widget_class": "EditorNotebook",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:51:17.876837"
    },
    {
        "widget_id": 46743376,
        "widget_class": "ShellText",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "text_widget_context": "shell",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:51:18.654389"
    },
    {
        "editor_id": 59555952,
        "editor_class": "Editor",
        "text_widget_id": 59556208,
        "text_widget_class": "CodeViewText",
        "sequence": "EditorTextCreated",
        "time": "2020-11-14T20:51:18.974554"
    },
    {
        "editor_id": 59555952,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\Lib\\ast.py",
        "sequence": "Open",
        "text_widget_id": 59556208,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T20:51:18.975556"
    },
    {
        "index1": "1.0",
        "index2": "2.0",
        "text_widget_id": 59556208,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:51:18.975556"
    },
    {
        "index": "1.0",
        "text": "\"\"\"\n    ast\n    ~~~\n\n    The `ast` module helps Python applications to process trees of the Python\n    abstract syntax grammar.  The abstract syntax itself might change with\n    each Python release; this module helps to find out programmatically what\n    the current grammar looks like and allows modifications of it.\n\n    An abstract syntax tree can be generated by passing `ast.PyCF_ONLY_AST` as\n    a flag to the `compile()` builtin function or by using the `parse()`\n    function from this module.  The result will be a tree of objects whose\n    classes all inherit from `ast.AST`.\n\n    A modified abstract syntax tree can be compiled into a Python code object\n    using the built-in `compile()` function.\n\n    Additionally various helper functions are provided that make working with\n    the trees simpler.  The main intention of the helper functions and this\n    module in general is to provide an easy to use interface for libraries\n    that work tightly with the python syntax (template engines for example).\n\n\n    :copyright: Copyright 2008 by Armin Ronacher.\n    :license: Python License.\n\"\"\"\nfrom _ast import *\n\n\ndef parse(source, filename='<unknown>', mode='exec'):\n    \"\"\"\n    Parse the source into an AST node.\n    Equivalent to compile(source, filename, mode, PyCF_ONLY_AST).\n    \"\"\"\n    return compile(source, filename, mode, PyCF_ONLY_AST)\n\n\ndef literal_eval(node_or_string):\n    \"\"\"\n    Safely evaluate an expression node or a string containing a Python\n    expression.  The string or node provided may only consist of the following\n    Python literal structures: strings, bytes, numbers, tuples, lists, dicts,\n    sets, booleans, and None.\n    \"\"\"\n    if isinstance(node_or_string, str):\n        node_or_string = parse(node_or_string, mode='eval')\n    if isinstance(node_or_string, Expression):\n        node_or_string = node_or_string.body\n    def _convert_num(node):\n        if isinstance(node, Constant):\n            if isinstance(node.value, (int, float, complex)):\n                return node.value\n        elif isinstance(node, Num):\n            return node.n\n        raise ValueError('malformed node or string: ' + repr(node))\n    def _convert_signed_num(node):\n        if isinstance(node, UnaryOp) and isinstance(node.op, (UAdd, USub)):\n            operand = _convert_num(node.operand)\n            if isinstance(node.op, UAdd):\n                return + operand\n            else:\n                return - operand\n        return _convert_num(node)\n    def _convert(node):\n        if isinstance(node, Constant):\n            return node.value\n        elif isinstance(node, (Str, Bytes)):\n            return node.s\n        elif isinstance(node, Num):\n            return node.n\n        elif isinstance(node, Tuple):\n            return tuple(map(_convert, node.elts))\n        elif isinstance(node, List):\n            return list(map(_convert, node.elts))\n        elif isinstance(node, Set):\n            return set(map(_convert, node.elts))\n        elif isinstance(node, Dict):\n            return dict(zip(map(_convert, node.keys),\n                            map(_convert, node.values)))\n        elif isinstance(node, NameConstant):\n            return node.value\n        elif isinstance(node, BinOp) and isinstance(node.op, (Add, Sub)):\n            left = _convert_signed_num(node.left)\n            right = _convert_num(node.right)\n            if isinstance(left, (int, float)) and isinstance(right, complex):\n                if isinstance(node.op, Add):\n                    return left + right\n                else:\n                    return left - right\n        return _convert_signed_num(node)\n    return _convert(node_or_string)\n\n\ndef dump(node, annotate_fields=True, include_attributes=False):\n    \"\"\"\n    Return a formatted dump of the tree in *node*.  This is mainly useful for\n    debugging purposes.  The returned string will show the names and the values\n    for fields.  This makes the code impossible to evaluate, so if evaluation is\n    wanted *annotate_fields* must be set to False.  Attributes such as line\n    numbers and column offsets are not dumped by default.  If this is wanted,\n    *include_attributes* can be set to True.\n    \"\"\"\n    def _format(node):\n        if isinstance(node, AST):\n            fields = [(a, _format(b)) for a, b in iter_fields(node)]\n            rv = '%s(%s' % (node.__class__.__name__, ', '.join(\n                ('%s=%s' % field for field in fields)\n                if annotate_fields else\n                (b for a, b in fields)\n            ))\n            if include_attributes and node._attributes:\n                rv += fields and ', ' or ' '\n                rv += ', '.join('%s=%s' % (a, _format(getattr(node, a)))\n                                for a in node._attributes)\n            return rv + ')'\n        elif isinstance(node, list):\n            return '[%s]' % ', '.join(_format(x) for x in node)\n        return repr(node)\n    if not isinstance(node, AST):\n        raise TypeError('expected AST, got %r' % node.__class__.__name__)\n    return _format(node)\n\n\ndef copy_location(new_node, old_node):\n    \"\"\"\n    Copy source location (`lineno` and `col_offset` attributes) from\n    *old_node* to *new_node* if possible, and return *new_node*.\n    \"\"\"\n    for attr in 'lineno', 'col_offset':\n        if attr in old_node._attributes and attr in new_node._attributes \\\n           and hasattr(old_node, attr):\n            setattr(new_node, attr, getattr(old_node, attr))\n    return new_node\n\n\ndef fix_missing_locations(node):\n    \"\"\"\n    When you compile a node tree with compile(), the compiler expects lineno and\n    col_offset attributes for every node that supports them.  This is rather\n    tedious to fill in for generated nodes, so this helper adds these attributes\n    recursively where not already set, by setting them to the values of the\n    parent node.  It works recursively starting at *node*.\n    \"\"\"\n    def _fix(node, lineno, col_offset):\n        if 'lineno' in node._attributes:\n            if not hasattr(node, 'lineno'):\n                node.lineno = lineno\n            else:\n                lineno = node.lineno\n        if 'col_offset' in node._attributes:\n            if not hasattr(node, 'col_offset'):\n                node.col_offset = col_offset\n            else:\n                col_offset = node.col_offset\n        for child in iter_child_nodes(node):\n            _fix(child, lineno, col_offset)\n    _fix(node, 1, 0)\n    return node\n\n\ndef increment_lineno(node, n=1):\n    \"\"\"\n    Increment the line number of each node in the tree starting at *node* by *n*.\n    This is useful to \"move code\" to a different location in a file.\n    \"\"\"\n    for child in walk(node):\n        if 'lineno' in child._attributes:\n            child.lineno = getattr(child, 'lineno', 0) + n\n    return node\n\n\ndef iter_fields(node):\n    \"\"\"\n    Yield a tuple of ``(fieldname, value)`` for each field in ``node._fields``\n    that is present on *node*.\n    \"\"\"\n    for field in node._fields:\n        try:\n            yield field, getattr(node, field)\n        except AttributeError:\n            pass\n\n\ndef iter_child_nodes(node):\n    \"\"\"\n    Yield all direct child nodes of *node*, that is, all fields that are nodes\n    and all items of fields that are lists of nodes.\n    \"\"\"\n    for name, field in iter_fields(node):\n        if isinstance(field, AST):\n            yield field\n        elif isinstance(field, list):\n            for item in field:\n                if isinstance(item, AST):\n                    yield item\n\n\ndef get_docstring(node, clean=True):\n    \"\"\"\n    Return the docstring for the given node or None if no docstring can\n    be found.  If the node provided does not have docstrings a TypeError\n    will be raised.\n\n    If *clean* is `True`, all tabs are expanded to spaces and any whitespace\n    that can be uniformly removed from the second line onwards is removed.\n    \"\"\"\n    if not isinstance(node, (AsyncFunctionDef, FunctionDef, ClassDef, Module)):\n        raise TypeError(\"%r can't have docstrings\" % node.__class__.__name__)\n    if not(node.body and isinstance(node.body[0], Expr)):\n        return None\n    node = node.body[0].value\n    if isinstance(node, Str):\n        text = node.s\n    elif isinstance(node, Constant) and isinstance(node.value, str):\n        text = node.value\n    else:\n        return None\n    if clean:\n        import inspect\n        text = inspect.cleandoc(text)\n    return text\n\n\ndef walk(node):\n    \"\"\"\n    Recursively yield all descendant nodes in the tree starting at *node*\n    (including *node* itself), in no specified order.  This is useful if you\n    only want to modify nodes in place and don't care about the context.\n    \"\"\"\n    from collections import deque\n    todo = deque([node])\n    while todo:\n        node = todo.popleft()\n        todo.extend(iter_child_nodes(node))\n        yield node\n\n\nclass NodeVisitor(object):\n    \"\"\"\n    A node visitor base class that walks the abstract syntax tree and calls a\n    visitor function for every node found.  This function may return a value\n    which is forwarded by the `visit` method.\n\n    This class is meant to be subclassed, with the subclass adding visitor\n    methods.\n\n    Per default the visitor functions for the nodes are ``'visit_'`` +\n    class name of the node.  So a `TryFinally` node visit function would\n    be `visit_TryFinally`.  This behavior can be changed by overriding\n    the `visit` method.  If no visitor function exists for a node\n    (return value `None`) the `generic_visit` visitor is used instead.\n\n    Don't use the `NodeVisitor` if you want to apply changes to nodes during\n    traversing.  For this a special visitor exists (`NodeTransformer`) that\n    allows modifications.\n    \"\"\"\n\n    def visit(self, node):\n        \"\"\"Visit a node.\"\"\"\n        method = 'visit_' + node.__class__.__name__\n        visitor = getattr(self, method, self.generic_visit)\n        return visitor(node)\n\n    def generic_visit(self, node):\n        \"\"\"Called if no explicit visitor function exists for a node.\"\"\"\n        for field, value in iter_fields(node):\n            if isinstance(value, list):\n                for item in value:\n                    if isinstance(item, AST):\n                        self.visit(item)\n            elif isinstance(value, AST):\n                self.visit(value)\n\n\nclass NodeTransformer(NodeVisitor):\n    \"\"\"\n    A :class:`NodeVisitor` subclass that walks the abstract syntax tree and\n    allows modification of nodes.\n\n    The `NodeTransformer` will walk the AST and use the return value of the\n    visitor methods to replace or remove the old node.  If the return value of\n    the visitor method is ``None``, the node will be removed from its location,\n    otherwise it is replaced with the return value.  The return value may be the\n    original node in which case no replacement takes place.\n\n    Here is an example transformer that rewrites all occurrences of name lookups\n    (``foo``) to ``data['foo']``::\n\n       class RewriteName(NodeTransformer):\n\n           def visit_Name(self, node):\n               return copy_location(Subscript(\n                   value=Name(id='data', ctx=Load()),\n                   slice=Index(value=Str(s=node.id)),\n                   ctx=node.ctx\n               ), node)\n\n    Keep in mind that if the node you're operating on has child nodes you must\n    either transform the child nodes yourself or call the :meth:`generic_visit`\n    method for the node first.\n\n    For nodes that were part of a collection of statements (that applies to all\n    statement nodes), the visitor may also return a list of nodes rather than\n    just a single node.\n\n    Usually you use the transformer like this::\n\n       node = YourTransformer().visit(node)\n    \"\"\"\n\n    def generic_visit(self, node):\n        for field, old_value in iter_fields(node):\n            if isinstance(old_value, list):\n                new_values = []\n                for value in old_value:\n                    if isinstance(value, AST):\n                        value = self.visit(value)\n                        if value is None:\n                            continue\n                        elif not isinstance(value, AST):\n                            new_values.extend(value)\n                            continue\n                    new_values.append(value)\n                old_value[:] = new_values\n            elif isinstance(old_value, AST):\n                new_node = self.visit(old_value)\n                if new_node is None:\n                    delattr(node, field)\n                else:\n                    setattr(node, field, new_node)\n        return node\n",
        "tags": "None",
        "text_widget_id": 59556208,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:51:18.984554"
    },
    {
        "widget_id": 92099408,
        "widget_class": "AutomaticNotebook",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:51:19.735780"
    },
    {
        "widget_id": 46743376,
        "widget_class": "ShellText",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "text_widget_context": "shell",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:51:21.732764"
    },
    {
        "widget_id": 46743376,
        "widget_class": "ShellText",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "text_widget_context": "shell",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:51:22.487270"
    },
    {
        "widget_id": 46743376,
        "widget_class": "ShellText",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "text_widget_context": "shell",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:51:23.021508"
    },
    {
        "widget_id": 46743376,
        "widget_class": "ShellText",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "text_widget_context": "shell",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:51:24.069819"
    },
    {
        "widget_id": 46743376,
        "widget_class": "ShellText",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "text_widget_context": "shell",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:51:25.010212"
    },
    {
        "widget_id": 46743376,
        "widget_class": "ShellText",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "text_widget_context": "shell",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:51:25.819337"
    },
    {
        "widget_id": 46743376,
        "widget_class": "ShellText",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "text_widget_context": "shell",
        "sequence": "<Button-3>",
        "time": "2020-11-14T20:51:27.267872"
    },
    {
        "widget_id": 59556208,
        "widget_class": "CodeViewText",
        "text_widget_id": 59556208,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:51:27.268872"
    },
    {
        "widget_id": 59556208,
        "widget_class": "CodeViewText",
        "text_widget_id": 59556208,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:51:29.462320"
    },
    {
        "widget_id": 92100976,
        "widget_class": "EditorNotebook",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:51:34.404789"
    },
    {
        "widget_id": 46743376,
        "widget_class": "ShellText",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "text_widget_context": "shell",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:51:38.047652"
    },
    {
        "editor_id": 59455504,
        "editor_class": "Editor",
        "text_widget_id": 59456976,
        "text_widget_class": "CodeViewText",
        "sequence": "EditorTextCreated",
        "time": "2020-11-14T20:51:38.173758"
    },
    {
        "editor_id": 59455504,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\Lib\\site-packages\\thonny\\backend.py",
        "sequence": "Open",
        "text_widget_id": 59456976,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T20:51:38.175758"
    },
    {
        "index1": "1.0",
        "index2": "2.0",
        "text_widget_id": 59456976,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:51:38.175758"
    },
    {
        "index": "1.0",
        "text": "# -*- coding: utf-8 -*-\n\nimport ast\nimport builtins\nimport copy\nimport functools\nimport importlib\nimport inspect\nimport io\nimport logging\nimport os.path\nimport pkgutil\nimport pydoc\nimport re\nimport signal\nimport site\nimport subprocess\nimport sys\nimport tokenize\nimport traceback\nimport types\nimport warnings\nfrom collections import namedtuple\nfrom importlib.machinery import PathFinder, SourceFileLoader\nfrom threading import Thread\n\nimport __main__  # @UnresolvedImport\nimport _ast\nimport thonny\nfrom thonny.common import (\n    BackendEvent,\n    DebuggerCommand,\n    DebuggerResponse,\n    FrameInfo,\n    InlineCommand,\n    InlineResponse,\n    InputSubmission,\n    TextRange,\n    ToplevelCommand,\n    ToplevelResponse,\n    UserError,\n    ValueInfo,\n    parse_message,\n    path_startswith,\n    range_contains_smaller,\n    range_contains_smaller_or_equal,\n    serialize_message,\n    get_exe_dirs, get_augmented_system_path, update_system_path)\nimport queue\n\nBEFORE_STATEMENT_MARKER = \"_thonny_hidden_before_stmt\"\nBEFORE_EXPRESSION_MARKER = \"_thonny_hidden_before_expr\"\nAFTER_STATEMENT_MARKER = \"_thonny_hidden_after_stmt\"\nAFTER_EXPRESSION_MARKER = \"_thonny_hidden_after_expr\"\n\nlogger = logging.getLogger(\"thonny.backend\")\n\n_CONFIG_FILENAME = os.path.join(thonny.THONNY_USER_DIR, \"backend_configuration.ini\")\n\nTempFrameInfo = namedtuple(\n    \"TempFrameInfo\",\n    [\n        \"system_frame\",\n        \"locals\",\n        \"globals\",\n        \"event\",\n        \"focus\",\n        \"node_tags\",\n        \"current_statement\",\n        \"current_root_expression\",\n        \"current_evaluations\",\n    ],\n)\n\n\n_vm = None\n\n\nclass VM:\n    def __init__(self):\n        global _vm\n        _vm = self\n\n        self._ini = None\n        self._command_handlers = {}\n        self._object_info_tweakers = []\n        self._import_handlers = {}\n        self._input_queue = queue.Queue()\n        self._ast_postprocessors = []\n        self._main_dir = os.path.dirname(sys.modules[\"thonny\"].__file__)\n        self._heap = (\n            {}\n        )  # WeakValueDictionary would be better, but can't store reference to None\n        self._source_info_by_frame = {}\n        site.sethelper()  # otherwise help function is not available\n        pydoc.pager = pydoc.plainpager  # otherwise help command plays tricks\n        self._install_fake_streams()\n        self._current_executor = None\n        self._io_level = 0\n\n        init_msg = self._fetch_command()\n\n        original_argv = sys.argv.copy()\n        original_path = sys.path.copy()\n\n        # clean up path\n        sys.path = [d for d in sys.path if d != \"\"]\n\n        # start in shell mode\n        sys.argv[:] = [\"\"]  # empty \"script name\"\n        sys.path.insert(0, \"\")  # current dir\n        \n        # clean __main__ global scope\n        for key in list(__main__.__dict__.keys()):\n            if not key.startswith(\"__\") or key in {\"__file__\", \"__cached__\"}:\n                del __main__.__dict__[key]\n\n        # unset __doc__, then exec dares to write doc of the script there\n        __main__.__doc__ = None\n        \n        self._frontend_sys_path = init_msg[\"frontend_sys_path\"]\n        self._load_shared_modules()\n        self._load_plugins()\n\n        self.send_message(\n            ToplevelResponse(\n                main_dir=self._main_dir,\n                original_argv=original_argv,\n                original_path=original_path,\n                argv=sys.argv,\n                path=sys.path,\n                usersitepackages=site.getusersitepackages()\n                    if site.ENABLE_USER_SITE\n                    else None,\n                prefix=sys.prefix,\n                welcome_text=\"Python \" + _get_python_version_string(),\n                executable=sys.executable,\n                exe_dirs=get_exe_dirs(),\n                in_venv=(\n                    hasattr(sys, \"base_prefix\")\n                    and sys.base_prefix != sys.prefix\n                    or hasattr(sys, \"real_prefix\")\n                    and getattr(sys, \"real_prefix\") != sys.prefix\n                ),\n                python_version=_get_python_version_string(),\n                cwd=os.getcwd(),\n            )\n        )\n\n        self._install_signal_handler()\n\n    def mainloop(self):\n        try:\n            while True:\n                try:\n                    cmd = self._fetch_command()\n                    if isinstance(cmd, InputSubmission):\n                        self._input_queue.put(cmd)\n                    elif isinstance(cmd, ToplevelCommand):\n                        self._source_info_by_frame = {}\n                        self._input_queue = queue.Queue()\n                        self.handle_command(cmd)\n                    else:\n                        self.handle_command(cmd)\n                except KeyboardInterrupt:\n                    logger.exception(\"Interrupt in mainloop\")\n                    # Interrupt must always result in waiting_toplevel_command state\n                    # Don't show error messages, as the interrupted command may have been InlineCommand\n                    # (handlers of ToplevelCommands in normal cases catch the interrupt and provide\n                    # relevant message)\n                    self.send_message(ToplevelResponse())\n        except Exception:\n            logger.exception(\"Crash in mainloop\")\n            traceback.print_exc()\n\n    def add_command(self, command_name, handler):\n        \"\"\"Handler should be 1-argument function taking command object.\n        \n        Handler may return None (in this case no response is sent to frontend)\n        or a BackendResponse\n        \"\"\"\n        self._command_handlers[command_name] = handler\n    \n    def add_object_info_tweaker(self, tweaker):\n        \"\"\"Tweaker should be 2-argument function taking value and export record\"\"\"\n        self._object_info_tweakers.append(tweaker)\n\n    def add_import_handler(self, module_name, handler):\n        if module_name not in self._import_handlers:\n            self._import_handlers[module_name] = []\n        self._import_handlers[module_name].append(handler)\n    \n    def add_ast_postprocessor(self, func):\n        self._ast_postprocessors.append(func)\n    \n    def get_main_module(self):\n        return __main__\n\n    def handle_command(self, cmd):\n        assert isinstance(cmd, (ToplevelCommand, InlineCommand))\n\n        def create_error_response(**kw):\n            if isinstance(cmd, ToplevelCommand):\n                return ToplevelResponse(command_name=cmd.name, **kw)\n            else:\n                return InlineResponse(command_name=cmd.name, **kw)\n\n        if cmd.name in self._command_handlers:\n            handler = self._command_handlers[cmd.name]\n        else:\n            handler = getattr(self, \"_cmd_\" + cmd.name, None)\n\n        if handler is None:\n            response = create_error_response(error=\"Unknown command: \" + cmd.name)\n        else:\n            try:\n                response = handler(cmd)\n            except SystemExit:\n                # Must be caused by Thonny or plugins code\n                if isinstance(cmd, ToplevelCommand):\n                    traceback.print_exc()\n                response = create_error_response(SystemExit=True)\n            except UserError as e:\n                sys.stderr.write(str(e) + \"\\n\")\n                response = create_error_response()\n            except KeyboardInterrupt:\n                response = create_error_response(\n                    user_exception=self._prepare_user_exception()\n                )\n            except Exception:\n                _report_internal_error()\n                response = create_error_response(\n                    context_info=\"other unhandled exception\"\n                )\n\n        if response is False:\n            # Command doesn't want to send any response\n            return\n\n        if response is None and isinstance(cmd, ToplevelCommand):\n            # create simple default response\n            response = ToplevelResponse(command_name=cmd.name)\n\n        # TODO: add these in response creation time in a helper function\n        if isinstance(response, ToplevelResponse):\n            response[\"gui_is_active\"] = (\n                self._get_tkinter_default_root() is not None\n                or self._get_qt_app() is not None\n            )\n\n        self.send_message(response)\n\n    def get_option(self, name, default=None):\n        section, subname = self._parse_option_name(name)\n        val = self._get_ini().get(section, subname, fallback=default)\n        try:\n            return ast.literal_eval(val)\n        except Exception:\n            return val\n\n    def set_option(self, name, value):\n        ini = self._get_ini()\n        section, subname = self._parse_option_name(name)\n        if not ini.has_section(section):\n            ini.add_section(section)\n        if not isinstance(value, str):\n            value = repr(value)\n        ini.set(section, subname, value)\n        self.save_settings()\n    \n    def switch_env_to_script_mode(self, cmd):\n        if \"\" in sys.path:\n            sys.path.remove(\"\") # current directory\n            \n        filename = cmd.args[0]\n        if os.path.isfile(filename):\n            sys.path.insert(0, os.path.abspath(os.path.dirname(filename))) \n            __main__.__dict__[\"__file__\"] = filename\n        \n    \n    def _parse_option_name(self, name):\n        if \".\" in name:\n            return name.split(\".\", 1)\n        else:\n            return \"general\", name\n\n    def _get_ini(self):\n        if self._ini is None:\n            import configparser\n\n            self._ini = configparser.ConfigParser(interpolation=None)\n            self._ini.read(_CONFIG_FILENAME)\n\n        return self._ini\n\n    def save_settings(self):\n        if self._ini is None:\n            return\n\n        with open(_CONFIG_FILENAME, \"w\") as fp:\n            self._ini.write(fp)\n    \n    \n    def _custom_import(self, *args, **kw):\n        module = self._original_import(*args, **kw)\n        \n        if not hasattr(module, \"__name__\"):\n            return module\n        \n        # module specific handlers\n        for handler in self._import_handlers.get(module.__name__, []):\n            try:\n                handler(module)\n            except Exception:\n                _report_internal_error()\n\n        # general handlers\n        for handler in self._import_handlers.get(\"*\", []):\n            try:\n                handler(module)\n            except Exception:\n                _report_internal_error()\n\n        return module\n\n    def _load_shared_modules(self):\n        self.load_modules_with_frontend_path([\"parso\", \"jedi\", \"thonnycontrib\", \"six\", \"asttokens\"])\n\n    def load_modules_with_frontend_path(self, names):\n        from importlib import import_module\n        original_sys_path = sys.path\n        try:\n            sys.path = sys.path + self._frontend_sys_path\n            for name in names:\n                try:\n                    import_module(name)\n                except ImportError:\n                    pass\n        finally:\n            sys.path = original_sys_path\n\n    def _load_plugins(self):\n        # built-in plugins\n        import thonny.plugins.backend  # pylint: disable=redefined-outer-name\n\n        self._load_plugins_from_path(\n            thonny.plugins.backend.__path__, \"thonny.plugins.backend.\"\n        )\n\n        # 3rd party plugins from namespace package\n        try:\n            import thonnycontrib.backend  # @UnresolvedImport\n        except ImportError:\n            # No 3rd party plugins installed\n            pass\n        else:\n            self._load_plugins_from_path(\n                thonnycontrib.backend.__path__, \"thonnycontrib.backend.\"\n            )\n\n    def _load_plugins_from_path(self, path, prefix):\n        load_function_name = \"load_plugin\"\n        for _, module_name, _ in sorted(\n            pkgutil.iter_modules(path, prefix), key=lambda x: x[1]\n        ):\n            try:\n                m = importlib.import_module(module_name)\n                if hasattr(m, load_function_name):\n                    f = getattr(m, load_function_name)\n                    sig = inspect.signature(f)\n                    if len(sig.parameters) == 0:\n                        f()\n                    else:\n                        f(self)\n            except Exception:\n                logger.exception(\"Failed loading plugin '\" + module_name + \"'\")\n\n    def _install_signal_handler(self):\n        def signal_handler(signal_, frame):\n            raise KeyboardInterrupt(\"Execution interrupted\")\n\n        if os.name == \"nt\":\n            signal.signal(signal.SIGBREAK, signal_handler)\n        else:\n            signal.signal(signal.SIGINT, signal_handler)\n\n    def _cmd_cd(self, cmd):\n        if len(cmd.args) == 1:\n            path = cmd.args[0]\n            try:\n                os.chdir(path)\n                return ToplevelResponse()\n            except FileNotFoundError:\n                raise UserError(\"No such folder: \" + path)\n        else:\n            raise UserError(\"cd takes one parameter\")\n\n    def _cmd_Run(self, cmd):\n        self.switch_env_to_script_mode(cmd)\n        return self._execute_file(cmd, SimpleRunner)\n\n    def _cmd_run(self, cmd):\n        return self._execute_file(cmd, SimpleRunner)\n\n    def _cmd_FastDebug(self, cmd):\n        self.switch_env_to_script_mode(cmd)\n        return self._execute_file(cmd, FastTracer)\n\n    def _cmd_Debug(self, cmd):\n        self.switch_env_to_script_mode(cmd)\n        return self._execute_file(cmd, NiceTracer)\n\n    def _cmd_debug(self, cmd):\n        return self._execute_file(cmd, NiceTracer)\n\n    def _cmd_execute_source(self, cmd):\n        \"\"\"Executes Python source entered into shell\"\"\"\n        filename = \"<pyshell>\"\n        ws_stripped_source = cmd.source.strip()\n        source = ws_stripped_source.strip(\"?\")\n        num_stripped_question_marks = len(ws_stripped_source) - len(source)\n\n        # let's see if it's single expression or something more complex\n        try:\n            root = ast.parse(source, filename=filename, mode=\"exec\")\n        except SyntaxError as e:\n            error = \"\".join(traceback.format_exception_only(type(e), e))\n            sys.stderr.write(error)\n            return ToplevelResponse()\n\n        assert isinstance(root, ast.Module)\n\n        if len(root.body) == 1 and isinstance(root.body[0], ast.Expr):\n            mode = \"eval\"\n        elif len(root.body) > 1 and isinstance(root.body[-1], ast.Expr):\n            mode = \"exec+eval\"\n        else:\n            mode = \"exec\"\n\n        result_attributes = self._execute_source(\n            source,\n            filename,\n            mode,\n            NiceTracer if getattr(cmd, \"debug_mode\", False) else SimpleRunner,\n            cmd,\n        )\n\n        result_attributes[\"num_stripped_question_marks\"] = num_stripped_question_marks\n\n        return ToplevelResponse(command_name=\"execute_source\", **result_attributes)\n\n    def _cmd_execute_system_command(self, cmd):\n        env = dict(os.environ).copy()\n        encoding = \"utf-8\"\n        env[\"PYTHONIOENCODING\"] = encoding\n        # Make sure this python interpreter and its scripts are available\n        # in PATH \n        update_system_path(env, get_augmented_system_path(get_exe_dirs()))\n        popen_kw = dict(\n            stdout=subprocess.PIPE,\n            stderr=subprocess.PIPE,\n            shell=True,\n            env=env,\n            universal_newlines=True,\n        )\n        \n        if sys.version_info >= (3,6):\n            popen_kw[\"errors\"] = \"replace\"\n            popen_kw[\"encoding\"] = encoding\n        \n        assert cmd.cmd_line.startswith(\"!\")\n        cmd_line = cmd.cmd_line[1:]\n        proc = subprocess.Popen(cmd_line, **popen_kw)\n        \n        def copy_stream(source, target):\n            while True:\n                c = source.readline()\n                if c == \"\":\n                    break\n                else:\n                    target.write(c)\n        \n        copy_out = Thread(target=lambda: copy_stream(proc.stdout, sys.stdout), daemon=True)\n        copy_err = Thread(target=lambda: copy_stream(proc.stderr, sys.stderr), daemon=True)\n        \n        copy_out.start()\n        copy_err.start()\n        try:\n            proc.wait()\n        except KeyboardInterrupt as e:\n            print(str(e), file=sys.stderr)\n        \n        copy_out.join()\n        copy_err.join()\n\n    def _cmd_process_gui_events(self, cmd):\n        # advance the event loop\n\n        try:\n            # First try Tkinter:\n            root = self._get_tkinter_default_root()\n            if root is not None:\n                import tkinter\n\n                # http://bugs.python.org/issue989712\n                # http://bugs.python.org/file6090/run.py.diff\n                while root.dooneevent(tkinter._tkinter.DONT_WAIT):\n                    pass\n            else:\n                # Try Qt only when Tkinter is not used\n                app = self._get_qt_app()\n                if app is not None:\n                    app.processEvents()\n\n        except Exception:\n            pass\n\n        return False\n\n    def _cmd_get_globals(self, cmd):\n        warnings.warn(\"_cmd_get_globals is deprecated for CPython\")\n        try:\n            return InlineResponse(\n                \"get_globals\",\n                module_name=cmd.module_name,\n                globals=self.export_globals(cmd.module_name),\n            )\n        except Exception as e:\n            return InlineResponse(\n                \"get_globals\", module_name=cmd.module_name, error=str(e)\n            )\n\n    def _cmd_get_frame_info(self, cmd):\n        atts = {}\n        try:\n            # TODO: make it work also in past states\n            frame, location = self._lookup_frame_by_id(cmd[\"frame_id\"])\n            if frame is None:\n                atts[\"error\"] = \"Frame not found\"\n            else:\n                atts[\"code_name\"] = frame.f_code.co_name\n                atts[\"module_name\"] = frame.f_globals[\"__name__\"]\n                atts[\"locals\"] = (\n                    None\n                    if frame.f_locals is frame.f_globals\n                    else self.export_variables(frame.f_locals)\n                )\n                atts[\"globals\"] = self.export_variables(frame.f_globals)\n                atts[\"freevars\"] = frame.f_code.co_freevars\n                atts[\"location\"] = location\n        except Exception as e:\n            atts[\"error\"] = str(e)\n\n        return InlineResponse(\"get_frame_info\", frame_id=cmd.frame_id, **atts)\n\n    def _cmd_get_active_distributions(self, cmd):\n        try:\n            # if it is called after first installation to user site packages\n            # this dir is not yet in sys.path\n            if (\n                site.ENABLE_USER_SITE\n                and site.getusersitepackages()\n                and os.path.exists(site.getusersitepackages())\n                and site.getusersitepackages() not in sys.path\n            ):\n                # insert before first site packages item\n                for i, item in enumerate(sys.path):\n                    if \"site-packages\" in item or \"dist-packages\" in item:\n                        sys.path.insert(i, site.getusersitepackages())\n                        break\n                else:\n                    sys.path.append(site.getusersitepackages())\n\n            import pkg_resources\n\n            pkg_resources._initialize_master_working_set()\n            dists = {\n                dist.key: {\n                    \"project_name\": dist.project_name,\n                    \"key\": dist.key,\n                    \"location\": dist.location,\n                    \"version\": dist.version,\n                }\n                for dist in pkg_resources.working_set\n            }  # pylint: disable=not-an-iterable\n\n            return InlineResponse(\n                \"get_active_distributions\",\n                distributions=dists,\n                usersitepackages=site.getusersitepackages()\n                if site.ENABLE_USER_SITE\n                else None,\n            )\n        except Exception:\n            return InlineResponse(\n                \"get_active_distributions\", error=traceback.format_exc()\n            )\n\n    def _cmd_get_locals(self, cmd):\n        for frame in inspect.stack():\n            if id(frame) == cmd.frame_id:\n                return InlineResponse(\n                    \"get_locals\", locals=self.export_variables(frame.f_locals)\n                )\n\n        raise RuntimeError(\"Frame '{0}' not found\".format(cmd.frame_id))\n\n    def _cmd_get_heap(self, cmd):\n        result = {}\n        for key in self._heap:\n            result[key] = self.export_value(self._heap[key])\n\n        return InlineResponse(\"get_heap\", heap=result)\n\n    def _cmd_shell_autocomplete(self, cmd):\n        error = None\n        try:\n            import jedi\n        except ImportError:\n            completions = []\n            error = \"Could not import jedi\"\n        else:\n            try:\n                # with warnings.catch_warnings():\n                interpreter = jedi.Interpreter(cmd.source, [__main__.__dict__])\n                completions = self._export_completions(interpreter.completions())\n            except Exception as e:\n                completions = []\n                error = \"Autocomplete error: \" + str(e)\n\n        return InlineResponse(\n            \"shell_autocomplete\",\n            source=cmd.source,\n            completions=completions,\n            error=error,\n        )\n\n    def _cmd_editor_autocomplete(self, cmd):\n        error = None\n        try:\n            import jedi\n\n            self._debug(jedi.__file__, sys.path)\n            with warnings.catch_warnings():\n                script = jedi.Script(cmd.source, cmd.row, cmd.column, cmd.filename)\n                completions = self._export_completions(script.completions())\n\n        except ImportError:\n            completions = []\n            error = \"Could not import jedi\"\n        except Exception as e:\n            completions = []\n            error = \"Autocomplete error: \" + str(e)\n\n        return InlineResponse(\n            \"editor_autocomplete\",\n            source=cmd.source,\n            row=cmd.row,\n            column=cmd.column,\n            filename=cmd.filename,\n            completions=completions,\n            error=error,\n        )\n\n    def _cmd_Reset(self, cmd):\n        if len(cmd.args) == 0:\n            # nothing to do, because Reset always happens in fresh process\n            return ToplevelResponse(\n                command_name=\"Reset\",\n                welcome_text=\"Python \" + _get_python_version_string(),\n                executable=sys.executable,\n            )\n        else:\n            raise UserError(\"Command 'Reset' doesn't take arguments\")\n\n    def _export_completions(self, jedi_completions):\n        result = []\n        for c in jedi_completions:\n            if not c.name.startswith(\"__\"):\n                record = {\n                    \"name\": c.name,\n                    \"complete\": c.complete,\n                    \"type\": c.type,\n                    \"description\": c.description,\n                }\n                \"\"\" TODO: \n                try:\n                    if c.type in [\"class\", \"module\", \"function\"]:\n                        if c.type == \"function\":\n                            record[\"docstring\"] = c.docstring()\n                        else:\n                            record[\"docstring\"] = c.description + \"\\n\" + c.docstring()\n                except Exception:\n                    pass\n                \"\"\"\n                result.append(record)\n        return result\n\n    def _cmd_get_object_info(self, cmd):\n        if (\n            isinstance(self._current_executor, NiceTracer)\n            and self._current_executor.is_in_past()\n        ):\n            info = {\"id\": cmd.object_id, \"error\": \"past info not available\"}\n\n        elif cmd.object_id in self._heap:\n            value = self._heap[cmd.object_id]\n            attributes = {}\n            if cmd.include_attributes:\n                for name in dir(value):\n                    if not name.startswith(\"__\") or cmd.all_attributes:\n                        # attributes[name] = inspect.getattr_static(value, name)\n                        try:\n                            attributes[name] = getattr(value, name)\n                        except Exception:\n                            pass\n\n            self._heap[id(type(value))] = type(value)\n            info = {\n                \"id\": cmd.object_id,\n                \"repr\": repr(value),\n                \"type\": str(type(value)),\n                \"full_type_name\": str(type(value))\n                .replace(\"<class '\", \"\")\n                .replace(\"'>\", \"\")\n                .strip(),\n                \"type_id\": id(type(value)),\n                \"attributes\": self.export_variables(attributes),\n            }\n\n            if isinstance(value, io.TextIOWrapper):\n                self._add_file_handler_info(value, info)\n            elif isinstance(\n                value,\n                (\n                    types.BuiltinFunctionType,\n                    types.BuiltinMethodType,\n                    types.FunctionType,\n                    types.LambdaType,\n                    types.MethodType,\n                ),\n            ):\n                self._add_function_info(value, info)\n            elif isinstance(value, (list, tuple, set)):\n                self._add_elements_info(value, info)\n            elif isinstance(value, dict):\n                self._add_entries_info(value, info)\n            elif hasattr(value, \"image_data\"):\n                info[\"image_data\"] = value.image_data\n\n            for tweaker in self._object_info_tweakers:\n                try:\n                    tweaker(value, info, cmd)\n                except Exception:\n                    logger.exception(\"Failed object info tweaker: \" + str(tweaker))\n\n        else:\n            info = {\"id\": cmd.object_id, \"error\": \"object info not available\"}\n\n        return InlineResponse(\"get_object_info\", id=cmd.object_id, info=info)\n\n    def _get_tkinter_default_root(self):\n        # tkinter._default_root is not None,\n        # when window has been created and mainloop isn't called or hasn't ended yet\n        tkinter = sys.modules.get(\"tkinter\")\n        if tkinter is not None:\n            return getattr(tkinter, \"_default_root\", None)\n        else:\n            return None\n\n    def _get_qt_app(self):\n        mod = sys.modules.get(\"PyQt5.QtCore\")\n        if mod is None:\n            mod = sys.modules.get(\"PyQt4.QtCore\")\n        if mod is None:\n            mod = sys.modules.get(\"PySide.QtCore\")\n        if mod is None:\n            return None\n\n        app_class = getattr(mod, \"QCoreApplication\", None)\n        if app_class is not None:\n            try:\n                return app_class.instance()\n            except Exception:\n                return None\n        else:\n            return None\n\n    def _add_file_handler_info(self, value, info):\n        try:\n            assert isinstance(value.name, str)\n            assert value.mode in (\"r\", \"rt\", \"tr\", \"br\", \"rb\")\n            assert value.errors in (\"strict\", None)\n            assert value.newlines is None or value.tell() > 0\n            # TODO: cache the content\n            # TODO: don't read too big files\n            with open(value.name, encoding=value.encoding) as f:\n                info[\"file_encoding\"] = f.encoding\n                info[\"file_content\"] = f.read()\n                info[\"file_tell\"] = value.tell()\n        except Exception as e:\n            info[\"file_error\"] = \"Could not get file content, error:\" + str(e)\n\n    def _add_function_info(self, value, info):\n        try:\n            info[\"source\"] = inspect.getsource(value)\n        except Exception:\n            pass\n\n    def _add_elements_info(self, value, info):\n        info[\"elements\"] = []\n        for element in value:\n            info[\"elements\"].append(self.export_value(element))\n\n    def _add_entries_info(self, value, info):\n        info[\"entries\"] = []\n        for key in value:\n            info[\"entries\"].append(\n                (self.export_value(key), self.export_value(value[key]))\n            )\n\n    def _execute_file(self, cmd, executor_class):\n        # args are accepted only in Run and Debug,\n        # and were stored in sys.argv already in VM.__init__\n        # TODO: are they?\n\n        if len(cmd.args) >= 1:\n            sys.argv = cmd.args  \n            filename = cmd.args[0]\n            if os.path.isabs(filename):\n                full_filename = filename\n            else:\n                full_filename = os.path.abspath(filename)\n\n            with tokenize.open(full_filename) as fp:\n                source = fp.read()\n\n            result_attributes = self._execute_source(\n                source, full_filename, \"exec\", executor_class, cmd,\n                self._ast_postprocessors\n            )\n            result_attributes[\"filename\"] = full_filename\n            return ToplevelResponse(command_name=cmd.name, **result_attributes)\n        else:\n            raise UserError(\"Command '%s' takes at least one argument\" % cmd.name)\n\n    def _execute_source(self, source, filename, execution_mode, executor_class,\n                        cmd, ast_postprocessors=[]):\n        self._current_executor = executor_class(self, cmd)\n\n        try:\n            return self._current_executor.execute_source(\n                source, filename, execution_mode, ast_postprocessors\n            )\n        finally:\n            self._current_executor = None\n\n    def _install_fake_streams(self):\n        self._original_stdin = sys.stdin\n        self._original_stdout = sys.stdout\n        self._original_stderr = sys.stderr\n\n        # yes, both out and err will be directed to out (but with different tags)\n        # this allows client to see the order of interleaving writes to stdout/stderr\n        sys.stdin = VM.FakeInputStream(self, sys.stdin)\n        sys.stdout = VM.FakeOutputStream(self, sys.stdout, \"stdout\")\n        sys.stderr = VM.FakeOutputStream(self, sys.stdout, \"stderr\")\n\n        # fake it properly: replace also \"backup\" streams\n        sys.__stdin__ = sys.stdin\n        sys.__stdout__ = sys.stdout\n        sys.__stderr__ = sys.stderr\n\n    def _install_custom_import(self):\n        self._original_import = builtins.__import__\n        builtins.__import__ = self._custom_import\n\n    def _restore_original_import(self):\n        builtins.__import__ = self._original_import\n\n    def _fetch_command(self):\n        line = self._original_stdin.readline()\n        if line == \"\":\n            logger.info(\"Read stdin EOF\")\n            sys.exit()\n        cmd = parse_message(line)\n        return cmd\n\n    def send_message(self, msg):\n        if \"cwd\" not in msg:\n            msg[\"cwd\"] = os.getcwd()\n\n        if isinstance(msg, ToplevelResponse) and \"globals\" not in msg:\n            msg[\"globals\"] = self.export_globals()\n\n        self._original_stdout.write(serialize_message(msg) + \"\\n\")\n        self._original_stdout.flush()\n\n    def export_value(self, value, max_repr_length=5000):\n        self._heap[id(value)] = value\n        try:\n            rep = repr(value)\n        except Exception:\n            # See https://bitbucket.org/plas/thonny/issues/584/problem-with-thonnys-back-end-obj-no\n            rep = \"??? <repr error>\"\n            \n        if len(rep) > max_repr_length:\n            rep = rep[:max_repr_length] + \"\u2026\"\n\n        return ValueInfo(id(value), rep)\n\n    def export_variables(self, variables):\n        result = {}\n        for name in variables:\n            if not name.startswith(\"__\"):\n                result[name] = self.export_value(variables[name], 100)\n\n        return result\n\n    def export_globals(self, module_name=\"__main__\"):\n        if module_name in sys.modules:\n            return self.export_variables(sys.modules[module_name].__dict__)\n        else:\n            raise RuntimeError(\"Module '{0}' is not loaded\".format(module_name))\n\n    def _debug(self, *args):\n        logger.debug(\"VM: \" + str(args))\n\n    def _enter_io_function(self):\n        self._io_level += 1\n\n    def _exit_io_function(self):\n        self._io_level -= 1\n\n    def is_doing_io(self):\n        return self._io_level > 0\n\n    def _export_stack(self, newest_frame, skip_checker=None):\n        result = []\n\n        system_frame = newest_frame\n\n        while system_frame is not None:\n            module_name = system_frame.f_globals[\"__name__\"]\n            code_name = system_frame.f_code.co_name\n            \n            if not skip_checker or not skip_checker(system_frame):\n                source, firstlineno, in_library = self._get_frame_source_info(system_frame)\n    \n                result.insert(\n                    0,\n                    FrameInfo(\n                        # TODO: can this id be reused by a later frame?\n                        # Need to store the refernce to avoid GC?\n                        # I guess it is not required, as id will be required\n                        # only for stacktrace inspection, and sys.last_exception\n                        # will have the reference anyway\n                        # (NiceTracer has its own reference keeping)\n                        id=id(system_frame),\n                        filename=system_frame.f_code.co_filename,\n                        module_name=module_name,\n                        code_name=code_name,\n                        locals=self.export_variables(system_frame.f_locals),\n                        globals=self.export_variables(system_frame.f_globals),\n                        freevars=system_frame.f_code.co_freevars,\n                        source=source,\n                        lineno=system_frame.f_lineno,\n                        firstlineno=firstlineno,\n                        in_library=in_library,\n                        event=\"line\",\n                        focus=TextRange(\n                            system_frame.f_lineno, 0, system_frame.f_lineno + 1, 0\n                        ),\n                        node_tags=None,\n                        current_statement=None,\n                        current_evaluations=None,\n                        current_root_expression=None,\n                    ),\n                )\n\n            if module_name == \"__main__\" and code_name == \"<module>\":\n                # this was last frame relevant to the user\n                break\n\n            system_frame = system_frame.f_back\n\n        return result\n\n    def _lookup_frame_by_id(self, frame_id):\n        def lookup_from_stack(frame):\n            if frame is None:\n                return None\n            elif id(frame) == frame_id:\n                return frame\n            else:\n                return lookup_from_stack(frame.f_back)\n\n        def lookup_from_tb(entry):\n            if entry is None:\n                return None\n            elif id(entry.tb_frame) == frame_id:\n                return entry.tb_frame\n            else:\n                return lookup_from_tb(entry.tb_next)\n\n        result = lookup_from_stack(inspect.currentframe())\n        if result is not None:\n            return result, \"stack\"\n\n        if getattr(sys, \"last_traceback\"):\n            result = lookup_from_tb(getattr(sys, \"last_traceback\"))\n            if result:\n                return result, \"last_traceback\"\n\n        _, _, tb = sys.exc_info()\n        return lookup_from_tb(tb), \"current_exception\"\n\n    def _get_frame_source_info(self, frame):\n        fid = id(frame)\n        if fid not in self._source_info_by_frame:\n            self._source_info_by_frame[fid] = _fetch_frame_source_info(frame)\n\n        return self._source_info_by_frame[fid]\n\n    def _prepare_user_exception(self):\n        e_type, e_value, e_traceback = sys.exc_info()\n        sys.last_type, sys.last_value, sys.last_traceback = (\n            e_type,\n            e_value,\n            e_traceback,\n        )\n\n        processed_tb = traceback.extract_tb(e_traceback)\n\n        tb = e_traceback\n        while tb.tb_next is not None:\n            tb = tb.tb_next\n        last_frame = tb.tb_frame\n\n        if e_type is SyntaxError:\n            # Don't show ast frame\n            while (\n                last_frame.f_code.co_filename\n                and last_frame.f_code.co_filename == ast.__file__\n            ):\n                last_frame = last_frame.f_back\n\n        if e_type is SyntaxError:\n            msg = (\n                traceback.format_exception_only(e_type, e_value)[-1]\n                .replace(e_type.__name__ + \":\", \"\")\n                .strip()\n            )\n        else:\n            msg = str(e_value)\n\n        return {\n            \"type_name\": e_type.__name__,\n            \"message\": msg,\n            \"stack\": self._export_stack(last_frame),\n            \"items\": format_exception_with_frame_info(e_type, e_value, e_traceback),\n            \"filename\": getattr(e_value, \"filename\", processed_tb[-1].filename),\n            \"lineno\": getattr(e_value, \"lineno\", processed_tb[-1].lineno),\n            \"col_offset\": getattr(e_value, \"offset\", None),\n            \"line\": getattr(e_value, \"text\", processed_tb[-1].line),\n        }\n\n    class FakeStream:\n        def __init__(self, vm, target_stream):\n            self._vm = vm\n            self._target_stream = target_stream\n            self._processed_symbol_count = 0\n\n        def isatty(self):\n            return True\n\n        def __getattr__(self, name):\n            # TODO: is it safe to perform those other functions without notifying vm\n            # via _enter_io_function?\n            return getattr(self._target_stream, name)\n\n    class FakeOutputStream(FakeStream):\n        def __init__(self, vm, target_stream, stream_name):\n            VM.FakeStream.__init__(self, vm, target_stream)\n            self._stream_name = stream_name\n\n        def write(self, data):\n            try:\n                self._vm._enter_io_function()\n                if data != \"\":\n                    self._vm.send_message(\n                        BackendEvent(\n                            \"ProgramOutput\", stream_name=self._stream_name, data=data\n                        )\n                    )\n                    self._processed_symbol_count += len(data)\n            finally:\n                self._vm._exit_io_function()\n\n        def writelines(self, lines):\n            try:\n                self._vm._enter_io_function()\n                self.write(\"\".join(lines))\n            finally:\n                self._vm._exit_io_function()\n\n    class FakeInputStream(FakeStream):\n        def _generic_read(self, method, limit=-1):\n            # is there some queued input?\n            if not self._vm._input_queue.empty():\n                cmd = self._vm._input_queue.get()\n                self._processed_symbol_count += len(cmd.data)\n                return cmd.data\n            \n            # new input needs to be requested\n            try:\n                self._vm._enter_io_function()\n                self._vm.send_message(\n                    BackendEvent(\"InputRequest\", method=method, limit=limit)\n                )\n\n                while True:\n                    cmd = self._vm._fetch_command()\n                    if isinstance(cmd, InputSubmission):\n                        self._processed_symbol_count += len(cmd.data)\n                        return cmd.data\n                    elif isinstance(cmd, InlineCommand):\n                        self._vm.handle_command(cmd)\n                    else:\n                        raise RuntimeError(\n                            \"Wrong type of command when waiting for input\"\n                        )\n            finally:\n                self._vm._exit_io_function()\n\n        def read(self, limit=-1):\n            return self._generic_read(\"read\", limit)\n\n        def readline(self, limit=-1):\n            return self._generic_read(\"readline\", limit)\n\n        def readlines(self, limit=-1):\n            return self._generic_read(\"readlines\", limit)\n        \n        def __next__(self):\n            return self.readline()\n        \n        def __iter__(self):\n            return self\n\n\ndef prepare_hooks(method):\n    @functools.wraps(method)\n    def wrapper(self, *args, **kwargs):\n        try:\n            sys.meta_path.insert(0, self)\n            self._vm._install_custom_import()\n            return method(self, *args, **kwargs)\n        finally:\n            del sys.meta_path[0]\n            if hasattr(self._vm, \"_original_import\"):\n                self._vm._restore_original_import()\n\n    return wrapper\n\n\ndef return_execution_result(method):\n    @functools.wraps(method)\n    def wrapper(self, *args, **kwargs):\n        try:\n            result = method(self, *args, **kwargs)\n            if result is not None:\n                return result\n            return {\"context_info\": \"after normal execution\"}\n        except Exception:\n            return {\"user_exception\": self._vm._prepare_user_exception()}\n\n    return wrapper\n\n\nclass Executor:\n    def __init__(self, vm, original_cmd):\n        self._vm = vm\n        self._original_cmd = original_cmd\n        self._main_module_path = None\n\n    def execute_source(self, source, filename, mode, ast_postprocessors):\n        if isinstance(source, str):\n            # TODO: simplify this or make sure encoding is correct\n            source = source.encode(\"utf-8\")\n\n        if os.path.exists(filename):\n            self._main_module_path = filename\n\n        global_vars = __main__.__dict__\n        statements = expression = None\n\n        try:\n            if mode == \"exec+eval\":\n                assert not ast_postprocessors \n                # Useful in shell to get last expression value in multi-statement block\n                root = self._prepare_ast(source, filename, \"exec\")\n                statements = compile(ast.Module(body=root.body[:-1]), filename, \"exec\")\n                expression = compile(\n                    ast.Expression(root.body[-1].value), filename, \"eval\"\n                )\n            else:\n                root = self._prepare_ast(source, filename, mode)\n                if mode == \"eval\":\n                    assert not ast_postprocessors \n                    expression = compile(root, filename, mode)\n                elif mode == \"exec\":\n                    for func in ast_postprocessors:\n                        func(root)\n                    statements = compile(root, filename, mode)\n                else:\n                    raise ValueError(\"Unknown mode\")\n\n            return self._execute_prepared_user_code(statements, expression, global_vars)\n        except SyntaxError:\n            return {\"user_exception\": self._vm._prepare_user_exception()}\n        except SystemExit:\n            return {\"SystemExit\": True}\n        except Exception:\n            _report_internal_error()\n            return {}\n\n    @return_execution_result\n    @prepare_hooks\n    def _execute_prepared_user_code(self, statements, expression, global_vars):\n        if statements:\n            exec(statements, global_vars)\n        if expression:\n            value = eval(expression, global_vars)\n            if value is not None:\n                builtins._ = value\n            return {\"value_info\": self._vm.export_value(value)}\n\n    def find_spec(self, fullname, path=None, target=None):\n        \"\"\"override in subclass for custom-loading user modules\"\"\"\n        return None\n\n    def _prepare_ast(self, source, filename, mode):\n        return ast.parse(source, filename, mode)\n\n\nclass SimpleRunner(Executor):\n    pass\n\n\nclass Tracer(Executor):\n    def __init__(self, vm, original_cmd):\n        super().__init__(vm, original_cmd)\n        self._thonny_src_dir = os.path.dirname(sys.modules[\"thonny\"].__file__)\n        self._fresh_exception = None\n\n        # first (automatic) stepping command depends on whether any breakpoints were set or not\n        breakpoints = self._original_cmd.breakpoints\n        assert isinstance(breakpoints, dict)\n        if breakpoints:\n            command_name = \"resume\"\n        else:\n            command_name = \"step_into\"\n\n        self._current_command = DebuggerCommand(\n            command_name,\n            state=None,\n            focus=None,\n            frame_id=None,\n            exception=None,\n            breakpoints=breakpoints,\n        )\n\n    def _trace(self, frame, event, arg):\n        raise NotImplementedError()\n\n    def _frame_is_alive(self, frame_id):\n        raise NotImplementedError()\n\n    def _execute_prepared_user_code(self, statements, expression, global_vars):\n        try:\n            sys.settrace(self._trace)\n            if hasattr(sys, \"breakpointhook\"):\n                old_breakpointhook = sys.breakpointhook\n                sys.breakpointhook = self._breakpointhook\n\n            return super()._execute_prepared_user_code(\n                statements, expression, global_vars\n            )\n        finally:\n            sys.settrace(None)\n            if hasattr(sys, \"breakpointhook\"):\n                sys.breakpointhook = old_breakpointhook\n\n    def _should_skip_frame(self, frame):\n        # For some reason Pylint doesn't see inspect.CO_GENERATOR and such\n        # pylint: disable=no-member\n        code = frame.f_code\n\n        return (\n            code is None\n            or code.co_filename is None\n            or not self._is_interesting_module_file(code.co_filename)\n            or code.co_flags & inspect.CO_GENERATOR  # @UndefinedVariable\n            or sys.version_info >= (3, 5)\n            and code.co_flags & inspect.CO_COROUTINE  # @UndefinedVariable\n            or sys.version_info >= (3, 5)\n            and code.co_flags & inspect.CO_ITERABLE_COROUTINE  # @UndefinedVariable\n            or sys.version_info >= (3, 6)\n            and code.co_flags & inspect.CO_ASYNC_GENERATOR  # @UndefinedVariable\n            or \"importlib._bootstrap\" in code.co_filename\n            or self._vm.is_doing_io()\n            or path_startswith(code.co_filename, self._thonny_src_dir)\n        )\n\n    def _is_interesting_module_file(self, path):\n        # interesting files are files directly in current directory\n        # or under the same directory as main module\n        # or the ones with breakpoints\n        return (\n            path_startswith(path, os.getcwd())\n            or self._main_module_path is not None\n            and path_startswith(path, os.path.dirname(self._main_module_path))\n            or path in self._current_command[\"breakpoints\"]\n        )\n\n    def _is_interesting_exception(self, frame):\n        # interested only in exceptions in command frame or its parent frames\n        return id(frame) == self._current_command[\n            \"frame_id\"\n        ] or not self._frame_is_alive(self._current_command[\"frame_id\"])\n\n    def _fetch_next_debugger_command(self):\n        while True:\n            cmd = self._vm._fetch_command()\n            if isinstance(cmd, InlineCommand):\n                self._vm.handle_command(cmd)\n            else:\n                assert isinstance(cmd, DebuggerCommand)\n                return cmd\n\n    def _register_affected_frame(self, exception_obj, frame):\n        if not hasattr(exception_obj, \"_affected_frame_ids_\"):\n            exception_obj._affected_frame_ids_ = set()\n        exception_obj._affected_frame_ids_.add(id(frame))\n\n    def _get_current_exception(self):\n        if self._fresh_exception is not None:\n            return self._fresh_exception\n        else:\n            return sys.exc_info()\n\n    def _export_exception_info(self):\n        exc = self._get_current_exception()\n\n        if exc[0] is None:\n            return {\n                \"id\": None,\n                \"msg\": None,\n                \"type_name\": None,\n                \"lines_with_frame_info\": None,\n                \"affected_frame_ids\": set(),\n                \"is_fresh\": False, \n            }\n        else:\n            return {\n                \"id\": id(exc[1]),\n                \"msg\": str(exc[1]),\n                \"type_name\": exc[0].__name__,\n                \"lines_with_frame_info\": format_exception_with_frame_info(*exc),\n                \"affected_frame_ids\": exc[1]._affected_frame_ids_,\n                \"is_fresh\": exc == self._fresh_exception, \n            }\n\n    def _get_breakpoints_with_cursor_position(self, cmd):\n        if cmd[\"cursor_position\"] is None:\n            return cmd[\"breakpoints\"]\n        else:\n            result = copy.copy(cmd[\"breakpoints\"])\n            path, line = cmd[\"cursor_position\"]\n            if path not in result:\n                result[path] = set()\n            result[path].add(line)\n            return result\n\n    def _breakpointhook(self, *args, **kw):\n        pass\n\n\nclass FastTracer(Tracer):\n    def __init__(self, vm, original_cmd):\n        super().__init__(vm, original_cmd)\n\n        self._alive_frame_ids = set()\n\n    def _breakpointhook(self, *args, **kw):\n        frame = inspect.currentframe()\n        while self._should_skip_frame(frame):\n            frame = frame.f_back\n        self._report_current_state(frame)\n        self._current_command = self._fetch_next_debugger_command()\n\n    def _trace(self, frame, event, arg):\n\n        # is this frame interesting at all?\n        if event == \"call\" and self._should_skip_frame(frame):\n            return None\n\n        if event == \"call\":\n            self._fresh_exception = None\n            # can we skip this frame?\n            if (\n                self._current_command.name == \"step_over\"\n                and not self._current_command.breakpoints\n            ):\n                return None\n            else:\n                self._alive_frame_ids.add(id(frame))\n\n        elif event == \"return\":\n            self._fresh_exception = None\n            self._alive_frame_ids.remove(id(frame))\n\n        elif event == \"exception\":\n            self._fresh_exception = arg\n            self._register_affected_frame(arg[1], frame)\n            if self._is_interesting_exception(frame):\n                # UI doesn't know about separate exception events\n                self._report_current_state(frame)\n                self._current_command = self._fetch_next_debugger_command()\n\n        elif event == \"line\":\n            self._fresh_exception = None\n\n            handler = getattr(self, \"_cmd_%s_completed\" % self._current_command.name)\n            if handler(frame, self._current_command):\n                self._report_current_state(frame)\n                self._current_command = self._fetch_next_debugger_command()\n\n        else:\n            self._fresh_exception = None\n\n        return self._trace\n\n    def _report_current_state(self, frame):\n        msg = DebuggerResponse(\n            stack=self._vm._export_stack(frame, self._should_skip_frame),\n            in_present=True,\n            io_symbol_count=None,\n            exception_info=self._export_exception_info(),\n            tracer_class=\"FastTracer\",\n        )\n\n        self._vm.send_message(msg)\n\n    def _cmd_step_into_completed(self, frame, cmd):\n        return True\n\n    def _cmd_step_over_completed(self, frame, cmd):\n        frame_id = id(frame)\n        return (\n            frame_id == cmd.frame_id\n            or cmd.frame_id not in self._alive_frame_ids\n            or self._at_a_breakpoint(frame, cmd)\n        )\n\n    def _cmd_step_out_completed(self, frame, cmd):\n        return cmd.frame_id not in self._alive_frame_ids or self._at_a_breakpoint(\n            frame, cmd\n        )\n\n    def _cmd_resume_completed(self, frame, cmd):\n        return self._at_a_breakpoint(frame, cmd)\n\n    def _cmd_run_to_cursor_completed(self, frame, cmd):\n        return self._at_a_breakpoint(\n            frame, cmd, self._get_breakpoints_with_cursor_position(cmd)\n        )\n\n    def _at_a_breakpoint(self, frame, cmd, breakpoints=None):\n        # TODO: try re-entering same line in loop\n        if breakpoints is None:\n            breakpoints = cmd.breakpoints\n\n        filename = frame.f_code.co_filename\n        return filename in breakpoints and frame.f_lineno in breakpoints[filename]\n\n    def _frame_is_alive(self, frame_id):\n        return frame_id in self._alive_frame_ids\n\n\nclass NiceTracer(Tracer):\n    def __init__(self, vm, original_cmd):\n        super().__init__(vm, original_cmd)\n        self._instrumented_files = set()\n        self._install_marker_functions()\n        self._custom_stack = []\n        self._saved_states = []\n        self._current_state_index = 0\n\n        from collections import Counter\n\n        self._fulltags = Counter()\n        self._nodes = {}\n\n    def _breakpointhook(self, *args, **kw):\n        self._report_state(len(self._saved_states) - 1)\n        self._current_command = self._fetch_next_debugger_command()\n\n    def _install_marker_functions(self):\n        # Make dummy marker functions universally available by putting them\n        # into builtin scope\n        self.marker_function_names = {\n            BEFORE_STATEMENT_MARKER,\n            AFTER_STATEMENT_MARKER,\n            BEFORE_EXPRESSION_MARKER,\n            AFTER_EXPRESSION_MARKER,\n        }\n\n        for name in self.marker_function_names:\n            if not hasattr(builtins, name):\n                setattr(builtins, name, getattr(self, name))\n\n    def _prepare_ast(self, source, filename, mode):\n        # ast_utils need to be imported after asttokens \n        # is (custom-)imported \n        from thonny import ast_utils\n        root = ast.parse(source, filename, mode)\n\n        ast_utils.mark_text_ranges(root, source)\n        self._tag_nodes(root)\n        self._insert_expression_markers(root)\n        self._insert_statement_markers(root)\n        self._insert_for_target_markers(root)\n        self._instrumented_files.add(filename)\n\n        return root\n\n    def _should_skip_frame(self, frame):\n        code = frame.f_code\n        return (\n            # never skip marker functions\n            code.co_name not in self.marker_function_names  \n            and (\n                super()._should_skip_frame(frame)\n                or code.co_filename not in self._instrumented_files\n            )\n        )\n\n    def find_spec(self, fullname, path=None, target=None):\n        spec = PathFinder.find_spec(fullname, path, target)\n\n        if (\n            spec is not None\n            and isinstance(spec.loader, SourceFileLoader)\n            and getattr(spec, \"origin\", None)\n            and self._is_interesting_module_file(spec.origin)\n        ):\n            spec.loader = FancySourceFileLoader(fullname, spec.origin, self)\n            return spec\n        else:\n            return super().find_spec(fullname, path, target)\n\n    def is_in_past(self):\n        return self._current_state_index < len(self._saved_states) - 1\n\n    def _trace(self, frame, event, arg):\n        try:\n            return self._trace_and_catch(frame, event, arg)\n        except BaseException:\n            traceback.print_exc()\n            sys.settrace(None)\n            return None\n            \n    def _trace_and_catch(self, frame, event, arg):\n        \"\"\"\n        1) Detects marker calls and responds to client queries in these spots\n        2) Maintains a customized view of stack\n        \"\"\"\n        # frame skipping test should be done only in new frames\n        if event == \"call\" and self._should_skip_frame(frame):\n            return None\n\n        code_name = frame.f_code.co_name\n\n        if event == \"call\":\n            self._fresh_exception = (\n                None\n            )  # some code is running, therefore exception is not fresh anymore\n\n            if code_name in self.marker_function_names:\n                # the main thing\n                if code_name == BEFORE_STATEMENT_MARKER:\n                    event = \"before_statement\"\n                elif code_name == AFTER_STATEMENT_MARKER:\n                    event = \"after_statement\"\n                elif code_name == BEFORE_EXPRESSION_MARKER:\n                    event = \"before_expression\"\n                elif code_name == AFTER_EXPRESSION_MARKER:\n                    event = \"after_expression\"\n                else:\n                    raise AssertionError(\"Unknown marker function\")\n\n                marker_function_args = frame.f_locals.copy()\n                node = self._nodes[marker_function_args[\"node_id\"]]\n\n                del marker_function_args[\"self\"]\n\n                if \"call_function\" not in node.tags:\n                    self._handle_progress_event(\n                        frame.f_back, event, marker_function_args, node\n                    )\n                self._try_interpret_as_again_event(\n                    frame.f_back, event, marker_function_args, node\n                )\n\n            else:\n                # Calls to proper functions.\n                # Client doesn't care about these events,\n                # it cares about \"before_statement\" events in the first statement of the body\n                self._custom_stack.append(CustomStackFrame(frame, \"call\"))\n\n        elif event == \"exception\":\n            self._fresh_exception = arg\n            self._register_affected_frame(arg[1], frame)\n\n            # use the state prepared by previous event\n            last_custom_frame = self._custom_stack[-1]\n            assert last_custom_frame.system_frame == frame\n\n            assert last_custom_frame.event.startswith(\"before_\")\n            pseudo_event = last_custom_frame.event.replace(\"before_\", \"after_\").replace(\n                \"_again\", \"\"\n            )\n            self._handle_progress_event(frame, pseudo_event, {}, last_custom_frame.node)\n\n        elif event == \"return\":\n            self._fresh_exception = None\n\n            if code_name not in self.marker_function_names:\n                self._custom_stack.pop()\n                if len(self._custom_stack) == 0:\n                    # We popped last frame, this means our program has ended.\n                    # There may be more events coming from upper (system) frames\n                    # but we're not interested in those\n                    sys.settrace(None)\n            else:\n                pass\n\n        else:\n            self._fresh_exception = None\n\n        return self._trace\n\n    def _handle_progress_event(self, frame, event, args, node):\n        self._save_current_state(frame, event, args, node)\n        self._respond_to_commands()\n\n    def _save_current_state(self, frame, event, args, node):\n        \"\"\"\n        Updates custom stack and stores the state\n        \n        self._custom_stack always keeps last info,\n        which gets exported as FrameInfos to _saved_states[\"stack\"]\n        \"\"\"\n        focus = TextRange(\n            node.lineno, node.col_offset, node.end_lineno, node.end_col_offset\n        )\n\n        custom_frame = self._custom_stack[-1]\n        custom_frame.event = event\n        custom_frame.focus = focus\n        custom_frame.node = node\n        custom_frame.node_tags = node.tags\n\n        if self._saved_states:\n            prev_state = self._saved_states[-1]\n            prev_state_frame = self._create_actual_active_frame(prev_state)\n        else:\n            prev_state = None\n            prev_state_frame = None\n\n        # store information about current statement / expression\n        if \"statement\" in event:\n            custom_frame.current_statement = focus\n\n            if event == \"before_statement_again\":\n                # keep the expression information from last event\n                pass\n            else:\n                custom_frame.current_root_expression = None\n                custom_frame.current_evaluations = []\n        else:\n            assert \"expression\" in event\n            assert prev_state_frame is not None\n\n            # see whether current_root_expression needs to be updated\n            prev_root_expression = prev_state_frame.current_root_expression\n            if event == \"before_expression\" and (\n                id(frame) != id(prev_state_frame.system_frame)\n                or \"statement\" in prev_state_frame.event\n                or not range_contains_smaller_or_equal(prev_root_expression, focus)\n            ):\n                custom_frame.current_root_expression = focus\n                custom_frame.current_evaluations = []\n\n            if event == \"after_expression\" and \"value\" in args:\n                # value is missing in case of exception\n                custom_frame.current_evaluations.append(\n                    (focus, self._vm.export_value(args[\"value\"]))\n                )\n\n        # Save the snapshot.\n        # Check if we can share something with previous state\n        if (\n            prev_state is not None\n            and id(prev_state_frame.system_frame) == id(frame)\n            and prev_state[\"exception_value\"] is self._get_current_exception()[1]\n            and prev_state[\"fresh_exception_id\"] == id(self._fresh_exception)\n            and (\"before\" in event or \"skipexport\" in node.tags)\n        ):\n\n            exception_info = prev_state[\"exception_info\"]\n            # share the stack ...\n            stack = prev_state[\"stack\"]\n            # ... but override certain things\n            active_frame_overrides = {\n                \"event\": custom_frame.event,\n                \"focus\": custom_frame.focus,\n                \"node_tags\": custom_frame.node_tags,\n                \"current_root_expression\": custom_frame.current_root_expression,\n                \"current_evaluations\": custom_frame.current_evaluations.copy(),\n                \"current_statement\": custom_frame.current_statement,\n            }\n        else:\n            # make full export\n            stack = self._export_stack()\n            exception_info = self._export_exception_info()\n            active_frame_overrides = {}\n\n        msg = {\n            \"stack\": stack,\n            \"active_frame_overrides\": active_frame_overrides,\n            \"in_client_log\": False,\n            \"io_symbol_count\": (\n                sys.stdin._processed_symbol_count\n                + sys.stdout._processed_symbol_count\n                + sys.stderr._processed_symbol_count\n            ),\n            \"exception_value\": self._get_current_exception()[1],\n            \"fresh_exception_id\": id(self._fresh_exception),\n            \"exception_info\": exception_info,\n        }\n\n        self._saved_states.append(msg)\n\n    def _respond_to_commands(self):\n        \"\"\"Tries to respond to client commands with states collected so far.\n        Returns if these states don't suffice anymore and Python needs\n        to advance the program\"\"\"\n\n        # while the state for current index is already saved:\n        while self._current_state_index < len(self._saved_states):\n            state = self._saved_states[self._current_state_index]\n\n            # Get current state's most recent frame (together with overrides\n            frame = self._create_actual_active_frame(state)\n\n            # Is this state meant to be seen?\n            if \"skip_\" + frame.event not in frame.node_tags:\n                # if True:\n                # Has the command completed?\n                tester = getattr(\n                    self, \"_cmd_\" + self._current_command.name + \"_completed\"\n                )\n                cmd_complete = tester(frame, self._current_command)\n\n                if cmd_complete:\n                    state[\"in_client_log\"] = True\n                    self._report_state(self._current_state_index)\n                    self._current_command = self._fetch_next_debugger_command()\n\n            if self._current_command.name == \"step_back\":\n                if self._current_state_index == 0:\n                    # Already in first state. Remain in this loop\n                    pass\n                else:\n                    assert self._current_state_index > 0\n                    # Current event is no longer present in GUI \"undo log\"\n                    self._saved_states[self._current_state_index][\n                        \"in_client_log\"\n                    ] = False\n                    self._current_state_index -= 1\n            else:\n                # Other commands move the pointer forward\n                self._current_state_index += 1\n\n    def _create_actual_active_frame(self, state):\n        return state[\"stack\"][-1]._replace(**state[\"active_frame_overrides\"])\n\n    def _report_state(self, state_index):\n        in_present = state_index == len(self._saved_states) - 1\n        if in_present:\n            # For reported new events re-export stack to make sure it is not shared.\n            # (There is tiny chance that sharing previous state\n            # after executing BinOp, Attribute, Compare or Subscript\n            # was not the right choice. See tag_nodes for more.)\n            # Re-exporting reduces the harm by showing correct data at least\n            # for present states.\n            self._saved_states[state_index][\"stack\"] = self._export_stack()\n\n        # need to make a copy for applying overrides\n        # and removing helper fields without modifying original\n        state = self._saved_states[state_index].copy()\n        state[\"stack\"] = state[\"stack\"].copy()\n\n        state[\"in_present\"] = in_present\n        if not in_present:\n            # for past states fix the newest frame\n            state[\"stack\"][-1] = self._create_actual_active_frame(state)\n\n        del state[\"exception_value\"]\n        del state[\"active_frame_overrides\"]\n\n        # Convert stack of TempFrameInfos to stack of FrameInfos\n        new_stack = []\n        for tframe in state[\"stack\"]:\n            system_frame = tframe.system_frame\n            module_name = system_frame.f_globals[\"__name__\"]\n            code_name = system_frame.f_code.co_name\n\n            source, firstlineno, in_library = self._vm._get_frame_source_info(\n                system_frame\n            )\n\n            assert firstlineno is not None, \"nofir \" + str(system_frame)\n\n            new_stack.append(\n                FrameInfo(\n                    id=id(system_frame),\n                    filename=system_frame.f_code.co_filename,\n                    module_name=module_name,\n                    code_name=code_name,\n                    locals=tframe.locals,\n                    globals=tframe.globals,\n                    freevars=system_frame.f_code.co_freevars,\n                    source=source,\n                    lineno=system_frame.f_lineno,\n                    firstlineno=firstlineno,\n                    in_library=in_library,\n                    event=tframe.event,\n                    focus=tframe.focus,\n                    node_tags=tframe.node_tags,\n                    current_statement=tframe.current_statement,\n                    current_evaluations=tframe.current_evaluations,\n                    current_root_expression=tframe.current_root_expression,\n                )\n            )\n\n        state[\"stack\"] = new_stack\n        state[\"tracer_class\"] = \"NiceTracer\"\n\n        self._vm.send_message(DebuggerResponse(**state))\n\n    def _try_interpret_as_again_event(\n        self, frame, original_event, original_args, original_node\n    ):\n        \"\"\"\n        Some after_* events can be interpreted also as \n        \"before_*_again\" events (eg. when last argument of a call was \n        evaluated, then we are just before executing the final stage of the call)\n        \"\"\"\n\n        if original_event == \"after_expression\":\n            value = original_args.get(\"value\")\n\n            if (\n                \"last_child\" in original_node.tags\n                or \"or_arg\" in original_node.tags\n                and value\n                or \"and_arg\" in original_node.tags\n                and not value\n            ):\n\n                # there may be explicit exceptions\n                if (\n                    \"skip_after_statement_again\" in original_node.parent_node.tags\n                    or \"skip_after_expression_again\" in original_node.parent_node.tags\n                ):\n                    return\n\n                # next step will be finalizing evaluation of parent of current expr\n                # so let's say we're before that parent expression\n                again_args = {\"node_id\": id(original_node.parent_node)}\n                again_event = (\n                    \"before_expression_again\"\n                    if \"child_of_expression\" in original_node.tags\n                    else \"before_statement_again\"\n                )\n\n                self._handle_progress_event(\n                    frame, again_event, again_args, original_node.parent_node\n                )\n\n    def _cmd_step_over_completed(self, frame, cmd):\n        \"\"\"\n        Identifies the moment when piece of code indicated by cmd.frame_id and cmd.focus\n        has completed execution (either successfully or not).\n        \"\"\"\n\n        if self._at_a_breakpoint(frame, cmd):\n            return True\n\n        # Make sure the correct frame_id is selected\n        if id(frame.system_frame) == cmd.frame_id:\n            # We're in the same frame\n            if \"before_\" in cmd.state:\n                if not range_contains_smaller_or_equal(cmd.focus, frame.focus):\n                    # Focus has changed, command has completed\n                    return True\n                else:\n                    # Keep running\n                    return False\n            elif \"after_\" in cmd.state:\n                if (\n                    frame.focus != cmd.focus\n                    or \"before_\" in frame.event\n                    or \"_expression\" in cmd.state\n                    and \"_statement\" in frame.event\n                    or \"_statement\" in cmd.state\n                    and \"_expression\" in frame.event\n                ):\n                    # The state has changed, command has completed\n                    return True\n                else:\n                    # Keep running\n                    return False\n        else:\n            # We're in another frame\n            if self._frame_is_alive(cmd.frame_id):\n                # We're in a successor frame, keep running\n                return False\n            else:\n                # Original frame has completed, assumedly because of an exception\n                # We're done\n                return True\n\n        return True  # not actually required, just to make Pylint happy\n\n    def _cmd_step_into_completed(self, frame, cmd):\n        return frame.event != \"after_statement\"\n\n    def _cmd_step_back_completed(self, frame, cmd):\n        # Check if the selected message has been previously sent to front-end\n        return (\n            self._saved_states[self._current_state_index][\"in_client_log\"]\n            or self._current_state_index == 0\n        )\n\n    def _cmd_step_out_completed(self, frame, cmd):\n        if self._current_state_index == 0:\n            return False\n\n        if frame.event == \"after_statement\":\n            return False\n\n        if self._at_a_breakpoint(frame, cmd):\n            return True\n\n        prev_state_frame = self._saved_states[self._current_state_index - 1][\"stack\"][\n            -1\n        ]\n\n        return (\n            # the frame has completed\n            not self._frame_is_alive(cmd.frame_id)\n            # we're in the same frame but on higher level\n            # TODO: expression inside statement expression has same range as its parent\n            or id(frame.system_frame) == cmd.frame_id\n            and range_contains_smaller(frame.focus, cmd.focus)\n            # or we were there in prev state\n            or id(prev_state_frame.system_frame) == cmd.frame_id\n            and range_contains_smaller(prev_state_frame.focus, cmd.focus)\n        )\n\n    def _cmd_resume_completed(self, frame, cmd):\n        return self._at_a_breakpoint(frame, cmd)\n\n    def _cmd_run_to_cursor_completed(self, frame, cmd):\n        return self._at_a_breakpoint(\n            frame, cmd, self._get_breakpoints_with_cursor_position(cmd)\n        )\n\n    def _at_a_breakpoint(self, frame, cmd, breakpoints=None):\n        if breakpoints is None:\n            breakpoints = cmd[\"breakpoints\"]\n\n        return (\n            frame.event in [\"before_statement\", \"before_expression\"]\n            and frame.system_frame.f_code.co_filename in breakpoints\n            and frame.focus.lineno in breakpoints[frame.system_frame.f_code.co_filename]\n            # consider only first event on a line\n            # (but take into account that same line may be reentered)\n            and (\n                cmd.focus is None\n                or (cmd.focus.lineno != frame.focus.lineno)\n                or (cmd.focus == frame.focus and cmd.state == frame.event)\n                or id(frame.system_frame) != cmd.frame_id\n            )\n        )\n\n    def _frame_is_alive(self, frame_id):\n        for frame in self._custom_stack:\n            if id(frame.system_frame) == frame_id:\n                return True\n\n        return False\n\n    def _export_stack(self):\n        result = []\n\n        exported_globals_per_module = {}\n\n        def export_globals(module_name, frame):\n            if module_name not in exported_globals_per_module:\n                exported_globals_per_module[module_name] = self._vm.export_variables(\n                    frame.f_globals\n                )\n            return exported_globals_per_module[module_name]\n\n        for custom_frame in self._custom_stack:\n\n            system_frame = custom_frame.system_frame\n            module_name = system_frame.f_globals[\"__name__\"]\n\n            result.append(\n                TempFrameInfo(\n                    # need to store the reference to the frame to avoid it being GC-d\n                    # otherwise frame id-s would be reused and this would\n                    # mess up communication with the frontend.\n                    system_frame=system_frame,\n                    locals=None\n                    if system_frame.f_locals is system_frame.f_globals\n                    else self._vm.export_variables(system_frame.f_locals),\n                    globals=export_globals(module_name, system_frame),\n                    event=custom_frame.event,\n                    focus=custom_frame.focus,\n                    node_tags=custom_frame.node_tags,\n                    current_evaluations=custom_frame.current_evaluations.copy(),\n                    current_statement=custom_frame.current_statement,\n                    current_root_expression=custom_frame.current_root_expression,\n                )\n            )\n\n        return result\n\n    def _thonny_hidden_before_stmt(self, node_id):\n        # The code to be debugged will be instrumented with this function\n        # inserted before each statement.\n        # Entry into this function indicates that statement as given\n        # by the code range is about to be evaluated next.\n        return None\n\n    def _thonny_hidden_after_stmt(self, node_id):\n        # The code to be debugged will be instrumented with this function\n        # inserted after each statement.\n        # Entry into this function indicates that statement as given\n        # by the code range was just executed successfully.\n        return None\n\n    def _thonny_hidden_before_expr(self, node_id):\n        # Entry into this function indicates that expression as given\n        # by the code range is about to be evaluated next\n        return node_id\n\n    def _thonny_hidden_after_expr(self, node_id, value):\n        # The code to be debugged will be instrumented with this function\n        # wrapped around each expression (given as 2nd argument).\n        # Entry into this function indicates that expression as given\n        # by the code range was just evaluated to given value\n        return value\n\n    def _tag_nodes(self, root):\n        \"\"\"Marks interesting properties of AST nodes\"\"\"\n        # ast_utils need to be imported after asttokens \n        # is (custom-)imported \n        from thonny import ast_utils\n        \n        def add_tag(node, tag):\n            if not hasattr(node, \"tags\"):\n                node.tags = set()\n                node.tags.add(\"class=\" + node.__class__.__name__)\n            node.tags.add(tag)\n\n        # ignore module docstring if it is before from __future__ import\n        if (\n            isinstance(root.body[0], ast.Expr)\n            and isinstance(root.body[0].value, ast.Str)\n            and len(root.body) > 1\n            and isinstance(root.body[1], ast.ImportFrom)\n            and root.body[1].module == \"__future__\"\n        ):\n\n            add_tag(root.body[0], \"ignore\")\n            add_tag(root.body[0].value, \"ignore\")\n            add_tag(root.body[1], \"ignore\")\n\n        for node in ast.walk(root):\n            if not isinstance(node, (ast.expr, ast.stmt)):\n                continue\n            \n            # tag last children\n            last_child = ast_utils.get_last_child(node)\n            assert last_child in [True, False, None] or isinstance(last_child, (ast.expr, ast.stmt, type(None))), \\\n                \"Bad last child \" + str(last_child) + \" of \" + str(node)\n            if last_child is not None:\n                add_tag(node, \"has_children\")\n\n                if isinstance(last_child, ast.AST):\n                    last_child.parent_node = node\n                    add_tag(last_child, \"last_child\")\n                    if isinstance(node, _ast.expr):\n                        add_tag(last_child, \"child_of_expression\")\n                    else:\n                        add_tag(last_child, \"child_of_statement\")\n\n                    if isinstance(node, ast.Call):\n                        add_tag(last_child, \"last_call_arg\")\n\n            # other cases\n            if isinstance(node, ast.Call):\n                add_tag(node.func, \"call_function\")\n                node.func.parent_node = node\n\n            if isinstance(node, ast.BoolOp) and node.op == ast.Or():\n                for child in node.values:\n                    add_tag(child, \"or_arg\")\n                    child.parent_node = node\n\n            if isinstance(node, ast.BoolOp) and node.op == ast.And():\n                for child in node.values:\n                    add_tag(child, \"and_arg\")\n                    child.parent_node = node\n\n            # TODO: assert (it doesn't evaluate msg when test == True)\n\n            if isinstance(node, ast.Str):\n                add_tag(node, \"StringLiteral\")\n                add_tag(node, \"skipexport\")\n\n            if hasattr(ast, \"JoinedStr\") and isinstance(node, ast.JoinedStr):\n                # can't present children normally without\n                # ast giving correct locations for them\n                add_tag(node, \"ignore_children\")\n\n            elif isinstance(node, ast.Num):\n                add_tag(node, \"NumberLiteral\")\n                add_tag(node, \"skipexport\")\n\n            elif isinstance(node, ast.List):\n                add_tag(node, \"skipexport\")\n\n            elif isinstance(node, ast.Tuple):\n                add_tag(node, \"skipexport\")\n\n            elif isinstance(node, ast.Set):\n                add_tag(node, \"skipexport\")\n\n            elif isinstance(node, ast.Dict):\n                add_tag(node, \"skipexport\")\n\n            elif isinstance(node, ast.Name):\n                add_tag(node, \"skipexport\")\n\n            elif isinstance(node, ast.NameConstant):\n                add_tag(node, \"skipexport\")\n\n            elif isinstance(node, ast.Expr):\n                if not isinstance(node.value, (ast.Yield, ast.YieldFrom)):\n                    add_tag(node, \"skipexport\")\n\n            elif isinstance(node, ast.If):\n                add_tag(node, \"skipexport\")\n\n            elif isinstance(node, ast.Return):\n                add_tag(node, \"skipexport\")\n\n            elif isinstance(node, ast.While):\n                add_tag(node, \"skipexport\")\n\n            elif isinstance(node, ast.Continue):\n                add_tag(node, \"skipexport\")\n\n            elif isinstance(node, ast.Break):\n                add_tag(node, \"skipexport\")\n\n            elif isinstance(node, ast.Pass):\n                add_tag(node, \"skipexport\")\n\n            elif isinstance(node, ast.For):\n                add_tag(node, \"skipexport\")\n\n            elif isinstance(node, ast.Try):\n                add_tag(node, \"skipexport\")\n\n            elif isinstance(node, ast.ListComp):\n                add_tag(node.elt, \"ListComp.elt\")\n\n            elif isinstance(node, ast.SetComp):\n                add_tag(node.elt, \"SetComp.elt\")\n\n            elif isinstance(node, ast.DictComp):\n                add_tag(node.key, \"DictComp.key\")\n                add_tag(node.value, \"DictComp.value\")\n\n            elif isinstance(node, ast.BinOp):\n                # TODO: use static analysis to detect type of left child\n                add_tag(node, \"skipexport\")\n\n            elif isinstance(node, ast.Attribute):\n                # TODO: use static analysis to detect type of left child\n                add_tag(node, \"skipexport\")\n\n            elif isinstance(node, ast.Subscript):\n                # TODO: use static analysis to detect type of left child\n                add_tag(node, \"skipexport\")\n\n            elif isinstance(node, ast.Compare):\n                # TODO: use static analysis to detect type of left child\n                add_tag(node, \"skipexport\")\n\n            if isinstance(node, ast.comprehension):\n                for expr in node.ifs:\n                    add_tag(expr, \"comprehension.if\")\n\n            if isinstance(node, (ast.Assign)):\n                # value will be presented in assignment's before_statement_again\n                add_tag(node.value, \"skip_after_expression\")\n\n            if isinstance(\n                node, (ast.Expr, ast.While, ast.For, ast.If, ast.Try, ast.With)\n            ):\n                add_tag(node, \"skip_after_statement_again\")\n\n            # make sure every node has this field\n            if not hasattr(node, \"tags\"):\n                node.tags = set()\n\n    def _should_instrument_as_expression(self, node):\n        return (\n            isinstance(node, _ast.expr)\n            and not getattr(node, \"incorrect_range\", False)\n            and \"ignore\" not in node.tags\n            and (not hasattr(node, \"ctx\") or isinstance(node.ctx, ast.Load))\n            # TODO: repeatedly evaluated subexpressions of comprehensions\n            # can be supported (but it requires some redesign both in backend and GUI)\n            and \"ListComp.elt\" not in node.tags\n            and \"SetComp.elt\" not in node.tags\n            and \"DictComp.key\" not in node.tags\n            and \"DictComp.value\" not in node.tags\n            and \"comprehension.if\" not in node.tags\n        )\n\n    def _should_instrument_as_statement(self, node):\n        return (\n            isinstance(node, _ast.stmt)\n            and not getattr(node, \"incorrect_range\", False)\n            and \"ignore\" not in node.tags\n            # Shouldn't insert anything before from __future__ import\n            # as this is not a normal statement\n            # https://bitbucket.org/plas/thonny/issues/183/thonny-throws-false-positive-syntaxerror\n            and (not isinstance(node, ast.ImportFrom) or node.module != \"__future__\")\n        )\n\n    def _insert_statement_markers(self, root):\n        # find lists of statements and insert before/after markers for each statement\n        for name, value in ast.iter_fields(root):\n            if isinstance(root, ast.Try) and name == \"handlers\":\n                # contains statements but is not statement itself\n                for handler in value:\n                    self._insert_statement_markers(handler)\n            elif isinstance(value, ast.AST):\n                self._insert_statement_markers(value)\n            elif isinstance(value, list):\n                if len(value) > 0:\n                    new_list = []\n                    for node in value:\n                        if self._should_instrument_as_statement(node):\n                            # self._debug(\"EBFOMA\", node)\n                            # add before marker\n                            new_list.append(\n                                self._create_statement_marker(\n                                    node, BEFORE_STATEMENT_MARKER\n                                )\n                            )\n\n                        # original statement\n                        if self._should_instrument_as_statement(node):\n                            self._insert_statement_markers(node)\n                        new_list.append(node)\n\n                        if (\n                            self._should_instrument_as_statement(node)\n                            and \"skipexport\" not in node.tags\n                        ):\n                            # add after marker\n                            new_list.append(\n                                self._create_statement_marker(\n                                    node, AFTER_STATEMENT_MARKER\n                                )\n                            )\n                    setattr(root, name, new_list)\n\n    def _create_statement_marker(self, node, function_name):\n        call = self._create_simple_marker_call(node, function_name)\n        stmt = ast.Expr(value=call)\n        ast.copy_location(stmt, node)\n        ast.fix_missing_locations(stmt)\n        return stmt\n\n    def _insert_for_target_markers(self, root):\n        \"\"\"inserts markers which notify assignment to for-loop variables\"\"\"\n        for node in ast.walk(root):\n            if isinstance(node, ast.For):\n                old_target = node.target\n                # print(vars(old_target))\n                temp_name = \"__for_loop_var\"\n                node.target = ast.Name(temp_name, ast.Store())\n\n                name_load = ast.Name(temp_name, ast.Load())\n                # value will be visible in parent's before_statement_again event\n                name_load.tags = {\n                    \"skip_before_expression\",\n                    \"skip_after_expression\",\n                    \"last_child\",\n                }\n                name_load.lineno, name_load.col_offset = (\n                    node.iter.lineno,\n                    node.iter.col_offset,\n                )\n                name_load.end_lineno, name_load.end_col_offset = (\n                    node.iter.end_lineno,\n                    node.iter.end_col_offset,\n                )\n\n                before_name_load = self._create_simple_marker_call(\n                    name_load, BEFORE_EXPRESSION_MARKER\n                )\n                after_name_load = ast.Call(\n                    func=ast.Name(id=AFTER_EXPRESSION_MARKER, ctx=ast.Load()),\n                    args=[before_name_load, name_load],\n                    keywords=[],\n                )\n\n                ass = ast.Assign([old_target], after_name_load)\n                ass.lineno, ass.col_offset = old_target.lineno, old_target.col_offset\n                ass.end_lineno, ass.end_col_offset = (\n                    node.iter.end_lineno,\n                    node.iter.end_col_offset,\n                )\n                ass.tags = {\n                    \"skip_before_statement\"\n                }  # before_statement_again will be shown\n\n                name_load.parent_node = ass\n\n                ass_before = self._create_statement_marker(ass, BEFORE_STATEMENT_MARKER)\n                node.body.insert(0, ass_before)\n                node.body.insert(1, ass)\n                node.body.insert(\n                    2, self._create_statement_marker(ass, AFTER_STATEMENT_MARKER)\n                )\n\n                ast.fix_missing_locations(node)\n\n    def _insert_expression_markers(self, node):\n        \"\"\"\n        TODO: this docstring is outdated\n        each expression e gets wrapped like this:\n            _after(_before(_loc, _node_is_zoomable), e, _node_role, _parent_range)\n        where\n            _after is function that gives the resulting value\n            _before is function that signals the beginning of evaluation of e\n            _loc gives the code range of e\n            _node_is_zoomable indicates whether this node has subexpressions\n            _node_role is either 'last_call_arg', 'last_op_arg', 'first_or_arg', \n                                 'first_and_arg', 'function' or None\n        \"\"\"\n        tracer = self\n\n        class ExpressionVisitor(ast.NodeTransformer):\n            def generic_visit(self, node):\n                if isinstance(node, _ast.expr):\n                    if isinstance(node, ast.Starred):\n                        # keep this node as is, but instrument its children\n                        return ast.NodeTransformer.generic_visit(self, node)\n                    elif tracer._should_instrument_as_expression(node):\n                        # before marker\n                        before_marker = tracer._create_simple_marker_call(\n                            node, BEFORE_EXPRESSION_MARKER\n                        )\n                        ast.copy_location(before_marker, node)\n\n                        if \"ignore_children\" in node.tags:\n                            transformed_node = node\n                        else:\n                            transformed_node = ast.NodeTransformer.generic_visit(\n                                self, node\n                            )\n\n                        # after marker\n                        after_marker = ast.Call(\n                            func=ast.Name(id=AFTER_EXPRESSION_MARKER, ctx=ast.Load()),\n                            args=[before_marker, transformed_node],\n                            keywords=[],\n                        )\n                        ast.copy_location(after_marker, node)\n                        ast.fix_missing_locations(after_marker)\n                        # further transformations may query original node location from after marker\n                        if hasattr(node, \"end_lineno\"):\n                            after_marker.end_lineno = node.end_lineno\n                            after_marker.end_col_offset = node.end_col_offset\n\n                        return after_marker\n                    else:\n                        # This expression (and its children) should be ignored\n                        return node\n                else:\n                    # Descend into statements\n                    return ast.NodeTransformer.generic_visit(self, node)\n\n        return ExpressionVisitor().visit(node)\n\n    def _create_simple_marker_call(self, node, fun_name, extra_args=[]):\n        args = [self._export_node(node)] + extra_args\n\n        return ast.Call(\n            func=ast.Name(id=fun_name, ctx=ast.Load()), args=args, keywords=[]\n        )\n\n    def _export_node(self, node):\n        assert isinstance(node, (ast.expr, ast.stmt))\n        node_id = id(node)\n        self._nodes[node_id] = node\n        return ast.Num(node_id)\n\n    def _debug(self, *args):\n        logger.debug(\"TRACER: \" + str(args))\n\n    def _execute_prepared_user_code(self, statements, expression, global_vars):\n        try:\n            return Tracer._execute_prepared_user_code(\n                self, statements, expression, global_vars\n            )\n        finally:\n            \"\"\"\n            from thonny.misc_utils import _win_get_used_memory\n            print(\"Memory:\", _win_get_used_memory() / 1024 / 1024)\n            print(\"States:\", len(self._saved_states))\n            print(self._fulltags.most_common())\n            \"\"\"\n\n\nclass CustomStackFrame:\n    def __init__(self, frame, event, focus=None):\n        self.system_frame = frame\n        self.event = event\n        self.focus = focus\n        self.current_evaluations = []\n        self.current_statement = None\n        self.current_root_expression = None\n\n\nclass FancySourceFileLoader(SourceFileLoader):\n    \"\"\"Used for loading and instrumenting user modules during fancy tracing\"\"\"\n\n    def __init__(self, fullname, path, tracer):\n        super().__init__(fullname, path)\n        self._tracer = tracer\n\n    def source_to_code(self, data, path, *, _optimize=-1):\n        old_tracer = sys.gettrace()\n        sys.settrace(None)\n        try:\n            root = self._tracer._prepare_ast(data, path, \"exec\")\n            return super().source_to_code(root, path)\n        finally:\n            sys.settrace(old_tracer)\n\n\ndef _get_frame_prefix(frame):\n    return str(id(frame)) + \" \" + \">\" * len(inspect.getouterframes(frame, 0)) + \" \"\n\n\ndef _get_python_version_string(add_word_size=False):\n    result = \".\".join(map(str, sys.version_info[:3]))\n    if sys.version_info[3] != \"final\":\n        result += \"-\" + sys.version_info[3]\n\n    if add_word_size:\n        result += \" (\" + (\"64\" if sys.maxsize > 2 ** 32 else \"32\") + \" bit)\"\n\n    return result\n\n\ndef _fetch_frame_source_info(frame):\n    if frame.f_code.co_filename is None or not os.path.exists(frame.f_code.co_filename):\n        return None, None, True\n    \n    is_libra = _is_library_file(frame.f_code.co_filename)\n    if frame.f_code.co_name == \"<module>\":\n        # inspect.getsource and getsourcelines don't help here\n        with tokenize.open(frame.f_code.co_filename) as fp:\n            return fp.read(), 1, is_libra\n    else:\n        # function or class\n        try:\n            source = inspect.getsource(frame.f_code)\n            \n            # inspect.getsource is not reliable, see eg:\n            # https://bugs.python.org/issue35101\n            # If the code name is not present as definition\n            # in the beginning of the source,\n            # then play safe and return the whole script \n            first_line = source.splitlines()[0]\n            if re.search(r\"\\b(class|def)\\b\\s+\\b%s\\b\" % frame.f_code.co_name,\n                         first_line) is None:\n                with tokenize.open(frame.f_code.co_filename) as fp:\n                    return fp.read(), 1, is_libra\n                \n            else:\n                return source, frame.f_code.co_firstlineno, is_libra \n        except OSError:\n            logger.exception(\"Problem getting source\")\n            return None, None, True\n\n\ndef format_exception_with_frame_info(\n    e_type, e_value, e_traceback, shorten_filenames=False\n):\n    \"\"\"Need to suppress thonny frames to avoid confusion\"\"\"\n\n    _traceback_message = \"Traceback (most recent call last):\\n\"\n\n    _cause_message = getattr(\n        traceback,\n        \"_cause_message\",\n        (\n            \"\\nThe above exception was the direct cause \"\n            + \"of the following exception:\\n\\n\"\n        ),\n    )\n\n    _context_message = getattr(\n        traceback,\n        \"_context_message\",\n        (\n            \"\\nDuring handling of the above exception, \"\n            + \"another exception occurred:\\n\\n\"\n        ),\n    )\n\n    def rec_format_exception_with_frame_info(etype, value, tb, chain=True):\n        # Based on\n        # https://www.python.org/dev/peps/pep-3134/#enhanced-reporting\n        # and traceback.format_exception\n\n        if etype is None:\n            etype = type(value)\n\n        if tb is None:\n            tb = value.__traceback__\n\n        if chain:\n            if value.__cause__ is not None:\n                yield from rec_format_exception_with_frame_info(\n                    None, value.__cause__, None\n                )\n                yield (_cause_message, None, None, None)\n            elif value.__context__ is not None and not value.__suppress_context__:\n                yield from rec_format_exception_with_frame_info(\n                    None, value.__context__, None\n                )\n                yield (_context_message, None, None, None)\n\n        if tb is not None:\n            yield (_traceback_message, None, None, None)\n            have_seen_first_relevant_frame = False\n\n            tb_temp = tb\n            for entry in traceback.extract_tb(tb):\n                assert tb_temp is not None  # actual tb doesn't end before extract_tb\n                if (\n                    \"thonny/backend\" not in entry.filename\n                    and \"thonny\\\\backend\" not in entry.filename\n                    and (\n                        not entry.filename.endswith(os.sep + \"ast.py\")\n                        or entry.name != \"parse\"\n                        or etype is not SyntaxError\n                    )\n                    or have_seen_first_relevant_frame\n                    or in_debug_mode()\n                ):\n\n                    have_seen_first_relevant_frame = True\n\n                    fmt = '  File \"{}\", line {}, in {}\\n'.format(\n                        entry.filename, entry.lineno, entry.name\n                    )\n\n                    if entry.line:\n                        fmt += \"    {}\\n\".format(entry.line.strip())\n\n                    yield (fmt, id(tb_temp.tb_frame), entry.filename, entry.lineno)\n\n                tb_temp = tb_temp.tb_next\n\n            assert tb_temp is None  # tb was exhausted\n\n        for line in traceback.format_exception_only(etype, value):\n            if etype is SyntaxError and line.endswith(\"^\\n\"):\n                # for some reason it may add several empty lines before ^-line\n                partlines = line.splitlines()\n                while len(partlines) >= 2 and partlines[-2].strip() == \"\":\n                    del partlines[-2]\n                line = \"\\n\".join(partlines) + \"\\n\"\n\n            yield (line, None, None, None)\n\n    items = rec_format_exception_with_frame_info(e_type, e_value, e_traceback)\n\n    return list(items)\n\n\ndef in_debug_mode():\n    return os.environ.get(\"THONNY_DEBUG\", False) in [1, \"1\", True, \"True\", \"true\"]\n\n\ndef _is_library_file(filename):\n    return (\n        filename is None\n        or path_startswith(filename, sys.prefix)\n        or hasattr(sys, \"base_prefix\")\n        and path_startswith(filename, sys.base_prefix)\n        or hasattr(sys, \"real_prefix\")\n        and path_startswith(filename, getattr(sys, \"real_prefix\"))\n        or site.ENABLE_USER_SITE\n        and path_startswith(filename, site.getusersitepackages())\n    )\n\n\ndef _report_internal_error():\n    print(\"PROBLEM WITH THONNY'S BACK-END:\\n\", file=sys.stderr)\n    traceback.print_exc()\n\n\ndef get_vm():\n    return _vm\n",
        "tags": "None",
        "text_widget_id": 59456976,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:51:38.238758"
    },
    {
        "widget_id": 46743376,
        "widget_class": "ShellText",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "text_widget_context": "shell",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:51:40.527758"
    },
    {
        "widget_id": 46743376,
        "widget_class": "ShellText",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "text_widget_context": "shell",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:51:40.586759"
    },
    {
        "widget_id": 46743376,
        "widget_class": "ShellText",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "text_widget_context": "shell",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:51:40.683760"
    },
    {
        "widget_id": 46743376,
        "widget_class": "ShellText",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "text_widget_context": "shell",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:51:40.777758"
    },
    {
        "widget_id": 46743376,
        "widget_class": "ShellText",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "text_widget_context": "shell",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:51:40.872758"
    },
    {
        "widget_id": 46743376,
        "widget_class": "ShellText",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "text_widget_context": "shell",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:51:41.267758"
    },
    {
        "widget_id": 57551888,
        "widget_class": "Scrollbar",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:51:49.065272"
    },
    {
        "widget_id": 92100976,
        "widget_class": "EditorNotebook",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:52:03.880560"
    },
    {
        "widget_id": 92032336,
        "widget_class": "AutomaticPanedWindow",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:52:07.729709"
    },
    {
        "widget_id": 46743376,
        "widget_class": "ShellText",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "text_widget_context": "shell",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:52:18.545329"
    },
    {
        "editor_id": 59480976,
        "editor_class": "Editor",
        "text_widget_id": 59480208,
        "text_widget_class": "CodeViewText",
        "sequence": "EditorTextCreated",
        "time": "2020-11-14T20:52:18.660435"
    },
    {
        "editor_id": 59480976,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\Lib\\ast.py",
        "sequence": "Open",
        "text_widget_id": 59480208,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T20:52:18.661437"
    },
    {
        "index1": "1.0",
        "index2": "2.0",
        "text_widget_id": 59480208,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:52:18.662437"
    },
    {
        "index": "1.0",
        "text": "\"\"\"\n    ast\n    ~~~\n\n    The `ast` module helps Python applications to process trees of the Python\n    abstract syntax grammar.  The abstract syntax itself might change with\n    each Python release; this module helps to find out programmatically what\n    the current grammar looks like and allows modifications of it.\n\n    An abstract syntax tree can be generated by passing `ast.PyCF_ONLY_AST` as\n    a flag to the `compile()` builtin function or by using the `parse()`\n    function from this module.  The result will be a tree of objects whose\n    classes all inherit from `ast.AST`.\n\n    A modified abstract syntax tree can be compiled into a Python code object\n    using the built-in `compile()` function.\n\n    Additionally various helper functions are provided that make working with\n    the trees simpler.  The main intention of the helper functions and this\n    module in general is to provide an easy to use interface for libraries\n    that work tightly with the python syntax (template engines for example).\n\n\n    :copyright: Copyright 2008 by Armin Ronacher.\n    :license: Python License.\n\"\"\"\nfrom _ast import *\n\n\ndef parse(source, filename='<unknown>', mode='exec'):\n    \"\"\"\n    Parse the source into an AST node.\n    Equivalent to compile(source, filename, mode, PyCF_ONLY_AST).\n    \"\"\"\n    return compile(source, filename, mode, PyCF_ONLY_AST)\n\n\ndef literal_eval(node_or_string):\n    \"\"\"\n    Safely evaluate an expression node or a string containing a Python\n    expression.  The string or node provided may only consist of the following\n    Python literal structures: strings, bytes, numbers, tuples, lists, dicts,\n    sets, booleans, and None.\n    \"\"\"\n    if isinstance(node_or_string, str):\n        node_or_string = parse(node_or_string, mode='eval')\n    if isinstance(node_or_string, Expression):\n        node_or_string = node_or_string.body\n    def _convert_num(node):\n        if isinstance(node, Constant):\n            if isinstance(node.value, (int, float, complex)):\n                return node.value\n        elif isinstance(node, Num):\n            return node.n\n        raise ValueError('malformed node or string: ' + repr(node))\n    def _convert_signed_num(node):\n        if isinstance(node, UnaryOp) and isinstance(node.op, (UAdd, USub)):\n            operand = _convert_num(node.operand)\n            if isinstance(node.op, UAdd):\n                return + operand\n            else:\n                return - operand\n        return _convert_num(node)\n    def _convert(node):\n        if isinstance(node, Constant):\n            return node.value\n        elif isinstance(node, (Str, Bytes)):\n            return node.s\n        elif isinstance(node, Num):\n            return node.n\n        elif isinstance(node, Tuple):\n            return tuple(map(_convert, node.elts))\n        elif isinstance(node, List):\n            return list(map(_convert, node.elts))\n        elif isinstance(node, Set):\n            return set(map(_convert, node.elts))\n        elif isinstance(node, Dict):\n            return dict(zip(map(_convert, node.keys),\n                            map(_convert, node.values)))\n        elif isinstance(node, NameConstant):\n            return node.value\n        elif isinstance(node, BinOp) and isinstance(node.op, (Add, Sub)):\n            left = _convert_signed_num(node.left)\n            right = _convert_num(node.right)\n            if isinstance(left, (int, float)) and isinstance(right, complex):\n                if isinstance(node.op, Add):\n                    return left + right\n                else:\n                    return left - right\n        return _convert_signed_num(node)\n    return _convert(node_or_string)\n\n\ndef dump(node, annotate_fields=True, include_attributes=False):\n    \"\"\"\n    Return a formatted dump of the tree in *node*.  This is mainly useful for\n    debugging purposes.  The returned string will show the names and the values\n    for fields.  This makes the code impossible to evaluate, so if evaluation is\n    wanted *annotate_fields* must be set to False.  Attributes such as line\n    numbers and column offsets are not dumped by default.  If this is wanted,\n    *include_attributes* can be set to True.\n    \"\"\"\n    def _format(node):\n        if isinstance(node, AST):\n            fields = [(a, _format(b)) for a, b in iter_fields(node)]\n            rv = '%s(%s' % (node.__class__.__name__, ', '.join(\n                ('%s=%s' % field for field in fields)\n                if annotate_fields else\n                (b for a, b in fields)\n            ))\n            if include_attributes and node._attributes:\n                rv += fields and ', ' or ' '\n                rv += ', '.join('%s=%s' % (a, _format(getattr(node, a)))\n                                for a in node._attributes)\n            return rv + ')'\n        elif isinstance(node, list):\n            return '[%s]' % ', '.join(_format(x) for x in node)\n        return repr(node)\n    if not isinstance(node, AST):\n        raise TypeError('expected AST, got %r' % node.__class__.__name__)\n    return _format(node)\n\n\ndef copy_location(new_node, old_node):\n    \"\"\"\n    Copy source location (`lineno` and `col_offset` attributes) from\n    *old_node* to *new_node* if possible, and return *new_node*.\n    \"\"\"\n    for attr in 'lineno', 'col_offset':\n        if attr in old_node._attributes and attr in new_node._attributes \\\n           and hasattr(old_node, attr):\n            setattr(new_node, attr, getattr(old_node, attr))\n    return new_node\n\n\ndef fix_missing_locations(node):\n    \"\"\"\n    When you compile a node tree with compile(), the compiler expects lineno and\n    col_offset attributes for every node that supports them.  This is rather\n    tedious to fill in for generated nodes, so this helper adds these attributes\n    recursively where not already set, by setting them to the values of the\n    parent node.  It works recursively starting at *node*.\n    \"\"\"\n    def _fix(node, lineno, col_offset):\n        if 'lineno' in node._attributes:\n            if not hasattr(node, 'lineno'):\n                node.lineno = lineno\n            else:\n                lineno = node.lineno\n        if 'col_offset' in node._attributes:\n            if not hasattr(node, 'col_offset'):\n                node.col_offset = col_offset\n            else:\n                col_offset = node.col_offset\n        for child in iter_child_nodes(node):\n            _fix(child, lineno, col_offset)\n    _fix(node, 1, 0)\n    return node\n\n\ndef increment_lineno(node, n=1):\n    \"\"\"\n    Increment the line number of each node in the tree starting at *node* by *n*.\n    This is useful to \"move code\" to a different location in a file.\n    \"\"\"\n    for child in walk(node):\n        if 'lineno' in child._attributes:\n            child.lineno = getattr(child, 'lineno', 0) + n\n    return node\n\n\ndef iter_fields(node):\n    \"\"\"\n    Yield a tuple of ``(fieldname, value)`` for each field in ``node._fields``\n    that is present on *node*.\n    \"\"\"\n    for field in node._fields:\n        try:\n            yield field, getattr(node, field)\n        except AttributeError:\n            pass\n\n\ndef iter_child_nodes(node):\n    \"\"\"\n    Yield all direct child nodes of *node*, that is, all fields that are nodes\n    and all items of fields that are lists of nodes.\n    \"\"\"\n    for name, field in iter_fields(node):\n        if isinstance(field, AST):\n            yield field\n        elif isinstance(field, list):\n            for item in field:\n                if isinstance(item, AST):\n                    yield item\n\n\ndef get_docstring(node, clean=True):\n    \"\"\"\n    Return the docstring for the given node or None if no docstring can\n    be found.  If the node provided does not have docstrings a TypeError\n    will be raised.\n\n    If *clean* is `True`, all tabs are expanded to spaces and any whitespace\n    that can be uniformly removed from the second line onwards is removed.\n    \"\"\"\n    if not isinstance(node, (AsyncFunctionDef, FunctionDef, ClassDef, Module)):\n        raise TypeError(\"%r can't have docstrings\" % node.__class__.__name__)\n    if not(node.body and isinstance(node.body[0], Expr)):\n        return None\n    node = node.body[0].value\n    if isinstance(node, Str):\n        text = node.s\n    elif isinstance(node, Constant) and isinstance(node.value, str):\n        text = node.value\n    else:\n        return None\n    if clean:\n        import inspect\n        text = inspect.cleandoc(text)\n    return text\n\n\ndef walk(node):\n    \"\"\"\n    Recursively yield all descendant nodes in the tree starting at *node*\n    (including *node* itself), in no specified order.  This is useful if you\n    only want to modify nodes in place and don't care about the context.\n    \"\"\"\n    from collections import deque\n    todo = deque([node])\n    while todo:\n        node = todo.popleft()\n        todo.extend(iter_child_nodes(node))\n        yield node\n\n\nclass NodeVisitor(object):\n    \"\"\"\n    A node visitor base class that walks the abstract syntax tree and calls a\n    visitor function for every node found.  This function may return a value\n    which is forwarded by the `visit` method.\n\n    This class is meant to be subclassed, with the subclass adding visitor\n    methods.\n\n    Per default the visitor functions for the nodes are ``'visit_'`` +\n    class name of the node.  So a `TryFinally` node visit function would\n    be `visit_TryFinally`.  This behavior can be changed by overriding\n    the `visit` method.  If no visitor function exists for a node\n    (return value `None`) the `generic_visit` visitor is used instead.\n\n    Don't use the `NodeVisitor` if you want to apply changes to nodes during\n    traversing.  For this a special visitor exists (`NodeTransformer`) that\n    allows modifications.\n    \"\"\"\n\n    def visit(self, node):\n        \"\"\"Visit a node.\"\"\"\n        method = 'visit_' + node.__class__.__name__\n        visitor = getattr(self, method, self.generic_visit)\n        return visitor(node)\n\n    def generic_visit(self, node):\n        \"\"\"Called if no explicit visitor function exists for a node.\"\"\"\n        for field, value in iter_fields(node):\n            if isinstance(value, list):\n                for item in value:\n                    if isinstance(item, AST):\n                        self.visit(item)\n            elif isinstance(value, AST):\n                self.visit(value)\n\n\nclass NodeTransformer(NodeVisitor):\n    \"\"\"\n    A :class:`NodeVisitor` subclass that walks the abstract syntax tree and\n    allows modification of nodes.\n\n    The `NodeTransformer` will walk the AST and use the return value of the\n    visitor methods to replace or remove the old node.  If the return value of\n    the visitor method is ``None``, the node will be removed from its location,\n    otherwise it is replaced with the return value.  The return value may be the\n    original node in which case no replacement takes place.\n\n    Here is an example transformer that rewrites all occurrences of name lookups\n    (``foo``) to ``data['foo']``::\n\n       class RewriteName(NodeTransformer):\n\n           def visit_Name(self, node):\n               return copy_location(Subscript(\n                   value=Name(id='data', ctx=Load()),\n                   slice=Index(value=Str(s=node.id)),\n                   ctx=node.ctx\n               ), node)\n\n    Keep in mind that if the node you're operating on has child nodes you must\n    either transform the child nodes yourself or call the :meth:`generic_visit`\n    method for the node first.\n\n    For nodes that were part of a collection of statements (that applies to all\n    statement nodes), the visitor may also return a list of nodes rather than\n    just a single node.\n\n    Usually you use the transformer like this::\n\n       node = YourTransformer().visit(node)\n    \"\"\"\n\n    def generic_visit(self, node):\n        for field, old_value in iter_fields(node):\n            if isinstance(old_value, list):\n                new_values = []\n                for value in old_value:\n                    if isinstance(value, AST):\n                        value = self.visit(value)\n                        if value is None:\n                            continue\n                        elif not isinstance(value, AST):\n                            new_values.extend(value)\n                            continue\n                    new_values.append(value)\n                old_value[:] = new_values\n            elif isinstance(old_value, AST):\n                new_node = self.visit(old_value)\n                if new_node is None:\n                    delattr(node, field)\n                else:\n                    setattr(node, field, new_node)\n        return node\n",
        "tags": "None",
        "text_widget_id": 59480208,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:52:18.670437"
    },
    {
        "widget_id": 46743376,
        "widget_class": "ShellText",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "text_widget_context": "shell",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:52:18.801438"
    },
    {
        "widget_id": 92100976,
        "widget_class": "EditorNotebook",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:52:23.520232"
    },
    {
        "widget_id": 46743376,
        "widget_class": "ShellText",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "text_widget_context": "shell",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:52:26.785589"
    },
    {
        "editor_id": 57522576,
        "editor_class": "Editor",
        "text_widget_id": 57520752,
        "text_widget_class": "CodeViewText",
        "sequence": "EditorTextCreated",
        "time": "2020-11-14T20:52:26.905644"
    },
    {
        "editor_id": 57522576,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\Lib\\site-packages\\thonny\\backend.py",
        "sequence": "Open",
        "text_widget_id": 57520752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T20:52:26.907643"
    },
    {
        "index1": "1.0",
        "index2": "2.0",
        "text_widget_id": 57520752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:52:26.907643"
    },
    {
        "index": "1.0",
        "text": "# -*- coding: utf-8 -*-\n\nimport ast\nimport builtins\nimport copy\nimport functools\nimport importlib\nimport inspect\nimport io\nimport logging\nimport os.path\nimport pkgutil\nimport pydoc\nimport re\nimport signal\nimport site\nimport subprocess\nimport sys\nimport tokenize\nimport traceback\nimport types\nimport warnings\nfrom collections import namedtuple\nfrom importlib.machinery import PathFinder, SourceFileLoader\nfrom threading import Thread\n\nimport __main__  # @UnresolvedImport\nimport _ast\nimport thonny\nfrom thonny.common import (\n    BackendEvent,\n    DebuggerCommand,\n    DebuggerResponse,\n    FrameInfo,\n    InlineCommand,\n    InlineResponse,\n    InputSubmission,\n    TextRange,\n    ToplevelCommand,\n    ToplevelResponse,\n    UserError,\n    ValueInfo,\n    parse_message,\n    path_startswith,\n    range_contains_smaller,\n    range_contains_smaller_or_equal,\n    serialize_message,\n    get_exe_dirs, get_augmented_system_path, update_system_path)\nimport queue\n\nBEFORE_STATEMENT_MARKER = \"_thonny_hidden_before_stmt\"\nBEFORE_EXPRESSION_MARKER = \"_thonny_hidden_before_expr\"\nAFTER_STATEMENT_MARKER = \"_thonny_hidden_after_stmt\"\nAFTER_EXPRESSION_MARKER = \"_thonny_hidden_after_expr\"\n\nlogger = logging.getLogger(\"thonny.backend\")\n\n_CONFIG_FILENAME = os.path.join(thonny.THONNY_USER_DIR, \"backend_configuration.ini\")\n\nTempFrameInfo = namedtuple(\n    \"TempFrameInfo\",\n    [\n        \"system_frame\",\n        \"locals\",\n        \"globals\",\n        \"event\",\n        \"focus\",\n        \"node_tags\",\n        \"current_statement\",\n        \"current_root_expression\",\n        \"current_evaluations\",\n    ],\n)\n\n\n_vm = None\n\n\nclass VM:\n    def __init__(self):\n        global _vm\n        _vm = self\n\n        self._ini = None\n        self._command_handlers = {}\n        self._object_info_tweakers = []\n        self._import_handlers = {}\n        self._input_queue = queue.Queue()\n        self._ast_postprocessors = []\n        self._main_dir = os.path.dirname(sys.modules[\"thonny\"].__file__)\n        self._heap = (\n            {}\n        )  # WeakValueDictionary would be better, but can't store reference to None\n        self._source_info_by_frame = {}\n        site.sethelper()  # otherwise help function is not available\n        pydoc.pager = pydoc.plainpager  # otherwise help command plays tricks\n        self._install_fake_streams()\n        self._current_executor = None\n        self._io_level = 0\n\n        init_msg = self._fetch_command()\n\n        original_argv = sys.argv.copy()\n        original_path = sys.path.copy()\n\n        # clean up path\n        sys.path = [d for d in sys.path if d != \"\"]\n\n        # start in shell mode\n        sys.argv[:] = [\"\"]  # empty \"script name\"\n        sys.path.insert(0, \"\")  # current dir\n        \n        # clean __main__ global scope\n        for key in list(__main__.__dict__.keys()):\n            if not key.startswith(\"__\") or key in {\"__file__\", \"__cached__\"}:\n                del __main__.__dict__[key]\n\n        # unset __doc__, then exec dares to write doc of the script there\n        __main__.__doc__ = None\n        \n        self._frontend_sys_path = init_msg[\"frontend_sys_path\"]\n        self._load_shared_modules()\n        self._load_plugins()\n\n        self.send_message(\n            ToplevelResponse(\n                main_dir=self._main_dir,\n                original_argv=original_argv,\n                original_path=original_path,\n                argv=sys.argv,\n                path=sys.path,\n                usersitepackages=site.getusersitepackages()\n                    if site.ENABLE_USER_SITE\n                    else None,\n                prefix=sys.prefix,\n                welcome_text=\"Python \" + _get_python_version_string(),\n                executable=sys.executable,\n                exe_dirs=get_exe_dirs(),\n                in_venv=(\n                    hasattr(sys, \"base_prefix\")\n                    and sys.base_prefix != sys.prefix\n                    or hasattr(sys, \"real_prefix\")\n                    and getattr(sys, \"real_prefix\") != sys.prefix\n                ),\n                python_version=_get_python_version_string(),\n                cwd=os.getcwd(),\n            )\n        )\n\n        self._install_signal_handler()\n\n    def mainloop(self):\n        try:\n            while True:\n                try:\n                    cmd = self._fetch_command()\n                    if isinstance(cmd, InputSubmission):\n                        self._input_queue.put(cmd)\n                    elif isinstance(cmd, ToplevelCommand):\n                        self._source_info_by_frame = {}\n                        self._input_queue = queue.Queue()\n                        self.handle_command(cmd)\n                    else:\n                        self.handle_command(cmd)\n                except KeyboardInterrupt:\n                    logger.exception(\"Interrupt in mainloop\")\n                    # Interrupt must always result in waiting_toplevel_command state\n                    # Don't show error messages, as the interrupted command may have been InlineCommand\n                    # (handlers of ToplevelCommands in normal cases catch the interrupt and provide\n                    # relevant message)\n                    self.send_message(ToplevelResponse())\n        except Exception:\n            logger.exception(\"Crash in mainloop\")\n            traceback.print_exc()\n\n    def add_command(self, command_name, handler):\n        \"\"\"Handler should be 1-argument function taking command object.\n        \n        Handler may return None (in this case no response is sent to frontend)\n        or a BackendResponse\n        \"\"\"\n        self._command_handlers[command_name] = handler\n    \n    def add_object_info_tweaker(self, tweaker):\n        \"\"\"Tweaker should be 2-argument function taking value and export record\"\"\"\n        self._object_info_tweakers.append(tweaker)\n\n    def add_import_handler(self, module_name, handler):\n        if module_name not in self._import_handlers:\n            self._import_handlers[module_name] = []\n        self._import_handlers[module_name].append(handler)\n    \n    def add_ast_postprocessor(self, func):\n        self._ast_postprocessors.append(func)\n    \n    def get_main_module(self):\n        return __main__\n\n    def handle_command(self, cmd):\n        assert isinstance(cmd, (ToplevelCommand, InlineCommand))\n\n        def create_error_response(**kw):\n            if isinstance(cmd, ToplevelCommand):\n                return ToplevelResponse(command_name=cmd.name, **kw)\n            else:\n                return InlineResponse(command_name=cmd.name, **kw)\n\n        if cmd.name in self._command_handlers:\n            handler = self._command_handlers[cmd.name]\n        else:\n            handler = getattr(self, \"_cmd_\" + cmd.name, None)\n\n        if handler is None:\n            response = create_error_response(error=\"Unknown command: \" + cmd.name)\n        else:\n            try:\n                response = handler(cmd)\n            except SystemExit:\n                # Must be caused by Thonny or plugins code\n                if isinstance(cmd, ToplevelCommand):\n                    traceback.print_exc()\n                response = create_error_response(SystemExit=True)\n            except UserError as e:\n                sys.stderr.write(str(e) + \"\\n\")\n                response = create_error_response()\n            except KeyboardInterrupt:\n                response = create_error_response(\n                    user_exception=self._prepare_user_exception()\n                )\n            except Exception:\n                _report_internal_error()\n                response = create_error_response(\n                    context_info=\"other unhandled exception\"\n                )\n\n        if response is False:\n            # Command doesn't want to send any response\n            return\n\n        if response is None and isinstance(cmd, ToplevelCommand):\n            # create simple default response\n            response = ToplevelResponse(command_name=cmd.name)\n\n        # TODO: add these in response creation time in a helper function\n        if isinstance(response, ToplevelResponse):\n            response[\"gui_is_active\"] = (\n                self._get_tkinter_default_root() is not None\n                or self._get_qt_app() is not None\n            )\n\n        self.send_message(response)\n\n    def get_option(self, name, default=None):\n        section, subname = self._parse_option_name(name)\n        val = self._get_ini().get(section, subname, fallback=default)\n        try:\n            return ast.literal_eval(val)\n        except Exception:\n            return val\n\n    def set_option(self, name, value):\n        ini = self._get_ini()\n        section, subname = self._parse_option_name(name)\n        if not ini.has_section(section):\n            ini.add_section(section)\n        if not isinstance(value, str):\n            value = repr(value)\n        ini.set(section, subname, value)\n        self.save_settings()\n    \n    def switch_env_to_script_mode(self, cmd):\n        if \"\" in sys.path:\n            sys.path.remove(\"\") # current directory\n            \n        filename = cmd.args[0]\n        if os.path.isfile(filename):\n            sys.path.insert(0, os.path.abspath(os.path.dirname(filename))) \n            __main__.__dict__[\"__file__\"] = filename\n        \n    \n    def _parse_option_name(self, name):\n        if \".\" in name:\n            return name.split(\".\", 1)\n        else:\n            return \"general\", name\n\n    def _get_ini(self):\n        if self._ini is None:\n            import configparser\n\n            self._ini = configparser.ConfigParser(interpolation=None)\n            self._ini.read(_CONFIG_FILENAME)\n\n        return self._ini\n\n    def save_settings(self):\n        if self._ini is None:\n            return\n\n        with open(_CONFIG_FILENAME, \"w\") as fp:\n            self._ini.write(fp)\n    \n    \n    def _custom_import(self, *args, **kw):\n        module = self._original_import(*args, **kw)\n        \n        if not hasattr(module, \"__name__\"):\n            return module\n        \n        # module specific handlers\n        for handler in self._import_handlers.get(module.__name__, []):\n            try:\n                handler(module)\n            except Exception:\n                _report_internal_error()\n\n        # general handlers\n        for handler in self._import_handlers.get(\"*\", []):\n            try:\n                handler(module)\n            except Exception:\n                _report_internal_error()\n\n        return module\n\n    def _load_shared_modules(self):\n        self.load_modules_with_frontend_path([\"parso\", \"jedi\", \"thonnycontrib\", \"six\", \"asttokens\"])\n\n    def load_modules_with_frontend_path(self, names):\n        from importlib import import_module\n        original_sys_path = sys.path\n        try:\n            sys.path = sys.path + self._frontend_sys_path\n            for name in names:\n                try:\n                    import_module(name)\n                except ImportError:\n                    pass\n        finally:\n            sys.path = original_sys_path\n\n    def _load_plugins(self):\n        # built-in plugins\n        import thonny.plugins.backend  # pylint: disable=redefined-outer-name\n\n        self._load_plugins_from_path(\n            thonny.plugins.backend.__path__, \"thonny.plugins.backend.\"\n        )\n\n        # 3rd party plugins from namespace package\n        try:\n            import thonnycontrib.backend  # @UnresolvedImport\n        except ImportError:\n            # No 3rd party plugins installed\n            pass\n        else:\n            self._load_plugins_from_path(\n                thonnycontrib.backend.__path__, \"thonnycontrib.backend.\"\n            )\n\n    def _load_plugins_from_path(self, path, prefix):\n        load_function_name = \"load_plugin\"\n        for _, module_name, _ in sorted(\n            pkgutil.iter_modules(path, prefix), key=lambda x: x[1]\n        ):\n            try:\n                m = importlib.import_module(module_name)\n                if hasattr(m, load_function_name):\n                    f = getattr(m, load_function_name)\n                    sig = inspect.signature(f)\n                    if len(sig.parameters) == 0:\n                        f()\n                    else:\n                        f(self)\n            except Exception:\n                logger.exception(\"Failed loading plugin '\" + module_name + \"'\")\n\n    def _install_signal_handler(self):\n        def signal_handler(signal_, frame):\n            raise KeyboardInterrupt(\"Execution interrupted\")\n\n        if os.name == \"nt\":\n            signal.signal(signal.SIGBREAK, signal_handler)\n        else:\n            signal.signal(signal.SIGINT, signal_handler)\n\n    def _cmd_cd(self, cmd):\n        if len(cmd.args) == 1:\n            path = cmd.args[0]\n            try:\n                os.chdir(path)\n                return ToplevelResponse()\n            except FileNotFoundError:\n                raise UserError(\"No such folder: \" + path)\n        else:\n            raise UserError(\"cd takes one parameter\")\n\n    def _cmd_Run(self, cmd):\n        self.switch_env_to_script_mode(cmd)\n        return self._execute_file(cmd, SimpleRunner)\n\n    def _cmd_run(self, cmd):\n        return self._execute_file(cmd, SimpleRunner)\n\n    def _cmd_FastDebug(self, cmd):\n        self.switch_env_to_script_mode(cmd)\n        return self._execute_file(cmd, FastTracer)\n\n    def _cmd_Debug(self, cmd):\n        self.switch_env_to_script_mode(cmd)\n        return self._execute_file(cmd, NiceTracer)\n\n    def _cmd_debug(self, cmd):\n        return self._execute_file(cmd, NiceTracer)\n\n    def _cmd_execute_source(self, cmd):\n        \"\"\"Executes Python source entered into shell\"\"\"\n        filename = \"<pyshell>\"\n        ws_stripped_source = cmd.source.strip()\n        source = ws_stripped_source.strip(\"?\")\n        num_stripped_question_marks = len(ws_stripped_source) - len(source)\n\n        # let's see if it's single expression or something more complex\n        try:\n            root = ast.parse(source, filename=filename, mode=\"exec\")\n        except SyntaxError as e:\n            error = \"\".join(traceback.format_exception_only(type(e), e))\n            sys.stderr.write(error)\n            return ToplevelResponse()\n\n        assert isinstance(root, ast.Module)\n\n        if len(root.body) == 1 and isinstance(root.body[0], ast.Expr):\n            mode = \"eval\"\n        elif len(root.body) > 1 and isinstance(root.body[-1], ast.Expr):\n            mode = \"exec+eval\"\n        else:\n            mode = \"exec\"\n\n        result_attributes = self._execute_source(\n            source,\n            filename,\n            mode,\n            NiceTracer if getattr(cmd, \"debug_mode\", False) else SimpleRunner,\n            cmd,\n        )\n\n        result_attributes[\"num_stripped_question_marks\"] = num_stripped_question_marks\n\n        return ToplevelResponse(command_name=\"execute_source\", **result_attributes)\n\n    def _cmd_execute_system_command(self, cmd):\n        env = dict(os.environ).copy()\n        encoding = \"utf-8\"\n        env[\"PYTHONIOENCODING\"] = encoding\n        # Make sure this python interpreter and its scripts are available\n        # in PATH \n        update_system_path(env, get_augmented_system_path(get_exe_dirs()))\n        popen_kw = dict(\n            stdout=subprocess.PIPE,\n            stderr=subprocess.PIPE,\n            shell=True,\n            env=env,\n            universal_newlines=True,\n        )\n        \n        if sys.version_info >= (3,6):\n            popen_kw[\"errors\"] = \"replace\"\n            popen_kw[\"encoding\"] = encoding\n        \n        assert cmd.cmd_line.startswith(\"!\")\n        cmd_line = cmd.cmd_line[1:]\n        proc = subprocess.Popen(cmd_line, **popen_kw)\n        \n        def copy_stream(source, target):\n            while True:\n                c = source.readline()\n                if c == \"\":\n                    break\n                else:\n                    target.write(c)\n        \n        copy_out = Thread(target=lambda: copy_stream(proc.stdout, sys.stdout), daemon=True)\n        copy_err = Thread(target=lambda: copy_stream(proc.stderr, sys.stderr), daemon=True)\n        \n        copy_out.start()\n        copy_err.start()\n        try:\n            proc.wait()\n        except KeyboardInterrupt as e:\n            print(str(e), file=sys.stderr)\n        \n        copy_out.join()\n        copy_err.join()\n\n    def _cmd_process_gui_events(self, cmd):\n        # advance the event loop\n\n        try:\n            # First try Tkinter:\n            root = self._get_tkinter_default_root()\n            if root is not None:\n                import tkinter\n\n                # http://bugs.python.org/issue989712\n                # http://bugs.python.org/file6090/run.py.diff\n                while root.dooneevent(tkinter._tkinter.DONT_WAIT):\n                    pass\n            else:\n                # Try Qt only when Tkinter is not used\n                app = self._get_qt_app()\n                if app is not None:\n                    app.processEvents()\n\n        except Exception:\n            pass\n\n        return False\n\n    def _cmd_get_globals(self, cmd):\n        warnings.warn(\"_cmd_get_globals is deprecated for CPython\")\n        try:\n            return InlineResponse(\n                \"get_globals\",\n                module_name=cmd.module_name,\n                globals=self.export_globals(cmd.module_name),\n            )\n        except Exception as e:\n            return InlineResponse(\n                \"get_globals\", module_name=cmd.module_name, error=str(e)\n            )\n\n    def _cmd_get_frame_info(self, cmd):\n        atts = {}\n        try:\n            # TODO: make it work also in past states\n            frame, location = self._lookup_frame_by_id(cmd[\"frame_id\"])\n            if frame is None:\n                atts[\"error\"] = \"Frame not found\"\n            else:\n                atts[\"code_name\"] = frame.f_code.co_name\n                atts[\"module_name\"] = frame.f_globals[\"__name__\"]\n                atts[\"locals\"] = (\n                    None\n                    if frame.f_locals is frame.f_globals\n                    else self.export_variables(frame.f_locals)\n                )\n                atts[\"globals\"] = self.export_variables(frame.f_globals)\n                atts[\"freevars\"] = frame.f_code.co_freevars\n                atts[\"location\"] = location\n        except Exception as e:\n            atts[\"error\"] = str(e)\n\n        return InlineResponse(\"get_frame_info\", frame_id=cmd.frame_id, **atts)\n\n    def _cmd_get_active_distributions(self, cmd):\n        try:\n            # if it is called after first installation to user site packages\n            # this dir is not yet in sys.path\n            if (\n                site.ENABLE_USER_SITE\n                and site.getusersitepackages()\n                and os.path.exists(site.getusersitepackages())\n                and site.getusersitepackages() not in sys.path\n            ):\n                # insert before first site packages item\n                for i, item in enumerate(sys.path):\n                    if \"site-packages\" in item or \"dist-packages\" in item:\n                        sys.path.insert(i, site.getusersitepackages())\n                        break\n                else:\n                    sys.path.append(site.getusersitepackages())\n\n            import pkg_resources\n\n            pkg_resources._initialize_master_working_set()\n            dists = {\n                dist.key: {\n                    \"project_name\": dist.project_name,\n                    \"key\": dist.key,\n                    \"location\": dist.location,\n                    \"version\": dist.version,\n                }\n                for dist in pkg_resources.working_set\n            }  # pylint: disable=not-an-iterable\n\n            return InlineResponse(\n                \"get_active_distributions\",\n                distributions=dists,\n                usersitepackages=site.getusersitepackages()\n                if site.ENABLE_USER_SITE\n                else None,\n            )\n        except Exception:\n            return InlineResponse(\n                \"get_active_distributions\", error=traceback.format_exc()\n            )\n\n    def _cmd_get_locals(self, cmd):\n        for frame in inspect.stack():\n            if id(frame) == cmd.frame_id:\n                return InlineResponse(\n                    \"get_locals\", locals=self.export_variables(frame.f_locals)\n                )\n\n        raise RuntimeError(\"Frame '{0}' not found\".format(cmd.frame_id))\n\n    def _cmd_get_heap(self, cmd):\n        result = {}\n        for key in self._heap:\n            result[key] = self.export_value(self._heap[key])\n\n        return InlineResponse(\"get_heap\", heap=result)\n\n    def _cmd_shell_autocomplete(self, cmd):\n        error = None\n        try:\n            import jedi\n        except ImportError:\n            completions = []\n            error = \"Could not import jedi\"\n        else:\n            try:\n                # with warnings.catch_warnings():\n                interpreter = jedi.Interpreter(cmd.source, [__main__.__dict__])\n                completions = self._export_completions(interpreter.completions())\n            except Exception as e:\n                completions = []\n                error = \"Autocomplete error: \" + str(e)\n\n        return InlineResponse(\n            \"shell_autocomplete\",\n            source=cmd.source,\n            completions=completions,\n            error=error,\n        )\n\n    def _cmd_editor_autocomplete(self, cmd):\n        error = None\n        try:\n            import jedi\n\n            self._debug(jedi.__file__, sys.path)\n            with warnings.catch_warnings():\n                script = jedi.Script(cmd.source, cmd.row, cmd.column, cmd.filename)\n                completions = self._export_completions(script.completions())\n\n        except ImportError:\n            completions = []\n            error = \"Could not import jedi\"\n        except Exception as e:\n            completions = []\n            error = \"Autocomplete error: \" + str(e)\n\n        return InlineResponse(\n            \"editor_autocomplete\",\n            source=cmd.source,\n            row=cmd.row,\n            column=cmd.column,\n            filename=cmd.filename,\n            completions=completions,\n            error=error,\n        )\n\n    def _cmd_Reset(self, cmd):\n        if len(cmd.args) == 0:\n            # nothing to do, because Reset always happens in fresh process\n            return ToplevelResponse(\n                command_name=\"Reset\",\n                welcome_text=\"Python \" + _get_python_version_string(),\n                executable=sys.executable,\n            )\n        else:\n            raise UserError(\"Command 'Reset' doesn't take arguments\")\n\n    def _export_completions(self, jedi_completions):\n        result = []\n        for c in jedi_completions:\n            if not c.name.startswith(\"__\"):\n                record = {\n                    \"name\": c.name,\n                    \"complete\": c.complete,\n                    \"type\": c.type,\n                    \"description\": c.description,\n                }\n                \"\"\" TODO: \n                try:\n                    if c.type in [\"class\", \"module\", \"function\"]:\n                        if c.type == \"function\":\n                            record[\"docstring\"] = c.docstring()\n                        else:\n                            record[\"docstring\"] = c.description + \"\\n\" + c.docstring()\n                except Exception:\n                    pass\n                \"\"\"\n                result.append(record)\n        return result\n\n    def _cmd_get_object_info(self, cmd):\n        if (\n            isinstance(self._current_executor, NiceTracer)\n            and self._current_executor.is_in_past()\n        ):\n            info = {\"id\": cmd.object_id, \"error\": \"past info not available\"}\n\n        elif cmd.object_id in self._heap:\n            value = self._heap[cmd.object_id]\n            attributes = {}\n            if cmd.include_attributes:\n                for name in dir(value):\n                    if not name.startswith(\"__\") or cmd.all_attributes:\n                        # attributes[name] = inspect.getattr_static(value, name)\n                        try:\n                            attributes[name] = getattr(value, name)\n                        except Exception:\n                            pass\n\n            self._heap[id(type(value))] = type(value)\n            info = {\n                \"id\": cmd.object_id,\n                \"repr\": repr(value),\n                \"type\": str(type(value)),\n                \"full_type_name\": str(type(value))\n                .replace(\"<class '\", \"\")\n                .replace(\"'>\", \"\")\n                .strip(),\n                \"type_id\": id(type(value)),\n                \"attributes\": self.export_variables(attributes),\n            }\n\n            if isinstance(value, io.TextIOWrapper):\n                self._add_file_handler_info(value, info)\n            elif isinstance(\n                value,\n                (\n                    types.BuiltinFunctionType,\n                    types.BuiltinMethodType,\n                    types.FunctionType,\n                    types.LambdaType,\n                    types.MethodType,\n                ),\n            ):\n                self._add_function_info(value, info)\n            elif isinstance(value, (list, tuple, set)):\n                self._add_elements_info(value, info)\n            elif isinstance(value, dict):\n                self._add_entries_info(value, info)\n            elif hasattr(value, \"image_data\"):\n                info[\"image_data\"] = value.image_data\n\n            for tweaker in self._object_info_tweakers:\n                try:\n                    tweaker(value, info, cmd)\n                except Exception:\n                    logger.exception(\"Failed object info tweaker: \" + str(tweaker))\n\n        else:\n            info = {\"id\": cmd.object_id, \"error\": \"object info not available\"}\n\n        return InlineResponse(\"get_object_info\", id=cmd.object_id, info=info)\n\n    def _get_tkinter_default_root(self):\n        # tkinter._default_root is not None,\n        # when window has been created and mainloop isn't called or hasn't ended yet\n        tkinter = sys.modules.get(\"tkinter\")\n        if tkinter is not None:\n            return getattr(tkinter, \"_default_root\", None)\n        else:\n            return None\n\n    def _get_qt_app(self):\n        mod = sys.modules.get(\"PyQt5.QtCore\")\n        if mod is None:\n            mod = sys.modules.get(\"PyQt4.QtCore\")\n        if mod is None:\n            mod = sys.modules.get(\"PySide.QtCore\")\n        if mod is None:\n            return None\n\n        app_class = getattr(mod, \"QCoreApplication\", None)\n        if app_class is not None:\n            try:\n                return app_class.instance()\n            except Exception:\n                return None\n        else:\n            return None\n\n    def _add_file_handler_info(self, value, info):\n        try:\n            assert isinstance(value.name, str)\n            assert value.mode in (\"r\", \"rt\", \"tr\", \"br\", \"rb\")\n            assert value.errors in (\"strict\", None)\n            assert value.newlines is None or value.tell() > 0\n            # TODO: cache the content\n            # TODO: don't read too big files\n            with open(value.name, encoding=value.encoding) as f:\n                info[\"file_encoding\"] = f.encoding\n                info[\"file_content\"] = f.read()\n                info[\"file_tell\"] = value.tell()\n        except Exception as e:\n            info[\"file_error\"] = \"Could not get file content, error:\" + str(e)\n\n    def _add_function_info(self, value, info):\n        try:\n            info[\"source\"] = inspect.getsource(value)\n        except Exception:\n            pass\n\n    def _add_elements_info(self, value, info):\n        info[\"elements\"] = []\n        for element in value:\n            info[\"elements\"].append(self.export_value(element))\n\n    def _add_entries_info(self, value, info):\n        info[\"entries\"] = []\n        for key in value:\n            info[\"entries\"].append(\n                (self.export_value(key), self.export_value(value[key]))\n            )\n\n    def _execute_file(self, cmd, executor_class):\n        # args are accepted only in Run and Debug,\n        # and were stored in sys.argv already in VM.__init__\n        # TODO: are they?\n\n        if len(cmd.args) >= 1:\n            sys.argv = cmd.args  \n            filename = cmd.args[0]\n            if os.path.isabs(filename):\n                full_filename = filename\n            else:\n                full_filename = os.path.abspath(filename)\n\n            with tokenize.open(full_filename) as fp:\n                source = fp.read()\n\n            result_attributes = self._execute_source(\n                source, full_filename, \"exec\", executor_class, cmd,\n                self._ast_postprocessors\n            )\n            result_attributes[\"filename\"] = full_filename\n            return ToplevelResponse(command_name=cmd.name, **result_attributes)\n        else:\n            raise UserError(\"Command '%s' takes at least one argument\" % cmd.name)\n\n    def _execute_source(self, source, filename, execution_mode, executor_class,\n                        cmd, ast_postprocessors=[]):\n        self._current_executor = executor_class(self, cmd)\n\n        try:\n            return self._current_executor.execute_source(\n                source, filename, execution_mode, ast_postprocessors\n            )\n        finally:\n            self._current_executor = None\n\n    def _install_fake_streams(self):\n        self._original_stdin = sys.stdin\n        self._original_stdout = sys.stdout\n        self._original_stderr = sys.stderr\n\n        # yes, both out and err will be directed to out (but with different tags)\n        # this allows client to see the order of interleaving writes to stdout/stderr\n        sys.stdin = VM.FakeInputStream(self, sys.stdin)\n        sys.stdout = VM.FakeOutputStream(self, sys.stdout, \"stdout\")\n        sys.stderr = VM.FakeOutputStream(self, sys.stdout, \"stderr\")\n\n        # fake it properly: replace also \"backup\" streams\n        sys.__stdin__ = sys.stdin\n        sys.__stdout__ = sys.stdout\n        sys.__stderr__ = sys.stderr\n\n    def _install_custom_import(self):\n        self._original_import = builtins.__import__\n        builtins.__import__ = self._custom_import\n\n    def _restore_original_import(self):\n        builtins.__import__ = self._original_import\n\n    def _fetch_command(self):\n        line = self._original_stdin.readline()\n        if line == \"\":\n            logger.info(\"Read stdin EOF\")\n            sys.exit()\n        cmd = parse_message(line)\n        return cmd\n\n    def send_message(self, msg):\n        if \"cwd\" not in msg:\n            msg[\"cwd\"] = os.getcwd()\n\n        if isinstance(msg, ToplevelResponse) and \"globals\" not in msg:\n            msg[\"globals\"] = self.export_globals()\n\n        self._original_stdout.write(serialize_message(msg) + \"\\n\")\n        self._original_stdout.flush()\n\n    def export_value(self, value, max_repr_length=5000):\n        self._heap[id(value)] = value\n        try:\n            rep = repr(value)\n        except Exception:\n            # See https://bitbucket.org/plas/thonny/issues/584/problem-with-thonnys-back-end-obj-no\n            rep = \"??? <repr error>\"\n            \n        if len(rep) > max_repr_length:\n            rep = rep[:max_repr_length] + \"\u2026\"\n\n        return ValueInfo(id(value), rep)\n\n    def export_variables(self, variables):\n        result = {}\n        for name in variables:\n            if not name.startswith(\"__\"):\n                result[name] = self.export_value(variables[name], 100)\n\n        return result\n\n    def export_globals(self, module_name=\"__main__\"):\n        if module_name in sys.modules:\n            return self.export_variables(sys.modules[module_name].__dict__)\n        else:\n            raise RuntimeError(\"Module '{0}' is not loaded\".format(module_name))\n\n    def _debug(self, *args):\n        logger.debug(\"VM: \" + str(args))\n\n    def _enter_io_function(self):\n        self._io_level += 1\n\n    def _exit_io_function(self):\n        self._io_level -= 1\n\n    def is_doing_io(self):\n        return self._io_level > 0\n\n    def _export_stack(self, newest_frame, skip_checker=None):\n        result = []\n\n        system_frame = newest_frame\n\n        while system_frame is not None:\n            module_name = system_frame.f_globals[\"__name__\"]\n            code_name = system_frame.f_code.co_name\n            \n            if not skip_checker or not skip_checker(system_frame):\n                source, firstlineno, in_library = self._get_frame_source_info(system_frame)\n    \n                result.insert(\n                    0,\n                    FrameInfo(\n                        # TODO: can this id be reused by a later frame?\n                        # Need to store the refernce to avoid GC?\n                        # I guess it is not required, as id will be required\n                        # only for stacktrace inspection, and sys.last_exception\n                        # will have the reference anyway\n                        # (NiceTracer has its own reference keeping)\n                        id=id(system_frame),\n                        filename=system_frame.f_code.co_filename,\n                        module_name=module_name,\n                        code_name=code_name,\n                        locals=self.export_variables(system_frame.f_locals),\n                        globals=self.export_variables(system_frame.f_globals),\n                        freevars=system_frame.f_code.co_freevars,\n                        source=source,\n                        lineno=system_frame.f_lineno,\n                        firstlineno=firstlineno,\n                        in_library=in_library,\n                        event=\"line\",\n                        focus=TextRange(\n                            system_frame.f_lineno, 0, system_frame.f_lineno + 1, 0\n                        ),\n                        node_tags=None,\n                        current_statement=None,\n                        current_evaluations=None,\n                        current_root_expression=None,\n                    ),\n                )\n\n            if module_name == \"__main__\" and code_name == \"<module>\":\n                # this was last frame relevant to the user\n                break\n\n            system_frame = system_frame.f_back\n\n        return result\n\n    def _lookup_frame_by_id(self, frame_id):\n        def lookup_from_stack(frame):\n            if frame is None:\n                return None\n            elif id(frame) == frame_id:\n                return frame\n            else:\n                return lookup_from_stack(frame.f_back)\n\n        def lookup_from_tb(entry):\n            if entry is None:\n                return None\n            elif id(entry.tb_frame) == frame_id:\n                return entry.tb_frame\n            else:\n                return lookup_from_tb(entry.tb_next)\n\n        result = lookup_from_stack(inspect.currentframe())\n        if result is not None:\n            return result, \"stack\"\n\n        if getattr(sys, \"last_traceback\"):\n            result = lookup_from_tb(getattr(sys, \"last_traceback\"))\n            if result:\n                return result, \"last_traceback\"\n\n        _, _, tb = sys.exc_info()\n        return lookup_from_tb(tb), \"current_exception\"\n\n    def _get_frame_source_info(self, frame):\n        fid = id(frame)\n        if fid not in self._source_info_by_frame:\n            self._source_info_by_frame[fid] = _fetch_frame_source_info(frame)\n\n        return self._source_info_by_frame[fid]\n\n    def _prepare_user_exception(self):\n        e_type, e_value, e_traceback = sys.exc_info()\n        sys.last_type, sys.last_value, sys.last_traceback = (\n            e_type,\n            e_value,\n            e_traceback,\n        )\n\n        processed_tb = traceback.extract_tb(e_traceback)\n\n        tb = e_traceback\n        while tb.tb_next is not None:\n            tb = tb.tb_next\n        last_frame = tb.tb_frame\n\n        if e_type is SyntaxError:\n            # Don't show ast frame\n            while (\n                last_frame.f_code.co_filename\n                and last_frame.f_code.co_filename == ast.__file__\n            ):\n                last_frame = last_frame.f_back\n\n        if e_type is SyntaxError:\n            msg = (\n                traceback.format_exception_only(e_type, e_value)[-1]\n                .replace(e_type.__name__ + \":\", \"\")\n                .strip()\n            )\n        else:\n            msg = str(e_value)\n\n        return {\n            \"type_name\": e_type.__name__,\n            \"message\": msg,\n            \"stack\": self._export_stack(last_frame),\n            \"items\": format_exception_with_frame_info(e_type, e_value, e_traceback),\n            \"filename\": getattr(e_value, \"filename\", processed_tb[-1].filename),\n            \"lineno\": getattr(e_value, \"lineno\", processed_tb[-1].lineno),\n            \"col_offset\": getattr(e_value, \"offset\", None),\n            \"line\": getattr(e_value, \"text\", processed_tb[-1].line),\n        }\n\n    class FakeStream:\n        def __init__(self, vm, target_stream):\n            self._vm = vm\n            self._target_stream = target_stream\n            self._processed_symbol_count = 0\n\n        def isatty(self):\n            return True\n\n        def __getattr__(self, name):\n            # TODO: is it safe to perform those other functions without notifying vm\n            # via _enter_io_function?\n            return getattr(self._target_stream, name)\n\n    class FakeOutputStream(FakeStream):\n        def __init__(self, vm, target_stream, stream_name):\n            VM.FakeStream.__init__(self, vm, target_stream)\n            self._stream_name = stream_name\n\n        def write(self, data):\n            try:\n                self._vm._enter_io_function()\n                if data != \"\":\n                    self._vm.send_message(\n                        BackendEvent(\n                            \"ProgramOutput\", stream_name=self._stream_name, data=data\n                        )\n                    )\n                    self._processed_symbol_count += len(data)\n            finally:\n                self._vm._exit_io_function()\n\n        def writelines(self, lines):\n            try:\n                self._vm._enter_io_function()\n                self.write(\"\".join(lines))\n            finally:\n                self._vm._exit_io_function()\n\n    class FakeInputStream(FakeStream):\n        def _generic_read(self, method, limit=-1):\n            # is there some queued input?\n            if not self._vm._input_queue.empty():\n                cmd = self._vm._input_queue.get()\n                self._processed_symbol_count += len(cmd.data)\n                return cmd.data\n            \n            # new input needs to be requested\n            try:\n                self._vm._enter_io_function()\n                self._vm.send_message(\n                    BackendEvent(\"InputRequest\", method=method, limit=limit)\n                )\n\n                while True:\n                    cmd = self._vm._fetch_command()\n                    if isinstance(cmd, InputSubmission):\n                        self._processed_symbol_count += len(cmd.data)\n                        return cmd.data\n                    elif isinstance(cmd, InlineCommand):\n                        self._vm.handle_command(cmd)\n                    else:\n                        raise RuntimeError(\n                            \"Wrong type of command when waiting for input\"\n                        )\n            finally:\n                self._vm._exit_io_function()\n\n        def read(self, limit=-1):\n            return self._generic_read(\"read\", limit)\n\n        def readline(self, limit=-1):\n            return self._generic_read(\"readline\", limit)\n\n        def readlines(self, limit=-1):\n            return self._generic_read(\"readlines\", limit)\n        \n        def __next__(self):\n            return self.readline()\n        \n        def __iter__(self):\n            return self\n\n\ndef prepare_hooks(method):\n    @functools.wraps(method)\n    def wrapper(self, *args, **kwargs):\n        try:\n            sys.meta_path.insert(0, self)\n            self._vm._install_custom_import()\n            return method(self, *args, **kwargs)\n        finally:\n            del sys.meta_path[0]\n            if hasattr(self._vm, \"_original_import\"):\n                self._vm._restore_original_import()\n\n    return wrapper\n\n\ndef return_execution_result(method):\n    @functools.wraps(method)\n    def wrapper(self, *args, **kwargs):\n        try:\n            result = method(self, *args, **kwargs)\n            if result is not None:\n                return result\n            return {\"context_info\": \"after normal execution\"}\n        except Exception:\n            return {\"user_exception\": self._vm._prepare_user_exception()}\n\n    return wrapper\n\n\nclass Executor:\n    def __init__(self, vm, original_cmd):\n        self._vm = vm\n        self._original_cmd = original_cmd\n        self._main_module_path = None\n\n    def execute_source(self, source, filename, mode, ast_postprocessors):\n        if isinstance(source, str):\n            # TODO: simplify this or make sure encoding is correct\n            source = source.encode(\"utf-8\")\n\n        if os.path.exists(filename):\n            self._main_module_path = filename\n\n        global_vars = __main__.__dict__\n        statements = expression = None\n\n        try:\n            if mode == \"exec+eval\":\n                assert not ast_postprocessors \n                # Useful in shell to get last expression value in multi-statement block\n                root = self._prepare_ast(source, filename, \"exec\")\n                statements = compile(ast.Module(body=root.body[:-1]), filename, \"exec\")\n                expression = compile(\n                    ast.Expression(root.body[-1].value), filename, \"eval\"\n                )\n            else:\n                root = self._prepare_ast(source, filename, mode)\n                if mode == \"eval\":\n                    assert not ast_postprocessors \n                    expression = compile(root, filename, mode)\n                elif mode == \"exec\":\n                    for func in ast_postprocessors:\n                        func(root)\n                    statements = compile(root, filename, mode)\n                else:\n                    raise ValueError(\"Unknown mode\")\n\n            return self._execute_prepared_user_code(statements, expression, global_vars)\n        except SyntaxError:\n            return {\"user_exception\": self._vm._prepare_user_exception()}\n        except SystemExit:\n            return {\"SystemExit\": True}\n        except Exception:\n            _report_internal_error()\n            return {}\n\n    @return_execution_result\n    @prepare_hooks\n    def _execute_prepared_user_code(self, statements, expression, global_vars):\n        if statements:\n            exec(statements, global_vars)\n        if expression:\n            value = eval(expression, global_vars)\n            if value is not None:\n                builtins._ = value\n            return {\"value_info\": self._vm.export_value(value)}\n\n    def find_spec(self, fullname, path=None, target=None):\n        \"\"\"override in subclass for custom-loading user modules\"\"\"\n        return None\n\n    def _prepare_ast(self, source, filename, mode):\n        return ast.parse(source, filename, mode)\n\n\nclass SimpleRunner(Executor):\n    pass\n\n\nclass Tracer(Executor):\n    def __init__(self, vm, original_cmd):\n        super().__init__(vm, original_cmd)\n        self._thonny_src_dir = os.path.dirname(sys.modules[\"thonny\"].__file__)\n        self._fresh_exception = None\n\n        # first (automatic) stepping command depends on whether any breakpoints were set or not\n        breakpoints = self._original_cmd.breakpoints\n        assert isinstance(breakpoints, dict)\n        if breakpoints:\n            command_name = \"resume\"\n        else:\n            command_name = \"step_into\"\n\n        self._current_command = DebuggerCommand(\n            command_name,\n            state=None,\n            focus=None,\n            frame_id=None,\n            exception=None,\n            breakpoints=breakpoints,\n        )\n\n    def _trace(self, frame, event, arg):\n        raise NotImplementedError()\n\n    def _frame_is_alive(self, frame_id):\n        raise NotImplementedError()\n\n    def _execute_prepared_user_code(self, statements, expression, global_vars):\n        try:\n            sys.settrace(self._trace)\n            if hasattr(sys, \"breakpointhook\"):\n                old_breakpointhook = sys.breakpointhook\n                sys.breakpointhook = self._breakpointhook\n\n            return super()._execute_prepared_user_code(\n                statements, expression, global_vars\n            )\n        finally:\n            sys.settrace(None)\n            if hasattr(sys, \"breakpointhook\"):\n                sys.breakpointhook = old_breakpointhook\n\n    def _should_skip_frame(self, frame):\n        # For some reason Pylint doesn't see inspect.CO_GENERATOR and such\n        # pylint: disable=no-member\n        code = frame.f_code\n\n        return (\n            code is None\n            or code.co_filename is None\n            or not self._is_interesting_module_file(code.co_filename)\n            or code.co_flags & inspect.CO_GENERATOR  # @UndefinedVariable\n            or sys.version_info >= (3, 5)\n            and code.co_flags & inspect.CO_COROUTINE  # @UndefinedVariable\n            or sys.version_info >= (3, 5)\n            and code.co_flags & inspect.CO_ITERABLE_COROUTINE  # @UndefinedVariable\n            or sys.version_info >= (3, 6)\n            and code.co_flags & inspect.CO_ASYNC_GENERATOR  # @UndefinedVariable\n            or \"importlib._bootstrap\" in code.co_filename\n            or self._vm.is_doing_io()\n            or path_startswith(code.co_filename, self._thonny_src_dir)\n        )\n\n    def _is_interesting_module_file(self, path):\n        # interesting files are files directly in current directory\n        # or under the same directory as main module\n        # or the ones with breakpoints\n        return (\n            path_startswith(path, os.getcwd())\n            or self._main_module_path is not None\n            and path_startswith(path, os.path.dirname(self._main_module_path))\n            or path in self._current_command[\"breakpoints\"]\n        )\n\n    def _is_interesting_exception(self, frame):\n        # interested only in exceptions in command frame or its parent frames\n        return id(frame) == self._current_command[\n            \"frame_id\"\n        ] or not self._frame_is_alive(self._current_command[\"frame_id\"])\n\n    def _fetch_next_debugger_command(self):\n        while True:\n            cmd = self._vm._fetch_command()\n            if isinstance(cmd, InlineCommand):\n                self._vm.handle_command(cmd)\n            else:\n                assert isinstance(cmd, DebuggerCommand)\n                return cmd\n\n    def _register_affected_frame(self, exception_obj, frame):\n        if not hasattr(exception_obj, \"_affected_frame_ids_\"):\n            exception_obj._affected_frame_ids_ = set()\n        exception_obj._affected_frame_ids_.add(id(frame))\n\n    def _get_current_exception(self):\n        if self._fresh_exception is not None:\n            return self._fresh_exception\n        else:\n            return sys.exc_info()\n\n    def _export_exception_info(self):\n        exc = self._get_current_exception()\n\n        if exc[0] is None:\n            return {\n                \"id\": None,\n                \"msg\": None,\n                \"type_name\": None,\n                \"lines_with_frame_info\": None,\n                \"affected_frame_ids\": set(),\n                \"is_fresh\": False, \n            }\n        else:\n            return {\n                \"id\": id(exc[1]),\n                \"msg\": str(exc[1]),\n                \"type_name\": exc[0].__name__,\n                \"lines_with_frame_info\": format_exception_with_frame_info(*exc),\n                \"affected_frame_ids\": exc[1]._affected_frame_ids_,\n                \"is_fresh\": exc == self._fresh_exception, \n            }\n\n    def _get_breakpoints_with_cursor_position(self, cmd):\n        if cmd[\"cursor_position\"] is None:\n            return cmd[\"breakpoints\"]\n        else:\n            result = copy.copy(cmd[\"breakpoints\"])\n            path, line = cmd[\"cursor_position\"]\n            if path not in result:\n                result[path] = set()\n            result[path].add(line)\n            return result\n\n    def _breakpointhook(self, *args, **kw):\n        pass\n\n\nclass FastTracer(Tracer):\n    def __init__(self, vm, original_cmd):\n        super().__init__(vm, original_cmd)\n\n        self._alive_frame_ids = set()\n\n    def _breakpointhook(self, *args, **kw):\n        frame = inspect.currentframe()\n        while self._should_skip_frame(frame):\n            frame = frame.f_back\n        self._report_current_state(frame)\n        self._current_command = self._fetch_next_debugger_command()\n\n    def _trace(self, frame, event, arg):\n\n        # is this frame interesting at all?\n        if event == \"call\" and self._should_skip_frame(frame):\n            return None\n\n        if event == \"call\":\n            self._fresh_exception = None\n            # can we skip this frame?\n            if (\n                self._current_command.name == \"step_over\"\n                and not self._current_command.breakpoints\n            ):\n                return None\n            else:\n                self._alive_frame_ids.add(id(frame))\n\n        elif event == \"return\":\n            self._fresh_exception = None\n            self._alive_frame_ids.remove(id(frame))\n\n        elif event == \"exception\":\n            self._fresh_exception = arg\n            self._register_affected_frame(arg[1], frame)\n            if self._is_interesting_exception(frame):\n                # UI doesn't know about separate exception events\n                self._report_current_state(frame)\n                self._current_command = self._fetch_next_debugger_command()\n\n        elif event == \"line\":\n            self._fresh_exception = None\n\n            handler = getattr(self, \"_cmd_%s_completed\" % self._current_command.name)\n            if handler(frame, self._current_command):\n                self._report_current_state(frame)\n                self._current_command = self._fetch_next_debugger_command()\n\n        else:\n            self._fresh_exception = None\n\n        return self._trace\n\n    def _report_current_state(self, frame):\n        msg = DebuggerResponse(\n            stack=self._vm._export_stack(frame, self._should_skip_frame),\n            in_present=True,\n            io_symbol_count=None,\n            exception_info=self._export_exception_info(),\n            tracer_class=\"FastTracer\",\n        )\n\n        self._vm.send_message(msg)\n\n    def _cmd_step_into_completed(self, frame, cmd):\n        return True\n\n    def _cmd_step_over_completed(self, frame, cmd):\n        frame_id = id(frame)\n        return (\n            frame_id == cmd.frame_id\n            or cmd.frame_id not in self._alive_frame_ids\n            or self._at_a_breakpoint(frame, cmd)\n        )\n\n    def _cmd_step_out_completed(self, frame, cmd):\n        return cmd.frame_id not in self._alive_frame_ids or self._at_a_breakpoint(\n            frame, cmd\n        )\n\n    def _cmd_resume_completed(self, frame, cmd):\n        return self._at_a_breakpoint(frame, cmd)\n\n    def _cmd_run_to_cursor_completed(self, frame, cmd):\n        return self._at_a_breakpoint(\n            frame, cmd, self._get_breakpoints_with_cursor_position(cmd)\n        )\n\n    def _at_a_breakpoint(self, frame, cmd, breakpoints=None):\n        # TODO: try re-entering same line in loop\n        if breakpoints is None:\n            breakpoints = cmd.breakpoints\n\n        filename = frame.f_code.co_filename\n        return filename in breakpoints and frame.f_lineno in breakpoints[filename]\n\n    def _frame_is_alive(self, frame_id):\n        return frame_id in self._alive_frame_ids\n\n\nclass NiceTracer(Tracer):\n    def __init__(self, vm, original_cmd):\n        super().__init__(vm, original_cmd)\n        self._instrumented_files = set()\n        self._install_marker_functions()\n        self._custom_stack = []\n        self._saved_states = []\n        self._current_state_index = 0\n\n        from collections import Counter\n\n        self._fulltags = Counter()\n        self._nodes = {}\n\n    def _breakpointhook(self, *args, **kw):\n        self._report_state(len(self._saved_states) - 1)\n        self._current_command = self._fetch_next_debugger_command()\n\n    def _install_marker_functions(self):\n        # Make dummy marker functions universally available by putting them\n        # into builtin scope\n        self.marker_function_names = {\n            BEFORE_STATEMENT_MARKER,\n            AFTER_STATEMENT_MARKER,\n            BEFORE_EXPRESSION_MARKER,\n            AFTER_EXPRESSION_MARKER,\n        }\n\n        for name in self.marker_function_names:\n            if not hasattr(builtins, name):\n                setattr(builtins, name, getattr(self, name))\n\n    def _prepare_ast(self, source, filename, mode):\n        # ast_utils need to be imported after asttokens \n        # is (custom-)imported \n        from thonny import ast_utils\n        root = ast.parse(source, filename, mode)\n\n        ast_utils.mark_text_ranges(root, source)\n        self._tag_nodes(root)\n        self._insert_expression_markers(root)\n        self._insert_statement_markers(root)\n        self._insert_for_target_markers(root)\n        self._instrumented_files.add(filename)\n\n        return root\n\n    def _should_skip_frame(self, frame):\n        code = frame.f_code\n        return (\n            # never skip marker functions\n            code.co_name not in self.marker_function_names  \n            and (\n                super()._should_skip_frame(frame)\n                or code.co_filename not in self._instrumented_files\n            )\n        )\n\n    def find_spec(self, fullname, path=None, target=None):\n        spec = PathFinder.find_spec(fullname, path, target)\n\n        if (\n            spec is not None\n            and isinstance(spec.loader, SourceFileLoader)\n            and getattr(spec, \"origin\", None)\n            and self._is_interesting_module_file(spec.origin)\n        ):\n            spec.loader = FancySourceFileLoader(fullname, spec.origin, self)\n            return spec\n        else:\n            return super().find_spec(fullname, path, target)\n\n    def is_in_past(self):\n        return self._current_state_index < len(self._saved_states) - 1\n\n    def _trace(self, frame, event, arg):\n        try:\n            return self._trace_and_catch(frame, event, arg)\n        except BaseException:\n            traceback.print_exc()\n            sys.settrace(None)\n            return None\n            \n    def _trace_and_catch(self, frame, event, arg):\n        \"\"\"\n        1) Detects marker calls and responds to client queries in these spots\n        2) Maintains a customized view of stack\n        \"\"\"\n        # frame skipping test should be done only in new frames\n        if event == \"call\" and self._should_skip_frame(frame):\n            return None\n\n        code_name = frame.f_code.co_name\n\n        if event == \"call\":\n            self._fresh_exception = (\n                None\n            )  # some code is running, therefore exception is not fresh anymore\n\n            if code_name in self.marker_function_names:\n                # the main thing\n                if code_name == BEFORE_STATEMENT_MARKER:\n                    event = \"before_statement\"\n                elif code_name == AFTER_STATEMENT_MARKER:\n                    event = \"after_statement\"\n                elif code_name == BEFORE_EXPRESSION_MARKER:\n                    event = \"before_expression\"\n                elif code_name == AFTER_EXPRESSION_MARKER:\n                    event = \"after_expression\"\n                else:\n                    raise AssertionError(\"Unknown marker function\")\n\n                marker_function_args = frame.f_locals.copy()\n                node = self._nodes[marker_function_args[\"node_id\"]]\n\n                del marker_function_args[\"self\"]\n\n                if \"call_function\" not in node.tags:\n                    self._handle_progress_event(\n                        frame.f_back, event, marker_function_args, node\n                    )\n                self._try_interpret_as_again_event(\n                    frame.f_back, event, marker_function_args, node\n                )\n\n            else:\n                # Calls to proper functions.\n                # Client doesn't care about these events,\n                # it cares about \"before_statement\" events in the first statement of the body\n                self._custom_stack.append(CustomStackFrame(frame, \"call\"))\n\n        elif event == \"exception\":\n            self._fresh_exception = arg\n            self._register_affected_frame(arg[1], frame)\n\n            # use the state prepared by previous event\n            last_custom_frame = self._custom_stack[-1]\n            assert last_custom_frame.system_frame == frame\n\n            assert last_custom_frame.event.startswith(\"before_\")\n            pseudo_event = last_custom_frame.event.replace(\"before_\", \"after_\").replace(\n                \"_again\", \"\"\n            )\n            self._handle_progress_event(frame, pseudo_event, {}, last_custom_frame.node)\n\n        elif event == \"return\":\n            self._fresh_exception = None\n\n            if code_name not in self.marker_function_names:\n                self._custom_stack.pop()\n                if len(self._custom_stack) == 0:\n                    # We popped last frame, this means our program has ended.\n                    # There may be more events coming from upper (system) frames\n                    # but we're not interested in those\n                    sys.settrace(None)\n            else:\n                pass\n\n        else:\n            self._fresh_exception = None\n\n        return self._trace\n\n    def _handle_progress_event(self, frame, event, args, node):\n        self._save_current_state(frame, event, args, node)\n        self._respond_to_commands()\n\n    def _save_current_state(self, frame, event, args, node):\n        \"\"\"\n        Updates custom stack and stores the state\n        \n        self._custom_stack always keeps last info,\n        which gets exported as FrameInfos to _saved_states[\"stack\"]\n        \"\"\"\n        focus = TextRange(\n            node.lineno, node.col_offset, node.end_lineno, node.end_col_offset\n        )\n\n        custom_frame = self._custom_stack[-1]\n        custom_frame.event = event\n        custom_frame.focus = focus\n        custom_frame.node = node\n        custom_frame.node_tags = node.tags\n\n        if self._saved_states:\n            prev_state = self._saved_states[-1]\n            prev_state_frame = self._create_actual_active_frame(prev_state)\n        else:\n            prev_state = None\n            prev_state_frame = None\n\n        # store information about current statement / expression\n        if \"statement\" in event:\n            custom_frame.current_statement = focus\n\n            if event == \"before_statement_again\":\n                # keep the expression information from last event\n                pass\n            else:\n                custom_frame.current_root_expression = None\n                custom_frame.current_evaluations = []\n        else:\n            assert \"expression\" in event\n            assert prev_state_frame is not None\n\n            # see whether current_root_expression needs to be updated\n            prev_root_expression = prev_state_frame.current_root_expression\n            if event == \"before_expression\" and (\n                id(frame) != id(prev_state_frame.system_frame)\n                or \"statement\" in prev_state_frame.event\n                or not range_contains_smaller_or_equal(prev_root_expression, focus)\n            ):\n                custom_frame.current_root_expression = focus\n                custom_frame.current_evaluations = []\n\n            if event == \"after_expression\" and \"value\" in args:\n                # value is missing in case of exception\n                custom_frame.current_evaluations.append(\n                    (focus, self._vm.export_value(args[\"value\"]))\n                )\n\n        # Save the snapshot.\n        # Check if we can share something with previous state\n        if (\n            prev_state is not None\n            and id(prev_state_frame.system_frame) == id(frame)\n            and prev_state[\"exception_value\"] is self._get_current_exception()[1]\n            and prev_state[\"fresh_exception_id\"] == id(self._fresh_exception)\n            and (\"before\" in event or \"skipexport\" in node.tags)\n        ):\n\n            exception_info = prev_state[\"exception_info\"]\n            # share the stack ...\n            stack = prev_state[\"stack\"]\n            # ... but override certain things\n            active_frame_overrides = {\n                \"event\": custom_frame.event,\n                \"focus\": custom_frame.focus,\n                \"node_tags\": custom_frame.node_tags,\n                \"current_root_expression\": custom_frame.current_root_expression,\n                \"current_evaluations\": custom_frame.current_evaluations.copy(),\n                \"current_statement\": custom_frame.current_statement,\n            }\n        else:\n            # make full export\n            stack = self._export_stack()\n            exception_info = self._export_exception_info()\n            active_frame_overrides = {}\n\n        msg = {\n            \"stack\": stack,\n            \"active_frame_overrides\": active_frame_overrides,\n            \"in_client_log\": False,\n            \"io_symbol_count\": (\n                sys.stdin._processed_symbol_count\n                + sys.stdout._processed_symbol_count\n                + sys.stderr._processed_symbol_count\n            ),\n            \"exception_value\": self._get_current_exception()[1],\n            \"fresh_exception_id\": id(self._fresh_exception),\n            \"exception_info\": exception_info,\n        }\n\n        self._saved_states.append(msg)\n\n    def _respond_to_commands(self):\n        \"\"\"Tries to respond to client commands with states collected so far.\n        Returns if these states don't suffice anymore and Python needs\n        to advance the program\"\"\"\n\n        # while the state for current index is already saved:\n        while self._current_state_index < len(self._saved_states):\n            state = self._saved_states[self._current_state_index]\n\n            # Get current state's most recent frame (together with overrides\n            frame = self._create_actual_active_frame(state)\n\n            # Is this state meant to be seen?\n            if \"skip_\" + frame.event not in frame.node_tags:\n                # if True:\n                # Has the command completed?\n                tester = getattr(\n                    self, \"_cmd_\" + self._current_command.name + \"_completed\"\n                )\n                cmd_complete = tester(frame, self._current_command)\n\n                if cmd_complete:\n                    state[\"in_client_log\"] = True\n                    self._report_state(self._current_state_index)\n                    self._current_command = self._fetch_next_debugger_command()\n\n            if self._current_command.name == \"step_back\":\n                if self._current_state_index == 0:\n                    # Already in first state. Remain in this loop\n                    pass\n                else:\n                    assert self._current_state_index > 0\n                    # Current event is no longer present in GUI \"undo log\"\n                    self._saved_states[self._current_state_index][\n                        \"in_client_log\"\n                    ] = False\n                    self._current_state_index -= 1\n            else:\n                # Other commands move the pointer forward\n                self._current_state_index += 1\n\n    def _create_actual_active_frame(self, state):\n        return state[\"stack\"][-1]._replace(**state[\"active_frame_overrides\"])\n\n    def _report_state(self, state_index):\n        in_present = state_index == len(self._saved_states) - 1\n        if in_present:\n            # For reported new events re-export stack to make sure it is not shared.\n            # (There is tiny chance that sharing previous state\n            # after executing BinOp, Attribute, Compare or Subscript\n            # was not the right choice. See tag_nodes for more.)\n            # Re-exporting reduces the harm by showing correct data at least\n            # for present states.\n            self._saved_states[state_index][\"stack\"] = self._export_stack()\n\n        # need to make a copy for applying overrides\n        # and removing helper fields without modifying original\n        state = self._saved_states[state_index].copy()\n        state[\"stack\"] = state[\"stack\"].copy()\n\n        state[\"in_present\"] = in_present\n        if not in_present:\n            # for past states fix the newest frame\n            state[\"stack\"][-1] = self._create_actual_active_frame(state)\n\n        del state[\"exception_value\"]\n        del state[\"active_frame_overrides\"]\n\n        # Convert stack of TempFrameInfos to stack of FrameInfos\n        new_stack = []\n        for tframe in state[\"stack\"]:\n            system_frame = tframe.system_frame\n            module_name = system_frame.f_globals[\"__name__\"]\n            code_name = system_frame.f_code.co_name\n\n            source, firstlineno, in_library = self._vm._get_frame_source_info(\n                system_frame\n            )\n\n            assert firstlineno is not None, \"nofir \" + str(system_frame)\n\n            new_stack.append(\n                FrameInfo(\n                    id=id(system_frame),\n                    filename=system_frame.f_code.co_filename,\n                    module_name=module_name,\n                    code_name=code_name,\n                    locals=tframe.locals,\n                    globals=tframe.globals,\n                    freevars=system_frame.f_code.co_freevars,\n                    source=source,\n                    lineno=system_frame.f_lineno,\n                    firstlineno=firstlineno,\n                    in_library=in_library,\n                    event=tframe.event,\n                    focus=tframe.focus,\n                    node_tags=tframe.node_tags,\n                    current_statement=tframe.current_statement,\n                    current_evaluations=tframe.current_evaluations,\n                    current_root_expression=tframe.current_root_expression,\n                )\n            )\n\n        state[\"stack\"] = new_stack\n        state[\"tracer_class\"] = \"NiceTracer\"\n\n        self._vm.send_message(DebuggerResponse(**state))\n\n    def _try_interpret_as_again_event(\n        self, frame, original_event, original_args, original_node\n    ):\n        \"\"\"\n        Some after_* events can be interpreted also as \n        \"before_*_again\" events (eg. when last argument of a call was \n        evaluated, then we are just before executing the final stage of the call)\n        \"\"\"\n\n        if original_event == \"after_expression\":\n            value = original_args.get(\"value\")\n\n            if (\n                \"last_child\" in original_node.tags\n                or \"or_arg\" in original_node.tags\n                and value\n                or \"and_arg\" in original_node.tags\n                and not value\n            ):\n\n                # there may be explicit exceptions\n                if (\n                    \"skip_after_statement_again\" in original_node.parent_node.tags\n                    or \"skip_after_expression_again\" in original_node.parent_node.tags\n                ):\n                    return\n\n                # next step will be finalizing evaluation of parent of current expr\n                # so let's say we're before that parent expression\n                again_args = {\"node_id\": id(original_node.parent_node)}\n                again_event = (\n                    \"before_expression_again\"\n                    if \"child_of_expression\" in original_node.tags\n                    else \"before_statement_again\"\n                )\n\n                self._handle_progress_event(\n                    frame, again_event, again_args, original_node.parent_node\n                )\n\n    def _cmd_step_over_completed(self, frame, cmd):\n        \"\"\"\n        Identifies the moment when piece of code indicated by cmd.frame_id and cmd.focus\n        has completed execution (either successfully or not).\n        \"\"\"\n\n        if self._at_a_breakpoint(frame, cmd):\n            return True\n\n        # Make sure the correct frame_id is selected\n        if id(frame.system_frame) == cmd.frame_id:\n            # We're in the same frame\n            if \"before_\" in cmd.state:\n                if not range_contains_smaller_or_equal(cmd.focus, frame.focus):\n                    # Focus has changed, command has completed\n                    return True\n                else:\n                    # Keep running\n                    return False\n            elif \"after_\" in cmd.state:\n                if (\n                    frame.focus != cmd.focus\n                    or \"before_\" in frame.event\n                    or \"_expression\" in cmd.state\n                    and \"_statement\" in frame.event\n                    or \"_statement\" in cmd.state\n                    and \"_expression\" in frame.event\n                ):\n                    # The state has changed, command has completed\n                    return True\n                else:\n                    # Keep running\n                    return False\n        else:\n            # We're in another frame\n            if self._frame_is_alive(cmd.frame_id):\n                # We're in a successor frame, keep running\n                return False\n            else:\n                # Original frame has completed, assumedly because of an exception\n                # We're done\n                return True\n\n        return True  # not actually required, just to make Pylint happy\n\n    def _cmd_step_into_completed(self, frame, cmd):\n        return frame.event != \"after_statement\"\n\n    def _cmd_step_back_completed(self, frame, cmd):\n        # Check if the selected message has been previously sent to front-end\n        return (\n            self._saved_states[self._current_state_index][\"in_client_log\"]\n            or self._current_state_index == 0\n        )\n\n    def _cmd_step_out_completed(self, frame, cmd):\n        if self._current_state_index == 0:\n            return False\n\n        if frame.event == \"after_statement\":\n            return False\n\n        if self._at_a_breakpoint(frame, cmd):\n            return True\n\n        prev_state_frame = self._saved_states[self._current_state_index - 1][\"stack\"][\n            -1\n        ]\n\n        return (\n            # the frame has completed\n            not self._frame_is_alive(cmd.frame_id)\n            # we're in the same frame but on higher level\n            # TODO: expression inside statement expression has same range as its parent\n            or id(frame.system_frame) == cmd.frame_id\n            and range_contains_smaller(frame.focus, cmd.focus)\n            # or we were there in prev state\n            or id(prev_state_frame.system_frame) == cmd.frame_id\n            and range_contains_smaller(prev_state_frame.focus, cmd.focus)\n        )\n\n    def _cmd_resume_completed(self, frame, cmd):\n        return self._at_a_breakpoint(frame, cmd)\n\n    def _cmd_run_to_cursor_completed(self, frame, cmd):\n        return self._at_a_breakpoint(\n            frame, cmd, self._get_breakpoints_with_cursor_position(cmd)\n        )\n\n    def _at_a_breakpoint(self, frame, cmd, breakpoints=None):\n        if breakpoints is None:\n            breakpoints = cmd[\"breakpoints\"]\n\n        return (\n            frame.event in [\"before_statement\", \"before_expression\"]\n            and frame.system_frame.f_code.co_filename in breakpoints\n            and frame.focus.lineno in breakpoints[frame.system_frame.f_code.co_filename]\n            # consider only first event on a line\n            # (but take into account that same line may be reentered)\n            and (\n                cmd.focus is None\n                or (cmd.focus.lineno != frame.focus.lineno)\n                or (cmd.focus == frame.focus and cmd.state == frame.event)\n                or id(frame.system_frame) != cmd.frame_id\n            )\n        )\n\n    def _frame_is_alive(self, frame_id):\n        for frame in self._custom_stack:\n            if id(frame.system_frame) == frame_id:\n                return True\n\n        return False\n\n    def _export_stack(self):\n        result = []\n\n        exported_globals_per_module = {}\n\n        def export_globals(module_name, frame):\n            if module_name not in exported_globals_per_module:\n                exported_globals_per_module[module_name] = self._vm.export_variables(\n                    frame.f_globals\n                )\n            return exported_globals_per_module[module_name]\n\n        for custom_frame in self._custom_stack:\n\n            system_frame = custom_frame.system_frame\n            module_name = system_frame.f_globals[\"__name__\"]\n\n            result.append(\n                TempFrameInfo(\n                    # need to store the reference to the frame to avoid it being GC-d\n                    # otherwise frame id-s would be reused and this would\n                    # mess up communication with the frontend.\n                    system_frame=system_frame,\n                    locals=None\n                    if system_frame.f_locals is system_frame.f_globals\n                    else self._vm.export_variables(system_frame.f_locals),\n                    globals=export_globals(module_name, system_frame),\n                    event=custom_frame.event,\n                    focus=custom_frame.focus,\n                    node_tags=custom_frame.node_tags,\n                    current_evaluations=custom_frame.current_evaluations.copy(),\n                    current_statement=custom_frame.current_statement,\n                    current_root_expression=custom_frame.current_root_expression,\n                )\n            )\n\n        return result\n\n    def _thonny_hidden_before_stmt(self, node_id):\n        # The code to be debugged will be instrumented with this function\n        # inserted before each statement.\n        # Entry into this function indicates that statement as given\n        # by the code range is about to be evaluated next.\n        return None\n\n    def _thonny_hidden_after_stmt(self, node_id):\n        # The code to be debugged will be instrumented with this function\n        # inserted after each statement.\n        # Entry into this function indicates that statement as given\n        # by the code range was just executed successfully.\n        return None\n\n    def _thonny_hidden_before_expr(self, node_id):\n        # Entry into this function indicates that expression as given\n        # by the code range is about to be evaluated next\n        return node_id\n\n    def _thonny_hidden_after_expr(self, node_id, value):\n        # The code to be debugged will be instrumented with this function\n        # wrapped around each expression (given as 2nd argument).\n        # Entry into this function indicates that expression as given\n        # by the code range was just evaluated to given value\n        return value\n\n    def _tag_nodes(self, root):\n        \"\"\"Marks interesting properties of AST nodes\"\"\"\n        # ast_utils need to be imported after asttokens \n        # is (custom-)imported \n        from thonny import ast_utils\n        \n        def add_tag(node, tag):\n            if not hasattr(node, \"tags\"):\n                node.tags = set()\n                node.tags.add(\"class=\" + node.__class__.__name__)\n            node.tags.add(tag)\n\n        # ignore module docstring if it is before from __future__ import\n        if (\n            isinstance(root.body[0], ast.Expr)\n            and isinstance(root.body[0].value, ast.Str)\n            and len(root.body) > 1\n            and isinstance(root.body[1], ast.ImportFrom)\n            and root.body[1].module == \"__future__\"\n        ):\n\n            add_tag(root.body[0], \"ignore\")\n            add_tag(root.body[0].value, \"ignore\")\n            add_tag(root.body[1], \"ignore\")\n\n        for node in ast.walk(root):\n            if not isinstance(node, (ast.expr, ast.stmt)):\n                continue\n            \n            # tag last children\n            last_child = ast_utils.get_last_child(node)\n            assert last_child in [True, False, None] or isinstance(last_child, (ast.expr, ast.stmt, type(None))), \\\n                \"Bad last child \" + str(last_child) + \" of \" + str(node)\n            if last_child is not None:\n                add_tag(node, \"has_children\")\n\n                if isinstance(last_child, ast.AST):\n                    last_child.parent_node = node\n                    add_tag(last_child, \"last_child\")\n                    if isinstance(node, _ast.expr):\n                        add_tag(last_child, \"child_of_expression\")\n                    else:\n                        add_tag(last_child, \"child_of_statement\")\n\n                    if isinstance(node, ast.Call):\n                        add_tag(last_child, \"last_call_arg\")\n\n            # other cases\n            if isinstance(node, ast.Call):\n                add_tag(node.func, \"call_function\")\n                node.func.parent_node = node\n\n            if isinstance(node, ast.BoolOp) and node.op == ast.Or():\n                for child in node.values:\n                    add_tag(child, \"or_arg\")\n                    child.parent_node = node\n\n            if isinstance(node, ast.BoolOp) and node.op == ast.And():\n                for child in node.values:\n                    add_tag(child, \"and_arg\")\n                    child.parent_node = node\n\n            # TODO: assert (it doesn't evaluate msg when test == True)\n\n            if isinstance(node, ast.Str):\n                add_tag(node, \"StringLiteral\")\n                add_tag(node, \"skipexport\")\n\n            if hasattr(ast, \"JoinedStr\") and isinstance(node, ast.JoinedStr):\n                # can't present children normally without\n                # ast giving correct locations for them\n                add_tag(node, \"ignore_children\")\n\n            elif isinstance(node, ast.Num):\n                add_tag(node, \"NumberLiteral\")\n                add_tag(node, \"skipexport\")\n\n            elif isinstance(node, ast.List):\n                add_tag(node, \"skipexport\")\n\n            elif isinstance(node, ast.Tuple):\n                add_tag(node, \"skipexport\")\n\n            elif isinstance(node, ast.Set):\n                add_tag(node, \"skipexport\")\n\n            elif isinstance(node, ast.Dict):\n                add_tag(node, \"skipexport\")\n\n            elif isinstance(node, ast.Name):\n                add_tag(node, \"skipexport\")\n\n            elif isinstance(node, ast.NameConstant):\n                add_tag(node, \"skipexport\")\n\n            elif isinstance(node, ast.Expr):\n                if not isinstance(node.value, (ast.Yield, ast.YieldFrom)):\n                    add_tag(node, \"skipexport\")\n\n            elif isinstance(node, ast.If):\n                add_tag(node, \"skipexport\")\n\n            elif isinstance(node, ast.Return):\n                add_tag(node, \"skipexport\")\n\n            elif isinstance(node, ast.While):\n                add_tag(node, \"skipexport\")\n\n            elif isinstance(node, ast.Continue):\n                add_tag(node, \"skipexport\")\n\n            elif isinstance(node, ast.Break):\n                add_tag(node, \"skipexport\")\n\n            elif isinstance(node, ast.Pass):\n                add_tag(node, \"skipexport\")\n\n            elif isinstance(node, ast.For):\n                add_tag(node, \"skipexport\")\n\n            elif isinstance(node, ast.Try):\n                add_tag(node, \"skipexport\")\n\n            elif isinstance(node, ast.ListComp):\n                add_tag(node.elt, \"ListComp.elt\")\n\n            elif isinstance(node, ast.SetComp):\n                add_tag(node.elt, \"SetComp.elt\")\n\n            elif isinstance(node, ast.DictComp):\n                add_tag(node.key, \"DictComp.key\")\n                add_tag(node.value, \"DictComp.value\")\n\n            elif isinstance(node, ast.BinOp):\n                # TODO: use static analysis to detect type of left child\n                add_tag(node, \"skipexport\")\n\n            elif isinstance(node, ast.Attribute):\n                # TODO: use static analysis to detect type of left child\n                add_tag(node, \"skipexport\")\n\n            elif isinstance(node, ast.Subscript):\n                # TODO: use static analysis to detect type of left child\n                add_tag(node, \"skipexport\")\n\n            elif isinstance(node, ast.Compare):\n                # TODO: use static analysis to detect type of left child\n                add_tag(node, \"skipexport\")\n\n            if isinstance(node, ast.comprehension):\n                for expr in node.ifs:\n                    add_tag(expr, \"comprehension.if\")\n\n            if isinstance(node, (ast.Assign)):\n                # value will be presented in assignment's before_statement_again\n                add_tag(node.value, \"skip_after_expression\")\n\n            if isinstance(\n                node, (ast.Expr, ast.While, ast.For, ast.If, ast.Try, ast.With)\n            ):\n                add_tag(node, \"skip_after_statement_again\")\n\n            # make sure every node has this field\n            if not hasattr(node, \"tags\"):\n                node.tags = set()\n\n    def _should_instrument_as_expression(self, node):\n        return (\n            isinstance(node, _ast.expr)\n            and not getattr(node, \"incorrect_range\", False)\n            and \"ignore\" not in node.tags\n            and (not hasattr(node, \"ctx\") or isinstance(node.ctx, ast.Load))\n            # TODO: repeatedly evaluated subexpressions of comprehensions\n            # can be supported (but it requires some redesign both in backend and GUI)\n            and \"ListComp.elt\" not in node.tags\n            and \"SetComp.elt\" not in node.tags\n            and \"DictComp.key\" not in node.tags\n            and \"DictComp.value\" not in node.tags\n            and \"comprehension.if\" not in node.tags\n        )\n\n    def _should_instrument_as_statement(self, node):\n        return (\n            isinstance(node, _ast.stmt)\n            and not getattr(node, \"incorrect_range\", False)\n            and \"ignore\" not in node.tags\n            # Shouldn't insert anything before from __future__ import\n            # as this is not a normal statement\n            # https://bitbucket.org/plas/thonny/issues/183/thonny-throws-false-positive-syntaxerror\n            and (not isinstance(node, ast.ImportFrom) or node.module != \"__future__\")\n        )\n\n    def _insert_statement_markers(self, root):\n        # find lists of statements and insert before/after markers for each statement\n        for name, value in ast.iter_fields(root):\n            if isinstance(root, ast.Try) and name == \"handlers\":\n                # contains statements but is not statement itself\n                for handler in value:\n                    self._insert_statement_markers(handler)\n            elif isinstance(value, ast.AST):\n                self._insert_statement_markers(value)\n            elif isinstance(value, list):\n                if len(value) > 0:\n                    new_list = []\n                    for node in value:\n                        if self._should_instrument_as_statement(node):\n                            # self._debug(\"EBFOMA\", node)\n                            # add before marker\n                            new_list.append(\n                                self._create_statement_marker(\n                                    node, BEFORE_STATEMENT_MARKER\n                                )\n                            )\n\n                        # original statement\n                        if self._should_instrument_as_statement(node):\n                            self._insert_statement_markers(node)\n                        new_list.append(node)\n\n                        if (\n                            self._should_instrument_as_statement(node)\n                            and \"skipexport\" not in node.tags\n                        ):\n                            # add after marker\n                            new_list.append(\n                                self._create_statement_marker(\n                                    node, AFTER_STATEMENT_MARKER\n                                )\n                            )\n                    setattr(root, name, new_list)\n\n    def _create_statement_marker(self, node, function_name):\n        call = self._create_simple_marker_call(node, function_name)\n        stmt = ast.Expr(value=call)\n        ast.copy_location(stmt, node)\n        ast.fix_missing_locations(stmt)\n        return stmt\n\n    def _insert_for_target_markers(self, root):\n        \"\"\"inserts markers which notify assignment to for-loop variables\"\"\"\n        for node in ast.walk(root):\n            if isinstance(node, ast.For):\n                old_target = node.target\n                # print(vars(old_target))\n                temp_name = \"__for_loop_var\"\n                node.target = ast.Name(temp_name, ast.Store())\n\n                name_load = ast.Name(temp_name, ast.Load())\n                # value will be visible in parent's before_statement_again event\n                name_load.tags = {\n                    \"skip_before_expression\",\n                    \"skip_after_expression\",\n                    \"last_child\",\n                }\n                name_load.lineno, name_load.col_offset = (\n                    node.iter.lineno,\n                    node.iter.col_offset,\n                )\n                name_load.end_lineno, name_load.end_col_offset = (\n                    node.iter.end_lineno,\n                    node.iter.end_col_offset,\n                )\n\n                before_name_load = self._create_simple_marker_call(\n                    name_load, BEFORE_EXPRESSION_MARKER\n                )\n                after_name_load = ast.Call(\n                    func=ast.Name(id=AFTER_EXPRESSION_MARKER, ctx=ast.Load()),\n                    args=[before_name_load, name_load],\n                    keywords=[],\n                )\n\n                ass = ast.Assign([old_target], after_name_load)\n                ass.lineno, ass.col_offset = old_target.lineno, old_target.col_offset\n                ass.end_lineno, ass.end_col_offset = (\n                    node.iter.end_lineno,\n                    node.iter.end_col_offset,\n                )\n                ass.tags = {\n                    \"skip_before_statement\"\n                }  # before_statement_again will be shown\n\n                name_load.parent_node = ass\n\n                ass_before = self._create_statement_marker(ass, BEFORE_STATEMENT_MARKER)\n                node.body.insert(0, ass_before)\n                node.body.insert(1, ass)\n                node.body.insert(\n                    2, self._create_statement_marker(ass, AFTER_STATEMENT_MARKER)\n                )\n\n                ast.fix_missing_locations(node)\n\n    def _insert_expression_markers(self, node):\n        \"\"\"\n        TODO: this docstring is outdated\n        each expression e gets wrapped like this:\n            _after(_before(_loc, _node_is_zoomable), e, _node_role, _parent_range)\n        where\n            _after is function that gives the resulting value\n            _before is function that signals the beginning of evaluation of e\n            _loc gives the code range of e\n            _node_is_zoomable indicates whether this node has subexpressions\n            _node_role is either 'last_call_arg', 'last_op_arg', 'first_or_arg', \n                                 'first_and_arg', 'function' or None\n        \"\"\"\n        tracer = self\n\n        class ExpressionVisitor(ast.NodeTransformer):\n            def generic_visit(self, node):\n                if isinstance(node, _ast.expr):\n                    if isinstance(node, ast.Starred):\n                        # keep this node as is, but instrument its children\n                        return ast.NodeTransformer.generic_visit(self, node)\n                    elif tracer._should_instrument_as_expression(node):\n                        # before marker\n                        before_marker = tracer._create_simple_marker_call(\n                            node, BEFORE_EXPRESSION_MARKER\n                        )\n                        ast.copy_location(before_marker, node)\n\n                        if \"ignore_children\" in node.tags:\n                            transformed_node = node\n                        else:\n                            transformed_node = ast.NodeTransformer.generic_visit(\n                                self, node\n                            )\n\n                        # after marker\n                        after_marker = ast.Call(\n                            func=ast.Name(id=AFTER_EXPRESSION_MARKER, ctx=ast.Load()),\n                            args=[before_marker, transformed_node],\n                            keywords=[],\n                        )\n                        ast.copy_location(after_marker, node)\n                        ast.fix_missing_locations(after_marker)\n                        # further transformations may query original node location from after marker\n                        if hasattr(node, \"end_lineno\"):\n                            after_marker.end_lineno = node.end_lineno\n                            after_marker.end_col_offset = node.end_col_offset\n\n                        return after_marker\n                    else:\n                        # This expression (and its children) should be ignored\n                        return node\n                else:\n                    # Descend into statements\n                    return ast.NodeTransformer.generic_visit(self, node)\n\n        return ExpressionVisitor().visit(node)\n\n    def _create_simple_marker_call(self, node, fun_name, extra_args=[]):\n        args = [self._export_node(node)] + extra_args\n\n        return ast.Call(\n            func=ast.Name(id=fun_name, ctx=ast.Load()), args=args, keywords=[]\n        )\n\n    def _export_node(self, node):\n        assert isinstance(node, (ast.expr, ast.stmt))\n        node_id = id(node)\n        self._nodes[node_id] = node\n        return ast.Num(node_id)\n\n    def _debug(self, *args):\n        logger.debug(\"TRACER: \" + str(args))\n\n    def _execute_prepared_user_code(self, statements, expression, global_vars):\n        try:\n            return Tracer._execute_prepared_user_code(\n                self, statements, expression, global_vars\n            )\n        finally:\n            \"\"\"\n            from thonny.misc_utils import _win_get_used_memory\n            print(\"Memory:\", _win_get_used_memory() / 1024 / 1024)\n            print(\"States:\", len(self._saved_states))\n            print(self._fulltags.most_common())\n            \"\"\"\n\n\nclass CustomStackFrame:\n    def __init__(self, frame, event, focus=None):\n        self.system_frame = frame\n        self.event = event\n        self.focus = focus\n        self.current_evaluations = []\n        self.current_statement = None\n        self.current_root_expression = None\n\n\nclass FancySourceFileLoader(SourceFileLoader):\n    \"\"\"Used for loading and instrumenting user modules during fancy tracing\"\"\"\n\n    def __init__(self, fullname, path, tracer):\n        super().__init__(fullname, path)\n        self._tracer = tracer\n\n    def source_to_code(self, data, path, *, _optimize=-1):\n        old_tracer = sys.gettrace()\n        sys.settrace(None)\n        try:\n            root = self._tracer._prepare_ast(data, path, \"exec\")\n            return super().source_to_code(root, path)\n        finally:\n            sys.settrace(old_tracer)\n\n\ndef _get_frame_prefix(frame):\n    return str(id(frame)) + \" \" + \">\" * len(inspect.getouterframes(frame, 0)) + \" \"\n\n\ndef _get_python_version_string(add_word_size=False):\n    result = \".\".join(map(str, sys.version_info[:3]))\n    if sys.version_info[3] != \"final\":\n        result += \"-\" + sys.version_info[3]\n\n    if add_word_size:\n        result += \" (\" + (\"64\" if sys.maxsize > 2 ** 32 else \"32\") + \" bit)\"\n\n    return result\n\n\ndef _fetch_frame_source_info(frame):\n    if frame.f_code.co_filename is None or not os.path.exists(frame.f_code.co_filename):\n        return None, None, True\n    \n    is_libra = _is_library_file(frame.f_code.co_filename)\n    if frame.f_code.co_name == \"<module>\":\n        # inspect.getsource and getsourcelines don't help here\n        with tokenize.open(frame.f_code.co_filename) as fp:\n            return fp.read(), 1, is_libra\n    else:\n        # function or class\n        try:\n            source = inspect.getsource(frame.f_code)\n            \n            # inspect.getsource is not reliable, see eg:\n            # https://bugs.python.org/issue35101\n            # If the code name is not present as definition\n            # in the beginning of the source,\n            # then play safe and return the whole script \n            first_line = source.splitlines()[0]\n            if re.search(r\"\\b(class|def)\\b\\s+\\b%s\\b\" % frame.f_code.co_name,\n                         first_line) is None:\n                with tokenize.open(frame.f_code.co_filename) as fp:\n                    return fp.read(), 1, is_libra\n                \n            else:\n                return source, frame.f_code.co_firstlineno, is_libra \n        except OSError:\n            logger.exception(\"Problem getting source\")\n            return None, None, True\n\n\ndef format_exception_with_frame_info(\n    e_type, e_value, e_traceback, shorten_filenames=False\n):\n    \"\"\"Need to suppress thonny frames to avoid confusion\"\"\"\n\n    _traceback_message = \"Traceback (most recent call last):\\n\"\n\n    _cause_message = getattr(\n        traceback,\n        \"_cause_message\",\n        (\n            \"\\nThe above exception was the direct cause \"\n            + \"of the following exception:\\n\\n\"\n        ),\n    )\n\n    _context_message = getattr(\n        traceback,\n        \"_context_message\",\n        (\n            \"\\nDuring handling of the above exception, \"\n            + \"another exception occurred:\\n\\n\"\n        ),\n    )\n\n    def rec_format_exception_with_frame_info(etype, value, tb, chain=True):\n        # Based on\n        # https://www.python.org/dev/peps/pep-3134/#enhanced-reporting\n        # and traceback.format_exception\n\n        if etype is None:\n            etype = type(value)\n\n        if tb is None:\n            tb = value.__traceback__\n\n        if chain:\n            if value.__cause__ is not None:\n                yield from rec_format_exception_with_frame_info(\n                    None, value.__cause__, None\n                )\n                yield (_cause_message, None, None, None)\n            elif value.__context__ is not None and not value.__suppress_context__:\n                yield from rec_format_exception_with_frame_info(\n                    None, value.__context__, None\n                )\n                yield (_context_message, None, None, None)\n\n        if tb is not None:\n            yield (_traceback_message, None, None, None)\n            have_seen_first_relevant_frame = False\n\n            tb_temp = tb\n            for entry in traceback.extract_tb(tb):\n                assert tb_temp is not None  # actual tb doesn't end before extract_tb\n                if (\n                    \"thonny/backend\" not in entry.filename\n                    and \"thonny\\\\backend\" not in entry.filename\n                    and (\n                        not entry.filename.endswith(os.sep + \"ast.py\")\n                        or entry.name != \"parse\"\n                        or etype is not SyntaxError\n                    )\n                    or have_seen_first_relevant_frame\n                    or in_debug_mode()\n                ):\n\n                    have_seen_first_relevant_frame = True\n\n                    fmt = '  File \"{}\", line {}, in {}\\n'.format(\n                        entry.filename, entry.lineno, entry.name\n                    )\n\n                    if entry.line:\n                        fmt += \"    {}\\n\".format(entry.line.strip())\n\n                    yield (fmt, id(tb_temp.tb_frame), entry.filename, entry.lineno)\n\n                tb_temp = tb_temp.tb_next\n\n            assert tb_temp is None  # tb was exhausted\n\n        for line in traceback.format_exception_only(etype, value):\n            if etype is SyntaxError and line.endswith(\"^\\n\"):\n                # for some reason it may add several empty lines before ^-line\n                partlines = line.splitlines()\n                while len(partlines) >= 2 and partlines[-2].strip() == \"\":\n                    del partlines[-2]\n                line = \"\\n\".join(partlines) + \"\\n\"\n\n            yield (line, None, None, None)\n\n    items = rec_format_exception_with_frame_info(e_type, e_value, e_traceback)\n\n    return list(items)\n\n\ndef in_debug_mode():\n    return os.environ.get(\"THONNY_DEBUG\", False) in [1, \"1\", True, \"True\", \"true\"]\n\n\ndef _is_library_file(filename):\n    return (\n        filename is None\n        or path_startswith(filename, sys.prefix)\n        or hasattr(sys, \"base_prefix\")\n        and path_startswith(filename, sys.base_prefix)\n        or hasattr(sys, \"real_prefix\")\n        and path_startswith(filename, getattr(sys, \"real_prefix\"))\n        or site.ENABLE_USER_SITE\n        and path_startswith(filename, site.getusersitepackages())\n    )\n\n\ndef _report_internal_error():\n    print(\"PROBLEM WITH THONNY'S BACK-END:\\n\", file=sys.stderr)\n    traceback.print_exc()\n\n\ndef get_vm():\n    return _vm\n",
        "tags": "None",
        "text_widget_id": 57520752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:52:26.967645"
    },
    {
        "widget_id": 46743376,
        "widget_class": "ShellText",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "text_widget_context": "shell",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:52:29.181644"
    },
    {
        "widget_id": 46743376,
        "widget_class": "ShellText",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "text_widget_context": "shell",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:52:29.250644"
    },
    {
        "widget_id": 46743376,
        "widget_class": "ShellText",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "text_widget_context": "shell",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:52:29.340644"
    },
    {
        "widget_id": 46743376,
        "widget_class": "ShellText",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "text_widget_context": "shell",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:52:29.438643"
    },
    {
        "widget_id": 46743376,
        "widget_class": "ShellText",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "text_widget_context": "shell",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:52:29.538644"
    },
    {
        "widget_id": 46743376,
        "widget_class": "ShellText",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "text_widget_context": "shell",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:52:29.552644"
    },
    {
        "widget_id": 57520752,
        "widget_class": "CodeViewText",
        "text_widget_id": 57520752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:52:31.161319"
    },
    {
        "widget_id": 57520752,
        "widget_class": "CodeViewText",
        "text_widget_id": 57520752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:52:32.205797"
    },
    {
        "widget_id": 92100976,
        "widget_class": "EditorNotebook",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:52:40.446613"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T20:52:48.330764"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T20:52:49.934787"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:52:49.937786"
    },
    {
        "index1": "1.0",
        "index2": "23.0",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:52:50.779524"
    },
    {
        "index": "1.0",
        "text": "fail = open(\"andmed.txt\", encoding=\"UTF-8\")\nfor rida in fail:\n    print(\"Lugesin sellise rea: \" + rida)\nfail.close()",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:52:50.781524"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Paste>>",
        "time": "2020-11-14T20:52:50.781524"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:52:51.687356"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T20:52:51.782406"
    },
    {
        "index1": "54.4",
        "index2": "55.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:52:51.791418"
    },
    {
        "index": "54.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:52:51.792417"
    },
    {
        "index1": "55.0",
        "index2": "55.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:52:51.793417"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T20:52:51.793417"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T20:52:51.953417"
    },
    {
        "view_id": "AssistantView",
        "view_class": "AssistantView",
        "sequence": "ShowView",
        "time": "2020-11-14T20:52:52.025432"
    },
    {
        "index": "55.0",
        "text": "Traceback (most recent call last):\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:52:52.031430"
    },
    {
        "index": "56.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_65159984')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:52:52.031430"
    },
    {
        "index": "56.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1171, in wrapper",
        "tags": "('io', 'stderr', 'frame_65159984', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:52:52.032431"
    },
    {
        "index": "56.113",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_65159984')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:52:52.032431"
    },
    {
        "index": "57.0",
        "text": "    result = method(self, *args, **kwargs)\n",
        "tags": "('io', 'stderr', 'frame_65159984')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:52:52.032431"
    },
    {
        "index": "58.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_63530544')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:52:52.032431"
    },
    {
        "index": "58.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1158, in wrapper",
        "tags": "('io', 'stderr', 'frame_63530544', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:52:52.033431"
    },
    {
        "index": "58.113",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_63530544')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:52:52.033431"
    },
    {
        "index": "59.0",
        "text": "    return method(self, *args, **kwargs)\n",
        "tags": "('io', 'stderr', 'frame_63530544')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:52:52.033431"
    },
    {
        "index": "60.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_68241616')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:52:52.034431"
    },
    {
        "index": "60.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1232, in _execute_prepared_user_code",
        "tags": "('io', 'stderr', 'frame_68241616', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:52:52.034431"
    },
    {
        "index": "60.133",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_68241616')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:52:52.034431"
    },
    {
        "index": "61.0",
        "text": "    exec(statements, global_vars)\n",
        "tags": "('io', 'stderr', 'frame_68241616')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:52:52.035431"
    },
    {
        "index": "62.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_68272176')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:52:52.035431"
    },
    {
        "index": "62.2",
        "text": "File \"C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py\", line 1, in <module>",
        "tags": "('io', 'stderr', 'frame_68272176', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:52:52.035431"
    },
    {
        "index": "62.75",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_68272176')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:52:52.035431"
    },
    {
        "index": "63.0",
        "text": "    fail = open(\"andmed.txt\", encoding=\"UTF-8\")\n",
        "tags": "('io', 'stderr', 'frame_68272176')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:52:52.036432"
    },
    {
        "index": "64.0",
        "text": "FileNotFoundError: [Errno 2] No such file or directory: 'andmed.txt'\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:52:52.036432"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T20:52:52.036432"
    },
    {
        "index": "65.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:52:52.037431"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T20:52:56.620687"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T20:54:44.854797"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:54:44.855797"
    },
    {
        "index1": "1.0",
        "index2": "5.0",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:54:45.447305"
    },
    {
        "index": "1.0",
        "text": "f = open(\"anton_hansen_tammsaare_tode_ja_oigus_i.txt\", encoding='UTF-8')\n \nt\u00f5de = 0   # loendaja\n\u00f5igus = 0  # loendaja\n \nfor rida in f:           # ridade kaupa\n    s\u00f5nad = rida.split() # rea s\u00f5nad j\u00e4rjendisse\n    for s in s\u00f5nad:      # s\u00f5nade kaupa\n        if s == \"t\u00f5de\":\n            t\u00f5de += 1\n        if s == \"\u00f5igus\":\n            \u00f5igus += 1\n \nprint(\"Failis s\u00f5na 't\u00f5de' on\", t\u00f5de,  \"korda.\")\nprint(\"Failis s\u00f5na '\u00f5igus' on\", \u00f5igus, \"korda.\")\n \nf.close()",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:54:45.450304"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Paste>>",
        "time": "2020-11-14T20:54:45.450304"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T20:54:48.926552"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T20:54:49.850011"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:54:49.852010"
    },
    {
        "index1": "9.0",
        "index2": "12.22",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:54:51.853842"
    },
    {
        "index": "9.0",
        "text": "if s.strip(\".,?\") == \"t\u00f5de\":\n    t\u00f5de += 1\nif s.strip(\".,?\") == \"\u00f5igus\":\n    \u00f5igus += 1",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:54:51.856842"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Paste>>",
        "time": "2020-11-14T20:54:51.856842"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:54:52.763401"
    },
    {
        "index": "9.0",
        "text": "    ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:54:53.717120"
    },
    {
        "index1": "9.0",
        "index2": "9.4",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:54:54.041317"
    },
    {
        "index": "9.0",
        "text": "        ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:54:54.044315"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:54:54.737924"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:54:55.210303"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:54:55.653667"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:54:56.007975"
    },
    {
        "index1": "10.0",
        "index2": "10.4",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:54:57.138899"
    },
    {
        "index": "10.0",
        "text": "        ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:54:57.140898"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:54:58.142726"
    },
    {
        "index": "11.0",
        "text": "    ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:54:58.336947"
    },
    {
        "index1": "11.0",
        "index2": "11.4",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:54:58.652236"
    },
    {
        "index": "11.0",
        "text": "        ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:54:58.655239"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:54:59.854254"
    },
    {
        "index1": "12.0",
        "index2": "12.4",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:55:00.239537"
    },
    {
        "index": "12.0",
        "text": "        ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:55:00.241539"
    },
    {
        "index1": "12.0",
        "index2": "12.8",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:55:02.144286"
    },
    {
        "index": "12.0",
        "text": "            ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:55:02.147286"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:55:02.789812"
    },
    {
        "index1": "10.0",
        "index2": "10.8",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:55:03.063938"
    },
    {
        "index": "10.0",
        "text": "            ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:55:03.066936"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:55:04.209890"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T20:55:04.319997"
    },
    {
        "index1": "65.4",
        "index2": "66.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:55:04.329996"
    },
    {
        "index": "65.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:55:04.329996"
    },
    {
        "index1": "66.0",
        "index2": "66.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:55:04.330997"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T20:55:04.330997"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T20:55:04.489997"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T20:55:04.595995"
    },
    {
        "index": "66.0",
        "text": "F",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:55:04.595995"
    },
    {
        "index": "66.1",
        "text": "ailis s\u00f5na 't\u00f5de' on 18 korda.\nFailis s\u00f5na '\u00f5igus' on 58 korda.\n",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:55:04.596997"
    },
    {
        "index": "68.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:55:04.604995"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T20:55:22.539552"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T20:55:23.448169"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:55:23.450167"
    },
    {
        "index": "12.22",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:55:24.248604"
    },
    {
        "index": "13.0",
        "text": "            ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:55:24.250606"
    },
    {
        "index1": "13.8",
        "index2": "13.12",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:55:25.250379"
    },
    {
        "index": "13.8",
        "text": "if \"t\u00f5de\" in s.lower():\n    t\u00f5de += 1\nif \"\u00f5igus\" in s.lower():\n    \u00f5igus += 1",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:55:25.939998"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Paste>>",
        "time": "2020-11-14T20:55:25.940999"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:55:27.696338"
    },
    {
        "index1": "14.0",
        "index2": "14.4",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:55:28.185709"
    },
    {
        "index": "14.0",
        "text": "        ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:55:28.187710"
    },
    {
        "index1": "14.0",
        "index2": "14.8",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:55:28.581008"
    },
    {
        "index": "14.0",
        "text": "            ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:55:28.583009"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:55:29.350689"
    },
    {
        "index": "15.0",
        "text": "    ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:55:29.582934"
    },
    {
        "index1": "15.0",
        "index2": "15.4",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:55:29.935207"
    },
    {
        "index": "15.0",
        "text": "        ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:55:29.937209"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:55:30.534690"
    },
    {
        "index1": "16.0",
        "index2": "16.4",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:55:30.908853"
    },
    {
        "index": "16.0",
        "text": "        ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:55:30.911853"
    },
    {
        "index1": "16.0",
        "index2": "16.8",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:55:31.252093"
    },
    {
        "index": "16.0",
        "text": "            ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:55:31.255094"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:55:33.341017"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T20:55:33.457143"
    },
    {
        "index1": "68.4",
        "index2": "69.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:55:33.466143"
    },
    {
        "index": "68.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:55:33.467143"
    },
    {
        "index1": "69.0",
        "index2": "69.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:55:33.468143"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T20:55:33.468143"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T20:55:33.626145"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T20:55:33.784143"
    },
    {
        "index": "69.0",
        "text": "F",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:55:33.784143"
    },
    {
        "index": "69.1",
        "text": "ailis s\u00f5na 't\u00f5de' on 36 korda.\nFailis s\u00f5na '\u00f5igus' on 223 korda.\n",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:55:33.785145"
    },
    {
        "index": "71.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:55:33.792144"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T20:56:03.032039"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T20:56:42.564306"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:56:42.567306"
    },
    {
        "index1": "1.0",
        "index2": "22.0",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:56:43.220750"
    },
    {
        "index": "1.0",
        "text": "f = open(\"andmed2.txt\", encoding=\"UTF-8\")\n \nnimi = f.readline()\nvanus = f.readline()\naadress = f.readline()\n \nprint(\"Nimi:\", nimi)\nprint(\"Vanus:\", vanus, \"aastat\")\nprint(\"Aadress:\", aadress)\n \nf.close()",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:56:43.222750"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Paste>>",
        "time": "2020-11-14T20:56:43.222750"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:56:44.219515"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T20:56:44.327599"
    },
    {
        "index1": "71.4",
        "index2": "72.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:56:44.336601"
    },
    {
        "index": "71.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:56:44.336601"
    },
    {
        "index1": "72.0",
        "index2": "72.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:56:44.337600"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T20:56:44.337600"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T20:56:44.495602"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T20:56:44.497599"
    },
    {
        "index": "72.0",
        "text": "N",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:56:44.497599"
    },
    {
        "index": "72.1",
        "text": "imi: Jaan\n\nVanus: 34\n aastat\nAadress: Jaan@mail.ee\n",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:56:44.497599"
    },
    {
        "index": "77.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:56:44.504601"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T20:57:38.521065"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T20:57:42.039536"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:57:42.042537"
    },
    {
        "index1": "3.0",
        "index2": "3.19",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:57:42.960896"
    },
    {
        "index": "3.0",
        "text": "nimi = f.readline().strip()",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:57:42.962895"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Paste>>",
        "time": "2020-11-14T20:57:42.963894"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:57:43.902519"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T20:57:44.034597"
    },
    {
        "index1": "77.4",
        "index2": "78.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:57:44.044597"
    },
    {
        "index": "77.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:57:44.044597"
    },
    {
        "index1": "78.0",
        "index2": "78.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:57:44.045598"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T20:57:44.046598"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T20:57:44.204597"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T20:57:44.206597"
    },
    {
        "index": "78.0",
        "text": "N",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:57:44.206597"
    },
    {
        "index": "78.1",
        "text": "imi: Jaan\nVanus: 34\n aastat\nAadress: Jaan@mail.ee\n",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:57:44.206597"
    },
    {
        "index": "82.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:57:44.213597"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:57:48.090405"
    },
    {
        "index": "4.20",
        "text": ".",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:57:49.560588"
    },
    {
        "index": "4.21",
        "text": "s",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:57:49.655662"
    },
    {
        "index": "4.22",
        "text": "t",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:57:49.989947"
    },
    {
        "index": "4.23",
        "text": "r",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:57:51.472232"
    },
    {
        "index": "4.24",
        "text": "i",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:57:51.741499"
    },
    {
        "index": "4.25",
        "text": "p",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:57:51.998725"
    },
    {
        "index": "4.26",
        "text": "(",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:57:52.428109"
    },
    {
        "index": "4.27",
        "text": ")",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:57:52.719325"
    },
    {
        "index": "5.22",
        "text": ".",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:57:54.355811"
    },
    {
        "index": "5.23",
        "text": "s",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:57:55.366533"
    },
    {
        "index": "5.24",
        "text": "t",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:57:55.876972"
    },
    {
        "index": "5.25",
        "text": "r",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:57:56.116207"
    },
    {
        "index": "5.26",
        "text": "i",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:57:56.248309"
    },
    {
        "index": "5.27",
        "text": "p",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:57:56.520518"
    },
    {
        "index": "5.28",
        "text": "(",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:57:57.082000"
    },
    {
        "index": "5.29",
        "text": ")",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:57:57.293192"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:57:58.839412"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T20:57:58.949412"
    },
    {
        "index1": "82.4",
        "index2": "83.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:57:58.958412"
    },
    {
        "index": "82.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:57:58.958412"
    },
    {
        "index1": "83.0",
        "index2": "83.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:57:58.959413"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T20:57:58.960411"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T20:57:59.116413"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T20:57:59.181440"
    },
    {
        "index": "83.0",
        "text": "N",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:57:59.181440"
    },
    {
        "index": "83.1",
        "text": "imi: Jaan\nVanus: 34 aastat\nAadress: Jaan@mail.ee\n",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:57:59.182442"
    },
    {
        "index": "86.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:57:59.188442"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T20:58:12.852957"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T20:58:13.763567"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:58:13.765566"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:58:14.236899"
    },
    {
        "index1": "1.0",
        "index2": "11.9",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:58:14.781989"
    },
    {
        "index": "1.0",
        "text": "f = open(\"andmed2.txt\", encoding=\"UTF-8\")\nloetud = f.readlines()\nf.close() # faili ei l\u00e4he enam vaja\nprint(loetud)",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:58:14.782989"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Paste>>",
        "time": "2020-11-14T20:58:14.782989"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:58:15.485442"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T20:58:15.612570"
    },
    {
        "index1": "86.4",
        "index2": "87.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:58:15.622571"
    },
    {
        "index": "86.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:58:15.622571"
    },
    {
        "index1": "87.0",
        "index2": "87.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:58:15.623570"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T20:58:15.624570"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T20:58:15.780571"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T20:58:15.782570"
    },
    {
        "index": "87.0",
        "text": "[",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:58:15.782570"
    },
    {
        "index": "87.1",
        "text": "'Jaan\\n', '34\\n', 'Jaan@mail.ee']\n",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:58:15.782570"
    },
    {
        "index": "88.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:58:15.789571"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T20:58:40.412135"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T20:58:45.416217"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:58:45.418217"
    },
    {
        "index1": "1.1",
        "index2": "4.13",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:58:45.963335"
    },
    {
        "index": "1.1",
        "text": "f = open(\"andmed2.txt\", encoding=\"UTF-8\")\nloetud = f.read()\nf.close() # faili ei l\u00e4he enam vaja\nprint(loetud)",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:58:45.964333"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Paste>>",
        "time": "2020-11-14T20:58:45.965333"
    },
    {
        "index1": "1.0",
        "index2": "5.0",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:58:46.913225"
    },
    {
        "index": "1.0",
        "text": "f = open(\"andmed2.txt\", encoding=\"UTF-8\")\nloetud = f.read()\nf.close() # faili ei l\u00e4he enam vaja\nprint(loetud)",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:58:46.914224"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Paste>>",
        "time": "2020-11-14T20:58:46.915224"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:58:47.692703"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T20:58:47.792716"
    },
    {
        "index1": "88.4",
        "index2": "89.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:58:47.801716"
    },
    {
        "index": "88.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:58:47.801716"
    },
    {
        "index1": "89.0",
        "index2": "89.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:58:47.802714"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T20:58:47.802714"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T20:58:47.961715"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T20:58:47.962716"
    },
    {
        "index": "89.0",
        "text": "J",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:58:47.963715"
    },
    {
        "index": "89.1",
        "text": "aan\n34\nJaan@mail.ee\n",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:58:47.963715"
    },
    {
        "index": "92.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:58:47.970716"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T20:58:53.123131"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T20:58:53.645358"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:58:53.647358"
    },
    {
        "index1": "1.0",
        "index2": "4.13",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:58:54.740743"
    },
    {
        "index": "1.0",
        "text": "f = open(\"andmed2.txt\", encoding=\"UTF-8\")\nloetud = f.read(5)\nf.close() # faili ei l\u00e4he enam vaja\nprint(loetud)",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:58:54.741742"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Paste>>",
        "time": "2020-11-14T20:58:54.742742"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:58:55.793691"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T20:58:55.941838"
    },
    {
        "index1": "92.4",
        "index2": "93.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:58:55.950838"
    },
    {
        "index": "92.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:58:55.950838"
    },
    {
        "index1": "93.0",
        "index2": "93.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:58:55.951838"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T20:58:55.951838"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T20:58:56.106841"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T20:58:56.107841"
    },
    {
        "index": "93.0",
        "text": "J",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:58:56.108840"
    },
    {
        "index": "93.1",
        "text": "aan\n\n",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:58:56.108840"
    },
    {
        "index": "95.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:58:56.114840"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:58:59.542102"
    },
    {
        "index1": "2.16",
        "index2": "2.17",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:59:07.236953"
    },
    {
        "index": "2.16",
        "text": "4",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:59:07.237952"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:59:08.058519"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T20:59:08.209598"
    },
    {
        "index1": "95.4",
        "index2": "96.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:08.219607"
    },
    {
        "index": "95.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:08.219607"
    },
    {
        "index1": "96.0",
        "index2": "96.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:08.220607"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T20:59:08.220607"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T20:59:08.379610"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T20:59:08.380609"
    },
    {
        "index": "96.0",
        "text": "J",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:08.381607"
    },
    {
        "index": "96.1",
        "text": "aan\n",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:08.381607"
    },
    {
        "index": "97.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:08.387607"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:59:09.625110"
    },
    {
        "index1": "2.16",
        "index2": "2.17",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:59:10.797887"
    },
    {
        "index": "2.16",
        "text": "3",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:59:10.798886"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:59:11.504334"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T20:59:11.622359"
    },
    {
        "index1": "97.4",
        "index2": "98.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:11.631360"
    },
    {
        "index": "97.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:11.631360"
    },
    {
        "index1": "98.0",
        "index2": "98.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:11.632360"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T20:59:11.632360"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T20:59:11.787358"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T20:59:11.788358"
    },
    {
        "index": "98.0",
        "text": "J",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:11.788358"
    },
    {
        "index": "98.1",
        "text": "aa\n",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:11.789361"
    },
    {
        "index": "99.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:11.796358"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:59:18.717184"
    },
    {
        "index1": "2.15",
        "index2": "2.18",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:59:19.904644"
    },
    {
        "index": "2.15",
        "text": "l",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:59:19.906644"
    },
    {
        "index": "2.16",
        "text": "i",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:59:20.131718"
    },
    {
        "index": "2.17",
        "text": "n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:59:20.306795"
    },
    {
        "index": "2.18",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:59:20.370835"
    },
    {
        "index": "2.19",
        "text": "(",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:59:20.898309"
    },
    {
        "index": "2.20",
        "text": ")",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:59:21.176476"
    },
    {
        "index": "2.20",
        "text": "2",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:59:22.037204"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:59:22.936899"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T20:59:23.066024"
    },
    {
        "index1": "99.4",
        "index2": "100.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:23.076024"
    },
    {
        "index": "99.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:23.076024"
    },
    {
        "index1": "100.0",
        "index2": "100.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:23.077026"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T20:59:23.077026"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T20:59:23.236025"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T20:59:23.237024"
    },
    {
        "index": "100.0",
        "text": "J",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:23.238025"
    },
    {
        "index": "100.1",
        "text": "a\n",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:23.238025"
    },
    {
        "index": "101.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:23.245024"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:59:24.029104"
    },
    {
        "index1": "101.4",
        "index2": "102.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:24.164213"
    },
    {
        "index": "101.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:24.164213"
    },
    {
        "index1": "102.0",
        "index2": "102.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:24.165214"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T20:59:24.165214"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T20:59:24.321213"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T20:59:24.322213"
    },
    {
        "index": "102.0",
        "text": "J",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:24.322213"
    },
    {
        "index": "102.1",
        "text": "a\n",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:24.323213"
    },
    {
        "index": "103.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:24.329215"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:59:26.240358"
    },
    {
        "index1": "2.20",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:59:27.031032"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:59:28.844528"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T20:59:28.950659"
    },
    {
        "index1": "103.4",
        "index2": "104.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:28.958657"
    },
    {
        "index": "103.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:28.958657"
    },
    {
        "index1": "104.0",
        "index2": "104.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:28.959659"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T20:59:28.960659"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T20:59:29.117657"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T20:59:29.118658"
    },
    {
        "index": "104.0",
        "text": "J",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:29.119658"
    },
    {
        "index": "104.1",
        "text": "aan\n\n",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:29.119658"
    },
    {
        "index": "106.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:29.125658"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:59:30.340004"
    },
    {
        "index": "2.20",
        "text": "3",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:59:33.523710"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:59:34.369379"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T20:59:34.494482"
    },
    {
        "index1": "106.4",
        "index2": "107.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:34.503483"
    },
    {
        "index": "106.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:34.503483"
    },
    {
        "index1": "107.0",
        "index2": "107.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:34.504482"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T20:59:34.504482"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T20:59:34.661483"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T20:59:34.663483"
    },
    {
        "index": "107.0",
        "text": "J",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:34.663483"
    },
    {
        "index": "107.1",
        "text": "aa\n",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:34.663483"
    },
    {
        "index": "108.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:34.670483"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:59:35.705762"
    },
    {
        "index1": "2.20",
        "index2": "2.21",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:59:36.999697"
    },
    {
        "index": "2.20",
        "text": "5",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:59:37.001697"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:59:37.685126"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T20:59:37.815238"
    },
    {
        "index1": "108.4",
        "index2": "109.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:37.823250"
    },
    {
        "index": "108.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:37.823250"
    },
    {
        "index1": "109.0",
        "index2": "109.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:37.824250"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T20:59:37.825250"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T20:59:37.981252"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T20:59:37.982252"
    },
    {
        "index": "109.0",
        "text": "J",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:37.983251"
    },
    {
        "index": "109.1",
        "text": "aan\n\n",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:37.983251"
    },
    {
        "index": "111.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:37.989252"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:59:40.612825"
    },
    {
        "index": "2.19",
        "text": "s",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:59:40.858104"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:59:41.367456"
    },
    {
        "index1": "2.21",
        "index2": "2.22",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:59:42.156062"
    },
    {
        "index": "2.21",
        "text": "2",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:59:42.157064"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:59:43.066836"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T20:59:43.190963"
    },
    {
        "index1": "111.4",
        "index2": "112.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:43.199961"
    },
    {
        "index": "111.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:43.199961"
    },
    {
        "index1": "112.0",
        "index2": "112.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:43.200960"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T20:59:43.200960"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T20:59:43.358960"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T20:59:43.359962"
    },
    {
        "index": "112.0",
        "text": "[",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:43.360962"
    },
    {
        "index": "112.1",
        "text": "'Jaan\\n']\n",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:43.360962"
    },
    {
        "index": "113.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:43.367962"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:59:45.033821"
    },
    {
        "index1": "2.21",
        "index2": "2.22",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:59:45.501233"
    },
    {
        "index": "2.21",
        "text": "4",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:59:45.503234"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:59:46.339844"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T20:59:46.470964"
    },
    {
        "index1": "113.4",
        "index2": "114.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:46.479966"
    },
    {
        "index": "113.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:46.479966"
    },
    {
        "index1": "114.0",
        "index2": "114.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:46.480964"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T20:59:46.480964"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T20:59:46.637967"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T20:59:46.639966"
    },
    {
        "index": "114.0",
        "text": "[",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:46.639966"
    },
    {
        "index": "114.1",
        "text": "'Jaan\\n']\n",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:46.639966"
    },
    {
        "index": "115.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:46.646966"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:59:47.895481"
    },
    {
        "index1": "2.21",
        "index2": "2.22",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T20:59:48.847238"
    },
    {
        "index": "2.21",
        "text": "1",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:59:48.848239"
    },
    {
        "index": "2.22",
        "text": "2",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T20:59:49.055351"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T20:59:49.730827"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T20:59:49.838931"
    },
    {
        "index1": "115.4",
        "index2": "116.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:49.846934"
    },
    {
        "index": "115.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:49.847934"
    },
    {
        "index1": "116.0",
        "index2": "116.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:49.848935"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T20:59:49.848935"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T20:59:50.005934"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T20:59:50.006933"
    },
    {
        "index": "116.0",
        "text": "[",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:50.006933"
    },
    {
        "index": "116.1",
        "text": "'Jaan\\n', '34\\n', 'Jaan@mail.ee']\n",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:50.007934"
    },
    {
        "index": "117.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T20:59:50.014930"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:00:11.150474"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:00:22.704283"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:00:22.706282"
    },
    {
        "index1": "1.0",
        "index2": "4.13",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:00:23.713728"
    },
    {
        "index": "1.0",
        "text": "f = open(\"sms.txt\", encoding=\"UTF-8\")\n \nwhile True:                     # l\u00f5pmatu ts\u00fckkel, kui ei katkestata\n    s\u00fcmbol = f.read(1)          # loetakse \u00fcks s\u00fcmbol\n    if s\u00fcmbol == \"\":            # kui enam s\u00fcmboleid pole\n        break                   # ts\u00fckkel katkestatakse\n    if s\u00fcmbol == \"\u00f5\":\n        print(\"6\", end = \"\")    # reavahetust ei tule\n    else:\n        print(s\u00fcmbol, end = \"\") # reavahetust ei tule\n \nf.close()                       # faili ei l\u00e4he enam vaja",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:00:23.715727"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Paste>>",
        "time": "2020-11-14T21:00:23.715727"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:00:24.875611"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T21:00:24.989703"
    },
    {
        "index1": "117.4",
        "index2": "118.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:00:24.999703"
    },
    {
        "index": "117.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:00:24.999703"
    },
    {
        "index1": "118.0",
        "index2": "118.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:00:25.000701"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T21:00:25.000701"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T21:00:25.158701"
    },
    {
        "view_id": "AssistantView",
        "view_class": "AssistantView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:00:25.224701"
    },
    {
        "index": "118.0",
        "text": "Traceback (most recent call last):\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:00:25.230703"
    },
    {
        "index": "119.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_56522288')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:00:25.230703"
    },
    {
        "index": "119.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1171, in wrapper",
        "tags": "('io', 'stderr', 'frame_56522288', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:00:25.231703"
    },
    {
        "index": "119.113",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_56522288')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:00:25.231703"
    },
    {
        "index": "120.0",
        "text": "    result = method(self, *args, **kwargs)\n",
        "tags": "('io', 'stderr', 'frame_56522288')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:00:25.232704"
    },
    {
        "index": "121.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_56521904')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:00:25.232704"
    },
    {
        "index": "121.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1158, in wrapper",
        "tags": "('io', 'stderr', 'frame_56521904', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:00:25.233704"
    },
    {
        "index": "121.113",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_56521904')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:00:25.233704"
    },
    {
        "index": "122.0",
        "text": "    return method(self, *args, **kwargs)\n",
        "tags": "('io', 'stderr', 'frame_56521904')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:00:25.234703"
    },
    {
        "index": "123.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_61171920')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:00:25.234703"
    },
    {
        "index": "123.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1232, in _execute_prepared_user_code",
        "tags": "('io', 'stderr', 'frame_61171920', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:00:25.234703"
    },
    {
        "index": "123.133",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_61171920')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:00:25.235702"
    },
    {
        "index": "124.0",
        "text": "    exec(statements, global_vars)\n",
        "tags": "('io', 'stderr', 'frame_61171920')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:00:25.235702"
    },
    {
        "index": "125.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_61194288')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:00:25.235702"
    },
    {
        "index": "125.2",
        "text": "File \"C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py\", line 1, in <module>",
        "tags": "('io', 'stderr', 'frame_61194288', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:00:25.236702"
    },
    {
        "index": "125.75",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_61194288')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:00:25.236702"
    },
    {
        "index": "126.0",
        "text": "    f = open(\"sms.txt\", encoding=\"UTF-8\")\n",
        "tags": "('io', 'stderr', 'frame_61194288')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:00:25.236702"
    },
    {
        "index": "127.0",
        "text": "FileNotFoundError: [Errno 2] No such file or directory: 'sms.txt'\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:00:25.236702"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:00:25.237703"
    },
    {
        "index": "128.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:00:25.238701"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:01:09.242701"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:01:34.136943"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:01:34.139946"
    },
    {
        "index1": "1.10",
        "index2": "1.17",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:01:34.909203"
    },
    {
        "index": "1.10",
        "text": "telegramm.txt",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:01:34.912204"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Paste>>",
        "time": "2020-11-14T21:01:34.912204"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:01:35.530489"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:02:17.521875"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:02:17.525874"
    },
    {
        "index1": "9.4",
        "index2": "10.53",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:02:20.979115"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:02:21.702535"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:02:22.843422"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:02:35.732188"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:02:35.736193"
    },
    {
        "index1": "2.0",
        "index2": "2.1",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:02:40.745659"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:02:51.479706"
    },
    {
        "index1": "8.15",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:02:54.899461"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:02:56.099326"
    },
    {
        "index1": "7.18",
        "index2": "7.19",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:02:57.760745"
    },
    {
        "index": "7.18",
        "text": "\u00e4",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:02:58.661500"
    },
    {
        "index1": "7.18",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:03:00.246904"
    },
    {
        "index": "7.18",
        "text": "\u00e4",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:03:01.093665"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:03:03.828016"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:03:04.651624"
    },
    {
        "index": "8.15",
        "text": "a",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:03:06.416044"
    },
    {
        "index": "8.16",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:03:06.657256"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:03:08.936888"
    },
    {
        "index1": "8.30",
        "index2": "8.54",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:03:10.792904"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:03:11.372425"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:03:12.301250"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:03:13.936001"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:03:14.471417"
    },
    {
        "index": "9.0",
        "text": "    if s\u00fcmbol == \"\u00e4\":\n        print(\"ae\", end = \"\") ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:03:15.692529"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Paste>>",
        "time": "2020-11-14T21:03:15.692529"
    },
    {
        "index1": "10.30",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:03:16.893575"
    },
    {
        "index1": "10.30",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:03:16.895575"
    },
    {
        "index1": "10.30",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:03:16.896576"
    },
    {
        "index1": "10.30",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:03:16.898577"
    },
    {
        "index1": "10.29",
        "index2": "10.30",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:03:16.900575"
    },
    {
        "index": "10.29",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:03:16.902575"
    },
    {
        "index": "11.0",
        "text": "        ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:03:16.904577"
    },
    {
        "index1": "11.4",
        "index2": "11.8",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:03:17.358000"
    },
    {
        "index1": "11.0",
        "index2": "11.4",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:03:17.666310"
    },
    {
        "index": "11.0",
        "text": "    if s\u00fcmbol == \"\u00e4\":\n        print(\"ae\", end = \"\") ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:03:18.063528"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Paste>>",
        "time": "2020-11-14T21:03:18.064527"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:03:21.275416"
    },
    {
        "index1": "9.18",
        "index2": "9.19",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:03:26.712168"
    },
    {
        "index": "9.18",
        "text": "\u00fc",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:03:26.715168"
    },
    {
        "index1": "9.18",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:03:27.355716"
    },
    {
        "index": "9.18",
        "text": "\u00f5",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:03:27.544894"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:03:29.414466"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:03:31.658101"
    },
    {
        "index": "9.20",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:03:33.173470"
    },
    {
        "index": "9.21",
        "text": "o",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:03:33.562813"
    },
    {
        "index": "9.22",
        "text": "r",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:03:33.662898"
    },
    {
        "index": "9.23",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:03:33.884027"
    },
    {
        "index": "9.24",
        "text": "s",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:03:34.971876"
    },
    {
        "index": "9.25",
        "text": "\u00fc",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:03:38.565915"
    },
    {
        "index": "9.26",
        "text": "mbol",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:03:38.619940"
    },
    {
        "index": "9.30",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:03:40.406462"
    },
    {
        "index": "9.31",
        "text": "\u00b4\u00b4",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:03:41.117155"
    },
    {
        "index1": "9.32",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:03:41.469467"
    },
    {
        "index1": "9.31",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:03:41.659641"
    },
    {
        "index": "9.31",
        "text": "``",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:03:43.648401"
    },
    {
        "index1": "9.32",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:03:43.988655"
    },
    {
        "index1": "9.31",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:03:44.187705"
    },
    {
        "index": "9.31",
        "text": "\"",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:03:45.510835"
    },
    {
        "index": "9.32",
        "text": "!",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:03:45.816116"
    },
    {
        "index": "9.33",
        "text": "\"",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:03:46.122370"
    },
    {
        "index1": "9.33",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:03:46.372619"
    },
    {
        "index1": "9.32",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:03:46.548785"
    },
    {
        "index1": "9.31",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:03:46.775963"
    },
    {
        "index": "9.31",
        "text": "=",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:03:47.476596"
    },
    {
        "index": "9.32",
        "text": "=",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:03:47.755831"
    },
    {
        "index": "9.33",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:03:48.065109"
    },
    {
        "index": "9.34",
        "text": "\u00e4",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:03:52.306823"
    },
    {
        "index1": "9.34",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:03:52.716146"
    },
    {
        "index": "9.34",
        "text": "\u00f6",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:03:52.948348"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:03:54.765859"
    },
    {
        "index1": "10.15",
        "index2": "10.17",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:03:56.750477"
    },
    {
        "index": "10.15",
        "text": "o",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:03:56.752477"
    },
    {
        "index": "10.16",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:03:56.864547"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:03:58.283556"
    },
    {
        "index1": "11.18",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:03:59.611708"
    },
    {
        "index": "11.18",
        "text": "\u00fc",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:04:00.035074"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:04:03.134633"
    },
    {
        "index1": "12.15",
        "index2": "12.17",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:04:04.213479"
    },
    {
        "index": "12.15",
        "text": "u",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:04:04.216479"
    },
    {
        "index": "12.16",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:04:04.312531"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:04:06.467379"
    },
    {
        "index1": "14.32",
        "index2": "14.57",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:04:08.144464"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:04:09.058305"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:04:09.545545"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:04:09.905923"
    },
    {
        "index1": "14.9",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:04:10.751613"
    },
    {
        "index1": "14.9",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:04:10.753613"
    },
    {
        "index1": "14.9",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:04:10.755615"
    },
    {
        "index1": "14.9",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:04:10.757613"
    },
    {
        "index1": "14.9",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:04:10.759614"
    },
    {
        "index1": "14.9",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:04:10.761613"
    },
    {
        "index1": "14.9",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:04:10.763615"
    },
    {
        "index1": "14.9",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:04:10.765614"
    },
    {
        "index1": "14.9",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:04:10.766615"
    },
    {
        "index1": "14.9",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:04:10.768615"
    },
    {
        "index1": "14.9",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:04:10.770616"
    },
    {
        "index1": "14.9",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:04:10.772613"
    },
    {
        "index1": "14.9",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:04:10.774613"
    },
    {
        "index1": "14.9",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:04:10.776615"
    },
    {
        "index1": "14.9",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:04:10.778615"
    },
    {
        "index1": "14.9",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:04:10.780613"
    },
    {
        "index1": "14.9",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:04:10.782615"
    },
    {
        "index1": "14.9",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:04:10.784615"
    },
    {
        "index1": "14.9",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:04:10.786613"
    },
    {
        "index1": "14.9",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:04:10.787615"
    },
    {
        "index1": "14.9",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:04:10.790615"
    },
    {
        "index1": "14.9",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:04:10.792613"
    },
    {
        "index1": "14.9",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:04:10.794613"
    },
    {
        "index": "14.9",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:04:10.795614"
    },
    {
        "index": "15.0",
        "text": "",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:04:10.798613"
    },
    {
        "index": "15.0",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:04:11.737468"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:04:12.661946"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:04:15.844723"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:04:15.847722"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:04:27.703744"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T21:04:27.813865"
    },
    {
        "index1": "128.4",
        "index2": "129.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:04:27.822863"
    },
    {
        "index": "128.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:04:27.823863"
    },
    {
        "index1": "129.0",
        "index2": "129.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:04:27.823863"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T21:04:27.824863"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T21:04:27.982862"
    },
    {
        "view_id": "AssistantView",
        "view_class": "AssistantView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:04:28.065915"
    },
    {
        "index": "129.0",
        "text": "Traceback (most recent call last):\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:04:28.072915"
    },
    {
        "index": "130.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_60192304')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:04:28.072915"
    },
    {
        "index": "130.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1171, in wrapper",
        "tags": "('io', 'stderr', 'frame_60192304', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:04:28.073915"
    },
    {
        "index": "130.113",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_60192304')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:04:28.073915"
    },
    {
        "index": "131.0",
        "text": "    result = method(self, *args, **kwargs)\n",
        "tags": "('io', 'stderr', 'frame_60192304')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:04:28.074915"
    },
    {
        "index": "132.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_60191920')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:04:28.074915"
    },
    {
        "index": "132.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1158, in wrapper",
        "tags": "('io', 'stderr', 'frame_60191920', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:04:28.075915"
    },
    {
        "index": "132.113",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_60191920')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:04:28.075915"
    },
    {
        "index": "133.0",
        "text": "    return method(self, *args, **kwargs)\n",
        "tags": "('io', 'stderr', 'frame_60191920')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:04:28.075915"
    },
    {
        "index": "134.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_65370320')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:04:28.076916"
    },
    {
        "index": "134.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1232, in _execute_prepared_user_code",
        "tags": "('io', 'stderr', 'frame_65370320', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:04:28.077917"
    },
    {
        "index": "134.133",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_65370320')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:04:28.077917"
    },
    {
        "index": "135.0",
        "text": "    exec(statements, global_vars)\n",
        "tags": "('io', 'stderr', 'frame_65370320')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:04:28.077917"
    },
    {
        "index": "136.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_65392688')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:04:28.078915"
    },
    {
        "index": "136.2",
        "text": "File \"C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py\", line 9, in <module>",
        "tags": "('io', 'stderr', 'frame_65392688', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:04:28.078915"
    },
    {
        "index": "136.75",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_65392688')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:04:28.078915"
    },
    {
        "index": "137.0",
        "text": "    if s\u00fcmbol == \"\u00f5\" or s\u00fcmbol == \u00f6:\n",
        "tags": "('io', 'stderr', 'frame_65392688')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:04:28.079915"
    },
    {
        "index": "138.0",
        "text": "NameError: name '\u00f6' is not defined\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:04:28.079915"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:04:28.079915"
    },
    {
        "index": "139.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:04:28.081913"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:04:40.165025"
    },
    {
        "index": "9.24",
        "text": "i",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:04:42.443982"
    },
    {
        "index": "9.25",
        "text": "f",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:04:42.571082"
    },
    {
        "index": "9.26",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:04:42.898323"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:04:44.270308"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T21:04:44.383437"
    },
    {
        "index1": "139.4",
        "index2": "140.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:04:44.391435"
    },
    {
        "index": "139.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:04:44.392435"
    },
    {
        "index1": "140.0",
        "index2": "140.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:04:44.393437"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T21:04:44.393437"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T21:04:44.551437"
    },
    {
        "view_id": "AssistantView",
        "view_class": "AssistantView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:04:44.667435"
    },
    {
        "index": "140.0",
        "text": "Traceback (most recent call last):\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:04:44.672436"
    },
    {
        "index": "141.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_56861920')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:04:44.673437"
    },
    {
        "index": "141.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1208, in execute_source",
        "tags": "('io', 'stderr', 'frame_56861920', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:04:44.673437"
    },
    {
        "index": "141.120",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_56861920')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:04:44.673437"
    },
    {
        "index": "142.0",
        "text": "    root = self._prepare_ast(source, filename, mode)\n",
        "tags": "('io', 'stderr', 'frame_56861920')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:04:44.674436"
    },
    {
        "index": "143.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_56837984')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:04:44.674436"
    },
    {
        "index": "143.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1244, in _prepare_ast",
        "tags": "('io', 'stderr', 'frame_56837984', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:04:44.674436"
    },
    {
        "index": "143.118",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_56837984')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:04:44.674436"
    },
    {
        "index": "144.0",
        "text": "    return ast.parse(source, filename, mode)\n",
        "tags": "('io', 'stderr', 'frame_56837984')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:04:44.675438"
    },
    {
        "index": "145.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_54268672')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:04:44.675438"
    },
    {
        "index": "145.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\ast.py\", line 35, in parse",
        "tags": "('io', 'stderr', 'frame_54268672', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:04:44.675438"
    },
    {
        "index": "145.84",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_54268672')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:04:44.676438"
    },
    {
        "index": "146.0",
        "text": "    return compile(source, filename, mode, PyCF_ONLY_AST)\n",
        "tags": "('io', 'stderr', 'frame_54268672')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:04:44.676438"
    },
    {
        "index": "147.0",
        "text": "  ",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:04:44.676438"
    },
    {
        "index": "147.2",
        "text": "File \"C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py\", line 9",
        "tags": "('io', 'stderr', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:04:44.677438"
    },
    {
        "index": "147.62",
        "text": "\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:04:44.677438"
    },
    {
        "index": "148.0",
        "text": "    if s\u00fcmbol == \"\u00f5\" or if s\u00fcmbol == \u00f6:\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:04:44.677438"
    },
    {
        "index": "149.0",
        "text": "                         ^\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:04:44.677438"
    },
    {
        "index": "150.0",
        "text": "SyntaxError: invalid syntax\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:04:44.678437"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:04:44.678437"
    },
    {
        "index": "151.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:04:44.680437"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:04:46.329250"
    },
    {
        "index1": "9.24",
        "index2": "9.26",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:04:47.576065"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:04:48.246683"
    },
    {
        "index1": "9.24",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:04:48.596023"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:04:52.593165"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:04:54.887221"
    },
    {
        "index": "10.29",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:04:55.587596"
    },
    {
        "index": "11.0",
        "text": "        ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:04:55.590596"
    },
    {
        "index1": "11.4",
        "index2": "11.8",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:04:56.518342"
    },
    {
        "index1": "11.0",
        "index2": "11.4",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:04:56.693524"
    },
    {
        "index": "11.0",
        "text": "    if s\u00fcmbol == \"\u00f5\" or s\u00fcmbol == \u00f6:\n        print(\"oe\", end = \"\")",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:04:57.146925"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Paste>>",
        "time": "2020-11-14T21:04:57.146925"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:04:59.845010"
    },
    {
        "index1": "11.7",
        "index2": "11.24",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:05:00.982318"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:05:02.629914"
    },
    {
        "index1": "9.21",
        "index2": "9.35",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:05:03.390327"
    },
    {
        "index1": "9.20",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:05:04.438283"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:05:07.438808"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T21:05:07.509869"
    },
    {
        "index1": "151.4",
        "index2": "152.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:05:07.519870"
    },
    {
        "index": "151.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:05:07.519870"
    },
    {
        "index1": "152.0",
        "index2": "152.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:05:07.520869"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T21:05:07.521869"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T21:05:07.677869"
    },
    {
        "view_id": "AssistantView",
        "view_class": "AssistantView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:05:07.753868"
    },
    {
        "index": "152.0",
        "text": "Traceback (most recent call last):\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:05:07.758872"
    },
    {
        "index": "153.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_54228528')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:05:07.759870"
    },
    {
        "index": "153.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1171, in wrapper",
        "tags": "('io', 'stderr', 'frame_54228528', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:05:07.759870"
    },
    {
        "index": "153.113",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_54228528')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:05:07.759870"
    },
    {
        "index": "154.0",
        "text": "    result = method(self, *args, **kwargs)\n",
        "tags": "('io', 'stderr', 'frame_54228528')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:05:07.760868"
    },
    {
        "index": "155.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_54228144')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:05:07.760868"
    },
    {
        "index": "155.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1158, in wrapper",
        "tags": "('io', 'stderr', 'frame_54228144', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:05:07.760868"
    },
    {
        "index": "155.113",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_54228144')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:05:07.761868"
    },
    {
        "index": "156.0",
        "text": "    return method(self, *args, **kwargs)\n",
        "tags": "('io', 'stderr', 'frame_54228144')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:05:07.761868"
    },
    {
        "index": "157.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_60442832')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:05:07.761868"
    },
    {
        "index": "157.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1232, in _execute_prepared_user_code",
        "tags": "('io', 'stderr', 'frame_60442832', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:05:07.762868"
    },
    {
        "index": "157.133",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_60442832')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:05:07.762868"
    },
    {
        "index": "158.0",
        "text": "    exec(statements, global_vars)\n",
        "tags": "('io', 'stderr', 'frame_60442832')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:05:07.762868"
    },
    {
        "index": "159.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_60477488')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:05:07.763869"
    },
    {
        "index": "159.2",
        "text": "File \"C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py\", line 11, in <module>",
        "tags": "('io', 'stderr', 'frame_60477488', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:05:07.763869"
    },
    {
        "index": "159.76",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_60477488')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:05:07.763869"
    },
    {
        "index": "160.0",
        "text": "    if s\u00fcmbol == \u00f6:\n",
        "tags": "('io', 'stderr', 'frame_60477488')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:05:07.764868"
    },
    {
        "index": "161.0",
        "text": "NameError: name '\u00f6' is not defined\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:05:07.764868"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:05:07.764868"
    },
    {
        "index": "162.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:05:07.765868"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:05:10.878826"
    },
    {
        "index": "11.18",
        "text": "\u00c4",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:05:12.084701"
    },
    {
        "index1": "11.18",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:05:12.774379"
    },
    {
        "index": "11.18",
        "text": "\u00c4",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:05:13.371807"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Undo>>",
        "time": "2020-11-14T21:05:13.372807"
    },
    {
        "index1": "11.18",
        "index2": "11.19",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:05:13.666074"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Undo>>",
        "time": "2020-11-14T21:05:13.667075"
    },
    {
        "index": "9.20",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:05:13.966313"
    },
    {
        "index": "9.21",
        "text": "or s\u00fcmbol == \u00f6",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:05:13.969314"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Undo>>",
        "time": "2020-11-14T21:05:13.970314"
    },
    {
        "index": "11.7",
        "text": "s\u00fcmbol == \"\u00f5\" or ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:05:14.259548"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Undo>>",
        "time": "2020-11-14T21:05:14.261545"
    },
    {
        "index1": "11.0",
        "index2": "12.29",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:05:14.565848"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Undo>>",
        "time": "2020-11-14T21:05:14.566850"
    },
    {
        "index": "11.0",
        "text": "    ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:05:15.469487"
    },
    {
        "index": "11.4",
        "text": "    ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:05:15.472488"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Undo>>",
        "time": "2020-11-14T21:05:15.474487"
    },
    {
        "index1": "11.0",
        "index2": "11.8",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:05:16.008837"
    },
    {
        "index1": "10.29",
        "index2": "11.0",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:05:16.011837"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Undo>>",
        "time": "2020-11-14T21:05:16.013839"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:05:16.766529"
    },
    {
        "index": "9.34",
        "text": "\u00c4",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:05:18.120672"
    },
    {
        "index1": "9.34",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:05:18.999393"
    },
    {
        "index": "9.34",
        "text": "\"",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:05:19.562884"
    },
    {
        "index": "9.36",
        "text": "\"",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:05:20.665721"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:05:21.892685"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T21:05:22.000786"
    },
    {
        "index1": "162.4",
        "index2": "163.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:05:22.014784"
    },
    {
        "index": "162.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:05:22.014784"
    },
    {
        "index1": "163.0",
        "index2": "163.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:05:22.015784"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T21:05:22.015784"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T21:05:22.174786"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:05:22.177786"
    },
    {
        "index": "163.0",
        "text": "o",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:05:22.177786"
    },
    {
        "index": "163.1",
        "text": "eueaeueae",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:05:22.178786"
    },
    {
        "index": "163.10",
        "text": "\n",
        "tags": "('io',)",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:05:22.186785"
    },
    {
        "index": "164.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:05:22.187786"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:05:43.709138"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:05:45.949666"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:05:45.951666"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:06:03.017685"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:06:14.057267"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:06:14.060267"
    },
    {
        "index1": "3.0",
        "index2": "13.1",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:06:14.954535"
    },
    {
        "index": "3.0",
        "text": "failisisu = f.read()\n \nasendatud\u00f5 = failisisu.replace(\"\u00f5\",\"6\")",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:06:14.957536"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Paste>>",
        "time": "2020-11-14T21:06:14.957536"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:06:16.264577"
    },
    {
        "index": "5.39",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:06:16.779989"
    },
    {
        "index": "6.0",
        "text": "",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:06:16.781991"
    },
    {
        "index": "6.0",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:06:17.160308"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:06:17.829921"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:06:19.531598"
    },
    {
        "index": "6.0",
        "text": "asendatud\u00f5 = failisisu.replace(\"\u00f5\",\"6\")",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:06:21.480320"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Paste>>",
        "time": "2020-11-14T21:06:21.481318"
    },
    {
        "index": "6.39",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:06:22.197998"
    },
    {
        "index": "7.0",
        "text": "",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:06:22.200000"
    },
    {
        "index": "7.0",
        "text": "asendatud\u00f5 = failisisu.replace(\"\u00f5\",\"6\")",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:06:22.460172"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Paste>>",
        "time": "2020-11-14T21:06:22.461173"
    },
    {
        "index": "7.39",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:06:23.186861"
    },
    {
        "index": "8.0",
        "text": "",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:06:23.188860"
    },
    {
        "index": "8.0",
        "text": "asendatud\u00f5 = failisisu.replace(\"\u00f5\",\"6\")",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:06:23.383048"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Paste>>",
        "time": "2020-11-14T21:06:23.383048"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:06:25.865529"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:06:29.328173"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:06:29.331174"
    },
    {
        "index1": "5.32",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:06:30.333920"
    },
    {
        "index": "5.32",
        "text": "\u00e4",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:06:30.576046"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:06:33.337346"
    },
    {
        "index1": "7.32",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:06:35.665366"
    },
    {
        "index": "7.32",
        "text": "\u00f6",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:06:36.197840"
    },
    {
        "index1": "8.32",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:06:37.509953"
    },
    {
        "index": "8.32",
        "text": "p",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:06:37.993321"
    },
    {
        "index1": "8.32",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:06:38.863016"
    },
    {
        "index": "8.32",
        "text": "\u00fc",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:06:39.084224"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:06:40.121093"
    },
    {
        "index1": "5.36",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:06:41.241134"
    },
    {
        "index": "5.36",
        "text": "a",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:06:41.759495"
    },
    {
        "index": "5.37",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:06:42.242718"
    },
    {
        "index1": "6.36",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:06:43.663959"
    },
    {
        "index": "6.36",
        "text": "o",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:06:43.958253"
    },
    {
        "index": "6.37",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:06:44.068313"
    },
    {
        "index1": "7.36",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:06:45.667804"
    },
    {
        "index": "7.36",
        "text": "o",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:06:45.890992"
    },
    {
        "index": "7.37",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:06:45.974051"
    },
    {
        "index1": "8.36",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:06:50.174618"
    },
    {
        "index": "8.36",
        "text": "i",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:06:50.427809"
    },
    {
        "index1": "8.36",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:06:50.791101"
    },
    {
        "index": "8.36",
        "text": "u",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:06:51.231414"
    },
    {
        "index": "8.37",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:06:51.320516"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:06:52.538530"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:06:53.206961"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:06:53.538215"
    },
    {
        "index": "12.0",
        "text": "p",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:06:54.684198"
    },
    {
        "index": "12.1",
        "text": "r",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:06:54.837286"
    },
    {
        "index": "12.2",
        "text": "i",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:06:54.993447"
    },
    {
        "index": "12.3",
        "text": "n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:06:56.503690"
    },
    {
        "index": "12.4",
        "text": "t",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:06:56.600740"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:06:58.405124"
    },
    {
        "index1": "6.9",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:06:59.518117"
    },
    {
        "index": "6.9",
        "text": "\u00fc",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:07:02.293895"
    },
    {
        "index1": "6.9",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:07:02.787262"
    },
    {
        "index": "6.9",
        "text": "\u00f5",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:07:03.635988"
    },
    {
        "index1": "5.9",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:07:04.831020"
    },
    {
        "index": "5.9",
        "text": "\u00f6",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:07:05.088266"
    },
    {
        "index1": "5.9",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:07:05.421606"
    },
    {
        "index": "5.9",
        "text": "\u00e4",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:07:05.614756"
    },
    {
        "index1": "7.9",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:07:07.226128"
    },
    {
        "index": "7.9",
        "text": "\u00f6",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:07:08.559464"
    },
    {
        "index1": "8.9",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:07:09.493291"
    },
    {
        "index": "8.9",
        "text": "p",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:07:09.704472"
    },
    {
        "index1": "8.9",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:07:10.081770"
    },
    {
        "index": "8.9",
        "text": "\u00fc",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:07:10.589260"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:07:12.817551"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:07:22.657518"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:07:22.660519"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:07:23.038835"
    },
    {
        "index": "11.0",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:07:23.949626"
    },
    {
        "index": "12.0",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:07:25.932221"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:07:27.192250"
    },
    {
        "index1": "14.0",
        "index2": "14.5",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:07:28.104672"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:07:28.553019"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:07:29.027572"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:07:53.361193"
    },
    {
        "index": "12.0",
        "text": "p",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:07:55.281811"
    },
    {
        "index": "12.1",
        "text": "r",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:07:55.480915"
    },
    {
        "index": "12.2",
        "text": "i",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:07:55.572008"
    },
    {
        "index": "12.3",
        "text": "n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:07:55.784162"
    },
    {
        "index": "12.4",
        "text": "t",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:07:55.851214"
    },
    {
        "index": "12.5",
        "text": ")",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:07:56.724871"
    },
    {
        "index": "12.6",
        "text": "f",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:07:57.074142"
    },
    {
        "index": "12.7",
        "text": "=",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:07:57.367387"
    },
    {
        "index1": "12.7",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:07:58.044957"
    },
    {
        "index1": "12.6",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:07:58.290125"
    },
    {
        "index1": "12.5",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:07:58.501299"
    },
    {
        "index": "12.5",
        "text": "(",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:07:59.974604"
    },
    {
        "index": "12.6",
        "text": "f",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:08:00.345940"
    },
    {
        "index": "12.7",
        "text": ")",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:08:00.943401"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:08:02.101401"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T21:08:02.202480"
    },
    {
        "index1": "164.4",
        "index2": "165.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:02.212479"
    },
    {
        "index": "164.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:02.212479"
    },
    {
        "index1": "165.0",
        "index2": "165.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:02.213480"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T21:08:02.214479"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T21:08:02.372479"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:08:02.431504"
    },
    {
        "index": "165.0",
        "text": "<",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:02.432506"
    },
    {
        "index": "165.1",
        "text": "_io.TextIOWrapper name='telegramm.txt' mode='r' encoding='UTF-8'>\n",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:02.432506"
    },
    {
        "index": "166.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:02.439507"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:08:06.408386"
    },
    {
        "index1": "12.6",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:08:07.119929"
    },
    {
        "index": "12.6",
        "text": "f",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:08:07.238008"
    },
    {
        "index": "12.7",
        "text": "a",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:08:07.429172"
    },
    {
        "index": "12.8",
        "text": "i",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:08:07.511233"
    },
    {
        "index": "12.9",
        "text": "l",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:08:07.692429"
    },
    {
        "index": "12.10",
        "text": "i",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:08:07.888612"
    },
    {
        "index": "12.11",
        "text": "s",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:08:08.234808"
    },
    {
        "index": "12.12",
        "text": "i",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:08:08.390904"
    },
    {
        "index": "12.13",
        "text": "s",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:08:08.506994"
    },
    {
        "index": "12.14",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:08:08.715196"
    },
    {
        "widget_id": 95794896,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:08:09.950972"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T21:08:10.041047"
    },
    {
        "index1": "166.4",
        "index2": "167.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:10.051044"
    },
    {
        "index": "166.4",
        "text": "%Debug '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:10.051044"
    },
    {
        "index1": "167.0",
        "index2": "167.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:10.052046"
    },
    {
        "cmd_line": "%Debug '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T21:08:10.053044"
    },
    {
        "command_text": "%Debug '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T21:08:10.210046"
    },
    {
        "widget_id": 95756336,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:08:11.385939"
    },
    {
        "index": "167.0",
        "text": "\n========================= RESTART =========================\n",
        "tags": "('magic',)",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:11.515053"
    },
    {
        "index": "169.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:11.736053"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:08:12.011243"
    },
    {
        "index1": "169.4",
        "index2": "170.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:12.140380"
    },
    {
        "index": "169.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:12.141377"
    },
    {
        "index1": "170.0",
        "index2": "170.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:12.141377"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T21:08:12.142379"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T21:08:12.299378"
    },
    {
        "view_id": "AssistantView",
        "view_class": "AssistantView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:08:12.391378"
    },
    {
        "index": "170.0",
        "text": "Traceback (most recent call last):\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:12.401380"
    },
    {
        "index": "171.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_62809648')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:12.402380"
    },
    {
        "index": "171.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1171, in wrapper",
        "tags": "('io', 'stderr', 'frame_62809648', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:12.402380"
    },
    {
        "index": "171.113",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_62809648')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:12.402380"
    },
    {
        "index": "172.0",
        "text": "    result = method(self, *args, **kwargs)\n",
        "tags": "('io', 'stderr', 'frame_62809648')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:12.403378"
    },
    {
        "index": "173.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_62809264')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:12.403378"
    },
    {
        "index": "173.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1158, in wrapper",
        "tags": "('io', 'stderr', 'frame_62809264', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:12.403378"
    },
    {
        "index": "173.113",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_62809264')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:12.404379"
    },
    {
        "index": "174.0",
        "text": "    return method(self, *args, **kwargs)\n",
        "tags": "('io', 'stderr', 'frame_62809264')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:12.404379"
    },
    {
        "index": "175.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_67979472')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:12.404379"
    },
    {
        "index": "175.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1232, in _execute_prepared_user_code",
        "tags": "('io', 'stderr', 'frame_67979472', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:12.405378"
    },
    {
        "index": "175.133",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_67979472')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:12.405378"
    },
    {
        "index": "176.0",
        "text": "    exec(statements, global_vars)\n",
        "tags": "('io', 'stderr', 'frame_67979472')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:12.405378"
    },
    {
        "index": "177.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_68010032')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:12.406380"
    },
    {
        "index": "177.2",
        "text": "File \"C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py\", line 12, in <module>",
        "tags": "('io', 'stderr', 'frame_68010032', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:12.406380"
    },
    {
        "index": "177.76",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_68010032')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:12.406380"
    },
    {
        "index": "178.0",
        "text": "    print(failisise)\n",
        "tags": "('io', 'stderr', 'frame_68010032')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:12.406380"
    },
    {
        "index": "179.0",
        "text": "NameError: name 'failisise' is not defined\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:12.407378"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:08:12.407378"
    },
    {
        "index": "180.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:12.408378"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:08:14.436495"
    },
    {
        "index1": "12.14",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:08:15.985901"
    },
    {
        "index": "12.14",
        "text": "u",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:08:16.068976"
    },
    {
        "widget_id": 92031824,
        "widget_class": "Frame",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:08:17.124900"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:08:17.365022"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T21:08:17.471155"
    },
    {
        "index1": "180.4",
        "index2": "181.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:17.480156"
    },
    {
        "index": "180.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:17.481154"
    },
    {
        "index1": "181.0",
        "index2": "181.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:17.482156"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T21:08:17.482156"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T21:08:17.640156"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:08:17.692156"
    },
    {
        "index": "181.0",
        "text": "P",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:17.692156"
    },
    {
        "index": "181.1",
        "text": "alju \u00f5nne s\u00fcnnip\u00e4evaks, kallis s\u00fcnnip\u00e4evalaps!\n",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:17.693156"
    },
    {
        "index": "182.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:17.702156"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:08:45.409131"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:08:47.692007"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:08:47.695008"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:08:51.626307"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:08:52.267846"
    },
    {
        "index1": "3.0",
        "index2": "4.1",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:08:53.694751"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:08:54.855382"
    },
    {
        "index1": "3.0",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:08:55.192631"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:08:56.317574"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T21:08:56.441615"
    },
    {
        "index1": "182.4",
        "index2": "183.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:56.450613"
    },
    {
        "index": "182.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:56.450613"
    },
    {
        "index1": "183.0",
        "index2": "183.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:56.451613"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T21:08:56.452613"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T21:08:56.612614"
    },
    {
        "view_id": "AssistantView",
        "view_class": "AssistantView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:08:56.690615"
    },
    {
        "index": "183.0",
        "text": "Traceback (most recent call last):\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:56.700615"
    },
    {
        "index": "184.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_55014960')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:56.701613"
    },
    {
        "index": "184.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1171, in wrapper",
        "tags": "('io', 'stderr', 'frame_55014960', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:56.701613"
    },
    {
        "index": "184.113",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_55014960')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:56.701613"
    },
    {
        "index": "185.0",
        "text": "    result = method(self, *args, **kwargs)\n",
        "tags": "('io', 'stderr', 'frame_55014960')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:56.701613"
    },
    {
        "index": "186.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_55014576')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:56.702614"
    },
    {
        "index": "186.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1158, in wrapper",
        "tags": "('io', 'stderr', 'frame_55014576', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:56.702614"
    },
    {
        "index": "186.113",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_55014576')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:56.702614"
    },
    {
        "index": "187.0",
        "text": "    return method(self, *args, **kwargs)\n",
        "tags": "('io', 'stderr', 'frame_55014576')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:56.703614"
    },
    {
        "index": "188.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_60192976')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:56.703614"
    },
    {
        "index": "188.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1232, in _execute_prepared_user_code",
        "tags": "('io', 'stderr', 'frame_60192976', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:56.703614"
    },
    {
        "index": "188.133",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_60192976')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:56.703614"
    },
    {
        "index": "189.0",
        "text": "    exec(statements, global_vars)\n",
        "tags": "('io', 'stderr', 'frame_60192976')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:56.704614"
    },
    {
        "index": "190.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_60207152')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:56.704614"
    },
    {
        "index": "190.2",
        "text": "File \"C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py\", line 3, in <module>",
        "tags": "('io', 'stderr', 'frame_60207152', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:56.704614"
    },
    {
        "index": "190.75",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_60207152')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:56.705614"
    },
    {
        "index": "191.0",
        "text": "    asendatud\u00e4 = failisisu.replace(\"\u00e4\",\"ae\")\n",
        "tags": "('io', 'stderr', 'frame_60207152')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:56.705614"
    },
    {
        "index": "192.0",
        "text": "NameError: name 'failisisu' is not defined\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:56.705614"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:08:56.705614"
    },
    {
        "index": "193.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:56.707615"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:08:57.604805"
    },
    {
        "index1": "10.0",
        "index2": "10.16",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:08:58.315049"
    },
    {
        "index1": "9.0",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:08:59.130464"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:08:59.864133"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T21:08:59.986261"
    },
    {
        "index1": "193.4",
        "index2": "194.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:59.995268"
    },
    {
        "index": "193.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:59.995268"
    },
    {
        "index1": "194.0",
        "index2": "194.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:08:59.996270"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T21:08:59.997270"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T21:09:00.152268"
    },
    {
        "view_id": "AssistantView",
        "view_class": "AssistantView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:09:00.243283"
    },
    {
        "index": "194.0",
        "text": "Traceback (most recent call last):\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:00.253284"
    },
    {
        "index": "195.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_64579120')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:00.253284"
    },
    {
        "index": "195.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1171, in wrapper",
        "tags": "('io', 'stderr', 'frame_64579120', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:00.254284"
    },
    {
        "index": "195.113",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_64579120')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:00.254284"
    },
    {
        "index": "196.0",
        "text": "    result = method(self, *args, **kwargs)\n",
        "tags": "('io', 'stderr', 'frame_64579120')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:00.254284"
    },
    {
        "index": "197.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_64578736')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:00.255284"
    },
    {
        "index": "197.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1158, in wrapper",
        "tags": "('io', 'stderr', 'frame_64578736', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:00.255284"
    },
    {
        "index": "197.113",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_64578736')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:00.255284"
    },
    {
        "index": "198.0",
        "text": "    return method(self, *args, **kwargs)\n",
        "tags": "('io', 'stderr', 'frame_64578736')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:00.255284"
    },
    {
        "index": "199.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_69748944')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:00.256284"
    },
    {
        "index": "199.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1232, in _execute_prepared_user_code",
        "tags": "('io', 'stderr', 'frame_69748944', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:00.256284"
    },
    {
        "index": "199.133",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_69748944')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:00.256284"
    },
    {
        "index": "200.0",
        "text": "    exec(statements, global_vars)\n",
        "tags": "('io', 'stderr', 'frame_69748944')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:00.257283"
    },
    {
        "index": "201.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_69775408')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:00.257283"
    },
    {
        "index": "201.2",
        "text": "File \"C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py\", line 3, in <module>",
        "tags": "('io', 'stderr', 'frame_69775408', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:00.257283"
    },
    {
        "index": "201.75",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_69775408')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:00.257283"
    },
    {
        "index": "202.0",
        "text": "    asendatud\u00e4 = failisisu.replace(\"\u00e4\",\"ae\")\n",
        "tags": "('io', 'stderr', 'frame_69775408')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:00.258283"
    },
    {
        "index": "203.0",
        "text": "NameError: name 'failisisu' is not defined\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:00.258283"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:09:00.258283"
    },
    {
        "index": "204.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:00.260285"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:09:02.262234"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:09:04.415643"
    },
    {
        "index1": "6.13",
        "index2": "6.22",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:09:06.449063"
    },
    {
        "index": "6.13",
        "text": "f",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:09:06.451063"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:09:07.518070"
    },
    {
        "index1": "5.13",
        "index2": "5.22",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:09:08.161369"
    },
    {
        "index": "5.13",
        "text": "f",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:09:08.163370"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:09:08.842867"
    },
    {
        "index1": "4.13",
        "index2": "4.22",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:09:09.742208"
    },
    {
        "index": "4.13",
        "text": "f",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:09:09.744208"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:09:10.476809"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:09:10.924137"
    },
    {
        "index1": "3.13",
        "index2": "3.22",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:09:11.537393"
    },
    {
        "index": "3.13",
        "text": "f",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:09:11.539393"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:09:12.640334"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T21:09:12.754412"
    },
    {
        "index1": "204.4",
        "index2": "205.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:12.769426"
    },
    {
        "index": "204.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:12.769426"
    },
    {
        "index1": "205.0",
        "index2": "205.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:12.771424"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T21:09:12.772424"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T21:09:12.935426"
    },
    {
        "view_id": "AssistantView",
        "view_class": "AssistantView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:09:13.012425"
    },
    {
        "index": "205.0",
        "text": "Traceback (most recent call last):\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:13.022426"
    },
    {
        "index": "206.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_54556208')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:13.023424"
    },
    {
        "index": "206.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1171, in wrapper",
        "tags": "('io', 'stderr', 'frame_54556208', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:13.023424"
    },
    {
        "index": "206.113",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_54556208')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:13.023424"
    },
    {
        "index": "207.0",
        "text": "    result = method(self, *args, **kwargs)\n",
        "tags": "('io', 'stderr', 'frame_54556208')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:13.023424"
    },
    {
        "index": "208.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_54555824')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:13.024424"
    },
    {
        "index": "208.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1158, in wrapper",
        "tags": "('io', 'stderr', 'frame_54555824', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:13.024424"
    },
    {
        "index": "208.113",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_54555824')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:13.024424"
    },
    {
        "index": "209.0",
        "text": "    return method(self, *args, **kwargs)\n",
        "tags": "('io', 'stderr', 'frame_54555824')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:13.025426"
    },
    {
        "index": "210.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_59197648')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:13.025426"
    },
    {
        "index": "210.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1232, in _execute_prepared_user_code",
        "tags": "('io', 'stderr', 'frame_59197648', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:13.025426"
    },
    {
        "index": "210.133",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_59197648')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:13.026424"
    },
    {
        "index": "211.0",
        "text": "    exec(statements, global_vars)\n",
        "tags": "('io', 'stderr', 'frame_59197648')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:13.026424"
    },
    {
        "index": "212.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_59228208')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:13.026424"
    },
    {
        "index": "212.2",
        "text": "File \"C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py\", line 3, in <module>",
        "tags": "('io', 'stderr', 'frame_59228208', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:13.027426"
    },
    {
        "index": "212.75",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_59228208')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:13.027426"
    },
    {
        "index": "213.0",
        "text": "    asendatud\u00e4 = f.replace(\"\u00e4\",\"ae\")\n",
        "tags": "('io', 'stderr', 'frame_59228208')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:13.027426"
    },
    {
        "index": "214.0",
        "text": "AttributeError: '_io.TextIOWrapper' object has no attribute 'replace'\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:13.027426"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:09:13.028426"
    },
    {
        "index": "215.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:13.029426"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:09:15.532026"
    },
    {
        "index1": "3.0",
        "index2": "9.0",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:09:16.947713"
    },
    {
        "index1": "2.0",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:09:17.311037"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:09:18.858855"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:09:19.970607"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:09:19.971608"
    },
    {
        "index": "4.0",
        "text": "f = open(\"sms.txt\", encoding=\"UTF-8\")\n \nfor rida in f:                      # ridade kaupa\n    for s\u00fcmbol in rida:             # s\u00fcmbolite kaupa\n        if s\u00fcmbol == \"\u00f5\":\n            print(\"6\", end = \"\")    # reavahetust ei tule\n        else:\n            print(s\u00fcmbol, end = \"\") # reavahetust ei tule\n \nf.close()                           # faili ei l\u00e4he enam vaja",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:09:20.410000"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Paste>>",
        "time": "2020-11-14T21:09:20.410000"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:09:21.135616"
    },
    {
        "index1": "4.0",
        "index2": "4.37",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:09:22.112933"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:09:22.880467"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T21:09:22.995542"
    },
    {
        "index1": "215.4",
        "index2": "216.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:23.006543"
    },
    {
        "index": "215.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:23.006543"
    },
    {
        "index1": "216.0",
        "index2": "216.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:23.007542"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T21:09:23.008544"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T21:09:23.165542"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:09:23.222542"
    },
    {
        "index": "216.0",
        "text": "P",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:23.223544"
    },
    {
        "index": "216.1",
        "text": "alju 6nne s\u00fcnnip\u00e4evaks, kallis s\u00fcnnip\u00e4evalaps!",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:23.223544"
    },
    {
        "index": "216.47",
        "text": "\n",
        "tags": "('io',)",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:23.231544"
    },
    {
        "index": "217.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:23.231544"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:09:25.402905"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:09:25.903318"
    },
    {
        "index1": "4.0",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:09:26.469786"
    },
    {
        "index1": "3.0",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:09:26.883122"
    },
    {
        "index1": "2.0",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:09:29.449243"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:09:33.563717"
    },
    {
        "index1": "6.19",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:09:34.697583"
    },
    {
        "index": "6.19",
        "text": "o",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:09:35.068771"
    },
    {
        "index": "6.20",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:09:35.166851"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:09:36.206836"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T21:09:36.309959"
    },
    {
        "index1": "217.4",
        "index2": "218.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:36.319959"
    },
    {
        "index": "217.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:36.320960"
    },
    {
        "index1": "218.0",
        "index2": "218.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:36.321959"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T21:09:36.321959"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T21:09:36.478959"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:09:36.533011"
    },
    {
        "index": "218.0",
        "text": "P",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:36.534014"
    },
    {
        "index": "218.1",
        "text": "alju oenne s\u00fcnnip\u00e4evaks, kallis s\u00fcnnip\u00e4evalaps!",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:36.534014"
    },
    {
        "index": "218.48",
        "text": "\n",
        "tags": "('io',)",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:36.542013"
    },
    {
        "index": "219.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:36.542013"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:09:41.863183"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:09:42.263479"
    },
    {
        "index": "1.43",
        "text": ".",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:09:43.166231"
    },
    {
        "index": "1.44",
        "text": "u",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:09:43.791786"
    },
    {
        "index": "1.45",
        "text": "p",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:09:44.056964"
    },
    {
        "index": "1.46",
        "text": "p",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:09:44.195069"
    },
    {
        "index": "1.47",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:09:44.290149"
    },
    {
        "index": "1.48",
        "text": "r",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:09:44.425279"
    },
    {
        "index": "1.49",
        "text": "(",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:09:44.801540"
    },
    {
        "index": "1.50",
        "text": ")",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:09:44.988631"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:09:46.528798"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T21:09:46.660904"
    },
    {
        "index1": "219.4",
        "index2": "220.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:46.677918"
    },
    {
        "index": "219.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:46.677918"
    },
    {
        "index1": "220.0",
        "index2": "220.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:46.678919"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T21:09:46.679918"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T21:09:46.836920"
    },
    {
        "view_id": "AssistantView",
        "view_class": "AssistantView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:09:46.904919"
    },
    {
        "index": "220.0",
        "text": "Traceback (most recent call last):\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:46.919919"
    },
    {
        "index": "221.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_53438000')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:46.920919"
    },
    {
        "index": "221.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1171, in wrapper",
        "tags": "('io', 'stderr', 'frame_53438000', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:46.920919"
    },
    {
        "index": "221.113",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_53438000')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:46.920919"
    },
    {
        "index": "222.0",
        "text": "    result = method(self, *args, **kwargs)\n",
        "tags": "('io', 'stderr', 'frame_53438000')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:46.921919"
    },
    {
        "index": "223.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_53437616')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:46.921919"
    },
    {
        "index": "223.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1158, in wrapper",
        "tags": "('io', 'stderr', 'frame_53437616', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:46.921919"
    },
    {
        "index": "223.113",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_53437616')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:46.922919"
    },
    {
        "index": "224.0",
        "text": "    return method(self, *args, **kwargs)\n",
        "tags": "('io', 'stderr', 'frame_53437616')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:46.922919"
    },
    {
        "index": "225.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_59664592')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:46.922919"
    },
    {
        "index": "225.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1232, in _execute_prepared_user_code",
        "tags": "('io', 'stderr', 'frame_59664592', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:46.923919"
    },
    {
        "index": "225.133",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_59664592')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:46.923919"
    },
    {
        "index": "226.0",
        "text": "    exec(statements, global_vars)\n",
        "tags": "('io', 'stderr', 'frame_59664592')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:46.923919"
    },
    {
        "index": "227.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_59670000')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:46.923919"
    },
    {
        "index": "227.2",
        "text": "File \"C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py\", line 1, in <module>",
        "tags": "('io', 'stderr', 'frame_59670000', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:46.924920"
    },
    {
        "index": "227.75",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_59670000')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:46.924920"
    },
    {
        "index": "228.0",
        "text": "    f = open(\"telegramm.txt\", encoding=\"UTF-8\").upper()\n",
        "tags": "('io', 'stderr', 'frame_59670000')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:46.924920"
    },
    {
        "index": "229.0",
        "text": "AttributeError: '_io.TextIOWrapper' object has no attribute 'upper'\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:46.925919"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:09:46.925919"
    },
    {
        "index": "230.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:09:46.926919"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:09:50.289815"
    },
    {
        "index1": "1.43",
        "index2": "1.51",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:09:51.287419"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:09:52.484410"
    },
    {
        "index1": "2.0",
        "index2": "2.1",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:09:53.725435"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:09:56.125397"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:09:56.659865"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:09:59.356340"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:10:00.323030"
    },
    {
        "index": "3.50",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:10:00.987709"
    },
    {
        "index": "4.0",
        "text": "",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:10:00.989711"
    },
    {
        "index": "4.0",
        "text": "    ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:10:00.990710"
    },
    {
        "index": "4.4",
        "text": "f",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:10:01.979459"
    },
    {
        "index": "4.5",
        "text": ".",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:10:02.178660"
    },
    {
        "index": "4.6",
        "text": "u",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:10:03.600984"
    },
    {
        "index": "4.7",
        "text": "p",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:10:03.876208"
    },
    {
        "index": "4.8",
        "text": "p",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:10:03.998301"
    },
    {
        "index": "4.9",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:10:04.059326"
    },
    {
        "index": "4.10",
        "text": "r",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:10:04.169353"
    },
    {
        "index": "4.11",
        "text": "(",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:10:04.497647"
    },
    {
        "index": "4.12",
        "text": ")",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:10:04.690787"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:10:06.119062"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T21:10:06.247119"
    },
    {
        "index1": "230.4",
        "index2": "231.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:10:06.257132"
    },
    {
        "index": "230.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:10:06.258135"
    },
    {
        "index1": "231.0",
        "index2": "231.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:10:06.259133"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T21:10:06.259133"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T21:10:06.418133"
    },
    {
        "view_id": "AssistantView",
        "view_class": "AssistantView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:10:06.496134"
    },
    {
        "index": "231.0",
        "text": "Traceback (most recent call last):\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:10:06.506134"
    },
    {
        "index": "232.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_57894448')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:10:06.507132"
    },
    {
        "index": "232.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1171, in wrapper",
        "tags": "('io', 'stderr', 'frame_57894448', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:10:06.507132"
    },
    {
        "index": "232.113",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_57894448')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:10:06.507132"
    },
    {
        "index": "233.0",
        "text": "    result = method(self, *args, **kwargs)\n",
        "tags": "('io', 'stderr', 'frame_57894448')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:10:06.508134"
    },
    {
        "index": "234.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_57894064')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:10:06.508134"
    },
    {
        "index": "234.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1158, in wrapper",
        "tags": "('io', 'stderr', 'frame_57894064', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:10:06.508134"
    },
    {
        "index": "234.113",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_57894064')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:10:06.508134"
    },
    {
        "index": "235.0",
        "text": "    return method(self, *args, **kwargs)\n",
        "tags": "('io', 'stderr', 'frame_57894064')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:10:06.509134"
    },
    {
        "index": "236.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_63064272')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:10:06.509134"
    },
    {
        "index": "236.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1232, in _execute_prepared_user_code",
        "tags": "('io', 'stderr', 'frame_63064272', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:10:06.509134"
    },
    {
        "index": "236.133",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_63064272')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:10:06.510132"
    },
    {
        "index": "237.0",
        "text": "    exec(statements, global_vars)\n",
        "tags": "('io', 'stderr', 'frame_63064272')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:10:06.510132"
    },
    {
        "index": "238.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_63081968')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:10:06.510132"
    },
    {
        "index": "238.2",
        "text": "File \"C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py\", line 4, in <module>",
        "tags": "('io', 'stderr', 'frame_63081968', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:10:06.511134"
    },
    {
        "index": "238.75",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_63081968')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:10:06.511134"
    },
    {
        "index": "239.0",
        "text": "    f.upper()\n",
        "tags": "('io', 'stderr', 'frame_63081968')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:10:06.511134"
    },
    {
        "index": "240.0",
        "text": "AttributeError: '_io.TextIOWrapper' object has no attribute 'upper'\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:10:06.511134"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:10:06.512134"
    },
    {
        "index": "241.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:10:06.513135"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:10:09.640360"
    },
    {
        "index1": "4.4",
        "index2": "4.13",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:10:10.762879"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:10:11.632623"
    },
    {
        "index": "2.0",
        "text": "g",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:10:12.494228"
    },
    {
        "index": "2.1",
        "text": "+",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:10:12.857494"
    },
    {
        "index1": "2.1",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:10:13.341842"
    },
    {
        "index": "2.1",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:10:13.596080"
    },
    {
        "index": "2.2",
        "text": "=",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:10:13.688199"
    },
    {
        "index": "2.3",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:10:13.823379"
    },
    {
        "index": "2.4",
        "text": "f",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:10:14.405806"
    },
    {
        "index": "2.5",
        "text": ".",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:10:14.816069"
    },
    {
        "index": "2.6",
        "text": "u",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:10:15.135345"
    },
    {
        "index": "2.7",
        "text": "p",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:10:15.416524"
    },
    {
        "index": "2.8",
        "text": "p",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:10:15.545639"
    },
    {
        "index": "2.9",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:10:15.572640"
    },
    {
        "index": "2.10",
        "text": "r",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:10:15.689717"
    },
    {
        "index": "2.11",
        "text": "(",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:10:16.577476"
    },
    {
        "index": "2.12",
        "text": ")",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:10:16.767666"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:10:17.900583"
    },
    {
        "index1": "3.12",
        "index2": "3.13",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:10:18.952441"
    },
    {
        "index": "3.12",
        "text": "g",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:10:18.954441"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:10:19.256693"
    },
    {
        "index": "2.13",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:10:19.950226"
    },
    {
        "index": "3.0",
        "text": "",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:10:19.952228"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:10:20.810880"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T21:10:20.928969"
    },
    {
        "index1": "241.4",
        "index2": "242.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:10:20.942982"
    },
    {
        "index": "241.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:10:20.942982"
    },
    {
        "index1": "242.0",
        "index2": "242.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:10:20.943982"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T21:10:20.943982"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T21:10:21.100984"
    },
    {
        "view_id": "AssistantView",
        "view_class": "AssistantView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:10:21.168984"
    },
    {
        "index": "242.0",
        "text": "Traceback (most recent call last):\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:10:21.179984"
    },
    {
        "index": "243.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_57828912')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:10:21.180984"
    },
    {
        "index": "243.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1171, in wrapper",
        "tags": "('io', 'stderr', 'frame_57828912', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:10:21.181982"
    },
    {
        "index": "243.113",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_57828912')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:10:21.181982"
    },
    {
        "index": "244.0",
        "text": "    result = method(self, *args, **kwargs)\n",
        "tags": "('io', 'stderr', 'frame_57828912')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:10:21.181982"
    },
    {
        "index": "245.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_57828528')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:10:21.182984"
    },
    {
        "index": "245.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1158, in wrapper",
        "tags": "('io', 'stderr', 'frame_57828528', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:10:21.182984"
    },
    {
        "index": "245.113",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_57828528')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:10:21.183987"
    },
    {
        "index": "246.0",
        "text": "    return method(self, *args, **kwargs)\n",
        "tags": "('io', 'stderr', 'frame_57828528')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:10:21.183987"
    },
    {
        "index": "247.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_62482640')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:10:21.184983"
    },
    {
        "index": "247.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1232, in _execute_prepared_user_code",
        "tags": "('io', 'stderr', 'frame_62482640', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:10:21.184983"
    },
    {
        "index": "247.133",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_62482640')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:10:21.184983"
    },
    {
        "index": "248.0",
        "text": "    exec(statements, global_vars)\n",
        "tags": "('io', 'stderr', 'frame_62482640')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:10:21.184983"
    },
    {
        "index": "249.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_62488048')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:10:21.185983"
    },
    {
        "index": "249.2",
        "text": "File \"C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py\", line 2, in <module>",
        "tags": "('io', 'stderr', 'frame_62488048', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:10:21.185983"
    },
    {
        "index": "249.75",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_62488048')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:10:21.185983"
    },
    {
        "index": "250.0",
        "text": "    g = f.upper()\n",
        "tags": "('io', 'stderr', 'frame_62488048')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:10:21.186983"
    },
    {
        "index": "251.0",
        "text": "AttributeError: '_io.TextIOWrapper' object has no attribute 'upper'\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:10:21.186983"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:10:21.186983"
    },
    {
        "index": "252.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:10:21.187985"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:10:27.445850"
    },
    {
        "index1": "2.0",
        "index2": "2.13",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:10:30.906312"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:10:34.868906"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:12:02.610682"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:12:02.613684"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:12:04.494267"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:12:05.233966"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:12:05.667364"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:12:07.385792"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:12:08.154337"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:12:08.783924"
    },
    {
        "index1": "8.20",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:12:09.869890"
    },
    {
        "index1": "8.19",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:12:10.069088"
    },
    {
        "index": "8.19",
        "text": "O",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:12:10.766668"
    },
    {
        "index": "8.20",
        "text": "E",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:12:10.943792"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:12:12.024447"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:12:15.118652"
    },
    {
        "index1": "8.37",
        "index2": "8.58",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:12:16.370088"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:12:16.846424"
    },
    {
        "index1": "10.36",
        "index2": "10.57",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:12:17.628671"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:12:18.169079"
    },
    {
        "index1": "12.36",
        "index2": "12.61",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:12:18.821298"
    },
    {
        "index1": "12.35",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:12:19.559845"
    },
    {
        "index1": "12.34",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:12:19.770013"
    },
    {
        "index1": "12.33",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:12:20.058275"
    },
    {
        "index1": "12.32",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:12:20.245414"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:12:20.699788"
    },
    {
        "index1": "12.9",
        "index2": "12.32",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:12:21.814090"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:12:22.272403"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:12:22.579680"
    },
    {
        "index1": "10.35",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:12:23.046177"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:12:23.452428"
    },
    {
        "index1": "8.36",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:12:23.747642"
    },
    {
        "index1": "8.35",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:12:23.954833"
    },
    {
        "index1": "8.34",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:12:24.210016"
    },
    {
        "index1": "8.33",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:12:24.467149"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:12:26.114130"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:12:26.538371"
    },
    {
        "index1": "5.0",
        "index2": "5.4",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:12:26.936745"
    },
    {
        "index1": "4.50",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:12:27.346978"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:12:28.360802"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:12:29.220321"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:12:29.698493"
    },
    {
        "index": "5.53",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:12:30.002823"
    },
    {
        "index": "6.0",
        "text": "    ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:12:30.005822"
    },
    {
        "index1": "6.0",
        "index2": "6.4",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:12:30.006824"
    },
    {
        "index": "6.0",
        "text": "        ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:12:30.008823"
    },
    {
        "index": "6.8",
        "text": "\n        ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:12:30.478209"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:13:00.206529"
    },
    {
        "index": "11.24",
        "text": ".",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:13:01.285329"
    },
    {
        "index": "11.25",
        "text": "u",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:13:02.026962"
    },
    {
        "index": "11.26",
        "text": "p",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:13:03.356878"
    },
    {
        "index": "11.27",
        "text": "p",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:13:03.491010"
    },
    {
        "index": "11.28",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:13:03.580112"
    },
    {
        "index": "11.29",
        "text": "r",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:13:03.724150"
    },
    {
        "index": "11.30",
        "text": "(",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:13:04.415831"
    },
    {
        "index": "11.31",
        "text": ")",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:13:04.650022"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:13:05.696891"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:13:05.990115"
    },
    {
        "index1": "7.4",
        "index2": "7.8",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:13:06.769773"
    },
    {
        "index1": "7.0",
        "index2": "7.4",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:13:07.152047"
    },
    {
        "index1": "6.8",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:13:07.535365"
    },
    {
        "index1": "6.4",
        "index2": "6.8",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:13:08.539349"
    },
    {
        "index1": "6.0",
        "index2": "6.4",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:13:08.873619"
    },
    {
        "index1": "5.53",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:13:09.346031"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:13:10.099646"
    },
    {
        "index": "7.33",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:13:11.584926"
    },
    {
        "index": "8.0",
        "text": "            ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:13:11.587927"
    },
    {
        "index1": "8.8",
        "index2": "8.12",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:13:12.274527"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:13:14.649309"
    },
    {
        "index": "6.24",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:13:15.580223"
    },
    {
        "index": "6.25",
        "text": "o",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:13:15.853456"
    },
    {
        "index": "6.26",
        "text": "r",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:13:15.979554"
    },
    {
        "index": "6.27",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:13:16.211746"
    },
    {
        "index": "6.28",
        "text": "s",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:13:17.149630"
    },
    {
        "index": "6.29",
        "text": "[",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:13:18.227524"
    },
    {
        "index1": "6.29",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:13:18.530695"
    },
    {
        "index": "6.29",
        "text": "\u00fc",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:13:18.876904"
    },
    {
        "index": "6.30",
        "text": "mbol",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:13:20.081747"
    },
    {
        "index": "6.34",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:13:21.363756"
    },
    {
        "index": "6.35",
        "text": "=",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:13:22.651900"
    },
    {
        "index": "6.36",
        "text": "=",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:13:22.797913"
    },
    {
        "index": "6.37",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:13:23.018088"
    },
    {
        "index": "6.38",
        "text": "\u00e4",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:13:25.666216"
    },
    {
        "index": "6.39",
        "text": "\u00e4",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:13:25.821329"
    },
    {
        "index1": "6.39",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:13:26.121635"
    },
    {
        "index1": "6.38",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:13:26.299779"
    },
    {
        "index": "6.38",
        "text": "'",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:13:26.888255"
    },
    {
        "index": "6.39",
        "text": "'",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:13:27.031345"
    },
    {
        "index1": "6.39",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:13:27.405698"
    },
    {
        "index1": "6.38",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:13:27.576864"
    },
    {
        "index": "6.38",
        "text": "\"",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:13:27.789056"
    },
    {
        "index": "6.39",
        "text": "\"",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:13:27.926145"
    },
    {
        "index": "6.40",
        "text": "\u00f6",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:13:30.564304"
    },
    {
        "index1": "6.40",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:13:31.367015"
    },
    {
        "index": "6.39",
        "text": "\u00f6",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:13:34.204359"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:13:37.127741"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:13:38.917756"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:13:39.365173"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:13:39.721527"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:13:40.350126"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:13:41.985797"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:13:42.319110"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:13:42.771550"
    },
    {
        "index1": "8.0",
        "index2": "8.6",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:13:43.704114"
    },
    {
        "index": "8.0",
        "text": "        if s\u00fcmbol == \"\u00f5\" or s\u00fcmbol == \"\u00f6\":\n            print(\"OE\", end = \"\")",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:13:44.062430"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Paste>>",
        "time": "2020-11-14T21:13:44.063430"
    },
    {
        "index1": "9.33",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:13:44.838051"
    },
    {
        "index1": "9.33",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:13:44.840051"
    },
    {
        "index": "9.33",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:13:44.842051"
    },
    {
        "index": "10.0",
        "text": "            ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:13:44.845051"
    },
    {
        "index1": "10.8",
        "index2": "10.12",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:13:45.403464"
    },
    {
        "index1": "10.4",
        "index2": "10.8",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:13:45.664692"
    },
    {
        "index1": "10.0",
        "index2": "10.4",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:13:45.826832"
    },
    {
        "index": "10.0",
        "text": "        if s\u00fcmbol == \"\u00f5\" or s\u00fcmbol == \"\u00f6\":\n            print(\"OE\", end = \"\")",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:13:46.421249"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Paste>>",
        "time": "2020-11-14T21:13:46.422252"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:13:50.622066"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:13:51.905650"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:13:52.465171"
    },
    {
        "index1": "10.24",
        "index2": "10.41",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:13:53.645709"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:13:54.670388"
    },
    {
        "index1": "8.24",
        "index2": "8.41",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:13:55.955908"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:13:57.056922"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:13:57.790455"
    },
    {
        "index1": "8.22",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:13:58.758290"
    },
    {
        "index": "8.22",
        "text": "\u00f6",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:13:58.961456"
    },
    {
        "index1": "8.22",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:13:59.429881"
    },
    {
        "index": "8.22",
        "text": "\u00e4",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:13:59.631063"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:14:01.172401"
    },
    {
        "index1": "9.19",
        "index2": "9.21",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:14:02.411438"
    },
    {
        "index": "9.19",
        "text": "A",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:14:02.413438"
    },
    {
        "index": "9.20",
        "text": "E",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:14:02.903869"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:14:04.475071"
    },
    {
        "index1": "10.22",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:14:05.278849"
    },
    {
        "index": "10.22",
        "text": "\u00fc",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:14:05.366913"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:14:06.922363"
    },
    {
        "index1": "11.19",
        "index2": "11.21",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:14:07.968215"
    },
    {
        "index": "11.19",
        "text": "U",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:14:07.970217"
    },
    {
        "index": "11.20",
        "text": "E",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:14:08.130331"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:14:11.367962"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T21:14:11.491111"
    },
    {
        "index1": "252.4",
        "index2": "253.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:14:11.502111"
    },
    {
        "index": "252.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:14:11.502111"
    },
    {
        "index1": "253.0",
        "index2": "253.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:14:11.503113"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T21:14:11.504111"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T21:14:11.661112"
    },
    {
        "view_id": "AssistantView",
        "view_class": "AssistantView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:14:11.737112"
    },
    {
        "index": "253.0",
        "text": "Traceback (most recent call last):\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:14:11.748113"
    },
    {
        "index": "254.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_56649264')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:14:11.749114"
    },
    {
        "index": "254.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1171, in wrapper",
        "tags": "('io', 'stderr', 'frame_56649264', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:14:11.749114"
    },
    {
        "index": "254.113",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_56649264')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:14:11.749114"
    },
    {
        "index": "255.0",
        "text": "    result = method(self, *args, **kwargs)\n",
        "tags": "('io', 'stderr', 'frame_56649264')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:14:11.750113"
    },
    {
        "index": "256.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_56648880')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:14:11.750113"
    },
    {
        "index": "256.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1158, in wrapper",
        "tags": "('io', 'stderr', 'frame_56648880', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:14:11.750113"
    },
    {
        "index": "256.113",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_56648880')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:14:11.751112"
    },
    {
        "index": "257.0",
        "text": "    return method(self, *args, **kwargs)\n",
        "tags": "('io', 'stderr', 'frame_56648880')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:14:11.751112"
    },
    {
        "index": "258.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_61831376')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:14:11.751112"
    },
    {
        "index": "258.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1232, in _execute_prepared_user_code",
        "tags": "('io', 'stderr', 'frame_61831376', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:14:11.751112"
    },
    {
        "index": "258.133",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_61831376')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:14:11.752112"
    },
    {
        "index": "259.0",
        "text": "    exec(statements, global_vars)\n",
        "tags": "('io', 'stderr', 'frame_61831376')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:14:11.752112"
    },
    {
        "index": "260.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_61836784')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:14:11.752112"
    },
    {
        "index": "260.2",
        "text": "File \"C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py\", line 4, in <module>",
        "tags": "('io', 'stderr', 'frame_61836784', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:14:11.753115"
    },
    {
        "index": "260.75",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_61836784')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:14:11.753115"
    },
    {
        "index": "261.0",
        "text": "    for rida in g:                      # ridade kaupa\n",
        "tags": "('io', 'stderr', 'frame_61836784')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:14:11.753115"
    },
    {
        "index": "262.0",
        "text": "NameError: name 'g' is not defined\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:14:11.753115"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:14:11.754112"
    },
    {
        "index": "263.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:14:11.755113"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:14:14.592759"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:14:17.467720"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:14:17.470717"
    },
    {
        "index1": "4.12",
        "index2": "4.13",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:14:17.958121"
    },
    {
        "index": "4.12",
        "text": "d",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:14:17.961123"
    },
    {
        "index1": "4.12",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:14:18.910979"
    },
    {
        "index": "4.12",
        "text": "f",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:14:19.043101"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:14:19.954908"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T21:14:20.050989"
    },
    {
        "index1": "263.4",
        "index2": "264.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:14:20.061000"
    },
    {
        "index": "263.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:14:20.061000"
    },
    {
        "index1": "264.0",
        "index2": "264.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:14:20.062000"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T21:14:20.063001"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T21:14:20.220002"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:14:20.275002"
    },
    {
        "index": "264.0",
        "text": "P",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:14:20.276003"
    },
    {
        "index": "264.1",
        "text": "ALJU OE\u00d5NNE SUENNIPAE\u00c4EVAKS, KALLIS SUENNIPAE\u00c4EVALAPS!",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:14:20.276003"
    },
    {
        "index": "264.55",
        "text": "\n",
        "tags": "('io',)",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:14:20.285002"
    },
    {
        "index": "265.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:14:20.285002"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:14:43.385746"
    },
    {
        "index": "8.8",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:14:44.069244"
    },
    {
        "index": "8.9",
        "text": "l",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:14:44.192322"
    },
    {
        "index": "10.8",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:14:46.605292"
    },
    {
        "index": "10.9",
        "text": "l",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:14:46.765418"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:14:47.863312"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T21:14:47.971402"
    },
    {
        "index1": "265.4",
        "index2": "266.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:14:47.981401"
    },
    {
        "index": "265.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:14:47.981401"
    },
    {
        "index1": "266.0",
        "index2": "266.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:14:47.982401"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T21:14:47.983401"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T21:14:48.141401"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:14:48.193402"
    },
    {
        "index": "266.0",
        "text": "P",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:14:48.193402"
    },
    {
        "index": "266.1",
        "text": "ALJU OENNE SUENNIPAEEVAKS, KALLIS SUENNIPAEEVALAPS!",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:14:48.194403"
    },
    {
        "index": "266.52",
        "text": "\n",
        "tags": "('io',)",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:14:48.201402"
    },
    {
        "index": "267.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:14:48.202402"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:14:52.331899"
    },
    {
        "index1": "13.43",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:14:53.652894"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:14:54.972676"
    },
    {
        "index1": "5.23",
        "index2": "5.53",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:14:56.703368"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:14:57.139721"
    },
    {
        "index1": "4.14",
        "index2": "4.50",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:14:58.118934"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:14:58.442214"
    },
    {
        "index1": "2.0",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:14:58.961670"
    },
    {
        "index1": "1.43",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:15:00.278746"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:15:00.996324"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:15:03.567153"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:16:10.256739"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:16:10.264739"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:16:10.681904"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:16:11.280165"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:16:11.682559"
    },
    {
        "index": "1.0",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:16:12.386205"
    },
    {
        "index": "2.0",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:16:12.530363"
    },
    {
        "index": "1.0",
        "text": "failinimi = input(\"Sisesta failinimi: \")\n\nfail = open(failinimi, encoding=\"UTF-8\")",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:16:13.661405"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Paste>>",
        "time": "2020-11-14T21:16:13.661405"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:16:15.804954"
    },
    {
        "index1": "3.0",
        "index2": "3.4",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:16:17.174652"
    },
    {
        "index": "3.0",
        "text": "d",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:16:17.177652"
    },
    {
        "index1": "3.0",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:16:18.222615"
    },
    {
        "index": "3.0",
        "text": "f",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:16:18.333613"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:16:19.184396"
    },
    {
        "index1": "5.0",
        "index2": "5.43",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:16:20.179917"
    },
    {
        "index1": "4.0",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:16:20.437074"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:16:25.011749"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:17:05.509972"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:17:05.516972"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:17:06.299338"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:17:06.994775"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:17:08.897180"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:17:12.471143"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:17:14.963557"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:17:16.008557"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:17:16.530556"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:17:18.705400"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:17:20.645235"
    },
    {
        "index": "8.33",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:17:22.162422"
    },
    {
        "index": "9.0",
        "text": "            ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:17:22.165421"
    },
    {
        "index1": "9.8",
        "index2": "9.12",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:17:22.704604"
    },
    {
        "index1": "9.4",
        "index2": "9.8",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:17:22.876744"
    },
    {
        "index1": "9.0",
        "index2": "9.4",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:17:23.063890"
    },
    {
        "index": "9.0",
        "text": "        if s\u00fcmbol == \"\u00f5\" or s\u00fcmbol == \"\u00f6\":\n            print(\"OE\", end = \"\")",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:17:23.507278"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Paste>>",
        "time": "2020-11-14T21:17:23.508277"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:17:26.229625"
    },
    {
        "index1": "9.11",
        "index2": "9.28",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:17:27.374194"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:17:29.909291"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:17:31.175406"
    },
    {
        "index1": "7.39",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:17:32.199267"
    },
    {
        "index": "7.39",
        "text": "{",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:17:33.297126"
    },
    {
        "index1": "7.39",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:17:33.801653"
    },
    {
        "index": "7.39",
        "text": "\u00dc",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:17:34.559320"
    },
    {
        "index1": "7.39",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:17:35.401170"
    },
    {
        "index": "7.39",
        "text": "\u00d5",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:17:35.637324"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:17:37.019340"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:17:37.381684"
    },
    {
        "index": "9.24",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:17:38.115348"
    },
    {
        "index": "9.25",
        "text": "o",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:17:38.305469"
    },
    {
        "index": "9.26",
        "text": "r",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:17:38.455595"
    },
    {
        "index": "9.27",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:17:38.577705"
    },
    {
        "index": "9.28",
        "text": "s",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:17:38.740855"
    },
    {
        "index": "9.29",
        "text": "p",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:17:38.861978"
    },
    {
        "index1": "9.29",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:17:39.322326"
    },
    {
        "index": "9.29",
        "text": "\u00fc",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:17:39.708702"
    },
    {
        "index": "9.30",
        "text": "mbol",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:17:40.841518"
    },
    {
        "index": "9.34",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:17:41.736117"
    },
    {
        "index": "9.35",
        "text": "\u00b4",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:17:44.197261"
    },
    {
        "index1": "9.35",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:17:44.658626"
    },
    {
        "index": "9.35",
        "text": "+",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:17:46.040727"
    },
    {
        "index1": "9.35",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:17:46.568169"
    },
    {
        "index": "9.35",
        "text": "=",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:17:46.785282"
    },
    {
        "index": "9.36",
        "text": "=",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:17:46.940435"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:17:48.499973"
    },
    {
        "index": "11.26",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:17:49.205588"
    },
    {
        "index": "11.27",
        "text": "=",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:17:49.651959"
    },
    {
        "index": "11.28",
        "text": "=",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:17:49.796036"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:17:51.923661"
    },
    {
        "index": "13.26",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:17:52.545146"
    },
    {
        "index": "13.27",
        "text": "=",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:17:52.747342"
    },
    {
        "index": "13.28",
        "text": "=",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:17:52.876430"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:17:56.087232"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:17:57.017693"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:17:59.306707"
    },
    {
        "index": "9.37",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:18:00.476569"
    },
    {
        "index": "9.38",
        "text": "'",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:18:03.040774"
    },
    {
        "index1": "9.38",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:18:03.390045"
    },
    {
        "index": "9.38",
        "text": "'",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:18:03.833395"
    },
    {
        "index": "9.39",
        "text": "'",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:18:03.971507"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:18:05.372678"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:18:05.715894"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:18:06.091254"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:18:06.533683"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:18:06.926909"
    },
    {
        "index": "11.29",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:18:09.164927"
    },
    {
        "index": "11.30",
        "text": "'",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:18:09.432137"
    },
    {
        "index": "11.31",
        "text": "'",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:18:09.568224"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:18:10.628020"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:18:11.507757"
    },
    {
        "index": "13.29",
        "text": "'",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:18:12.449516"
    },
    {
        "index": "13.30",
        "text": "'",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:18:12.582610"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:18:17.240212"
    },
    {
        "index": "11.27",
        "text": "o",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:18:18.901709"
    },
    {
        "index": "11.28",
        "text": "r",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:18:19.041843"
    },
    {
        "index": "11.29",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:18:19.297011"
    },
    {
        "index": "11.30",
        "text": "s",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:18:19.516197"
    },
    {
        "index": "11.31",
        "text": "p",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:18:19.801401"
    },
    {
        "index1": "11.31",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:18:20.208732"
    },
    {
        "index": "11.31",
        "text": "\u00fc",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:18:20.591953"
    },
    {
        "index": "11.32",
        "text": "mbol",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:18:20.994262"
    },
    {
        "index": "11.36",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:18:21.679840"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:18:24.014039"
    },
    {
        "index": "13.27",
        "text": "o",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:18:26.302023"
    },
    {
        "index": "13.28",
        "text": "r",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:18:26.645210"
    },
    {
        "index": "13.29",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:18:26.856363"
    },
    {
        "index": "13.30",
        "text": "s",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:18:27.104563"
    },
    {
        "index": "13.31",
        "text": "\u00fc",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:18:27.472693"
    },
    {
        "index": "13.32",
        "text": "mbol",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:18:27.824025"
    },
    {
        "index": "13.36",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:18:28.299492"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:18:29.876702"
    },
    {
        "index": "9.39",
        "text": "\u00c4",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:18:31.467847"
    },
    {
        "index1": "9.39",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:18:31.761143"
    },
    {
        "index": "9.39",
        "text": "\u00d6",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:18:32.022332"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:18:33.509342"
    },
    {
        "index": "11.41",
        "text": "\u00c4",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:18:34.239989"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:18:35.994400"
    },
    {
        "index": "13.40",
        "text": "\u00dc",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:18:36.666872"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:18:45.720505"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:18:47.343858"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:19:31.905906"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:19:31.912906"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:19:33.626170"
    },
    {
        "index1": "9.11",
        "index2": "9.41",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:19:35.774424"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Cut>>",
        "time": "2020-11-14T21:19:35.775429"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:19:36.265765"
    },
    {
        "index": "7.41",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:19:36.945217"
    },
    {
        "index": "7.42",
        "text": "o",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:19:37.481642"
    },
    {
        "index": "7.43",
        "text": "r",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:19:37.570672"
    },
    {
        "index": "7.44",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:19:37.696770"
    },
    {
        "index": "7.45",
        "text": "",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:19:39.181853"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Paste>>",
        "time": "2020-11-14T21:19:39.181853"
    },
    {
        "index1": "7.44",
        "index2": "7.45",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:19:41.713175"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Undo>>",
        "time": "2020-11-14T21:19:41.715177"
    },
    {
        "index1": "7.43",
        "index2": "7.44",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:19:42.050457"
    },
    {
        "index1": "7.42",
        "index2": "7.43",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:19:42.053457"
    },
    {
        "index1": "7.41",
        "index2": "7.42",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:19:42.057457"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Undo>>",
        "time": "2020-11-14T21:19:42.059458"
    },
    {
        "index": "9.11",
        "text": "s\u00fcmbol == \"\u00f6\" or s\u00fcmbol == '\u00d6'",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:19:42.426714"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Undo>>",
        "time": "2020-11-14T21:19:42.427714"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:19:43.651602"
    },
    {
        "index1": "9.11",
        "index2": "9.41",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:19:45.479372"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Cut>>",
        "time": "2020-11-14T21:19:45.480371"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:19:46.297907"
    },
    {
        "index": "7.41",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:19:46.921513"
    },
    {
        "index": "7.42",
        "text": "o",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:19:47.260814"
    },
    {
        "index": "7.43",
        "text": "r",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:19:47.361894"
    },
    {
        "index": "7.44",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:19:47.462991"
    },
    {
        "index": "7.45",
        "text": "s\u00fcmbol == \"\u00f6\" or s\u00fcmbol == '\u00d6'",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:19:48.201493"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Paste>>",
        "time": "2020-11-14T21:19:48.201493"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:19:49.784793"
    },
    {
        "index1": "9.0",
        "index2": "10.33",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:19:53.307768"
    },
    {
        "index1": "8.33",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:19:53.697035"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:19:58.882230"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:20:01.063804"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:20:22.260003"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-3>",
        "time": "2020-11-14T21:20:23.247844"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Copy>>",
        "time": "2020-11-14T21:20:23.248844"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:20:24.695683"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:21:20.913796"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:21:20.919791"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:21:22.301775"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:21:30.900768"
    },
    {
        "widget_id": 95911120,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:21:30.901770"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T21:21:30.971805"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:21:32.167544"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:31:29.267823"
    },
    {
        "widget_id": 92247952,
        "widget_class": "Treeview",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:31:29.268823"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:39:34.066373"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:39:53.496117"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:39:53.498121"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:39:53.901119"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:39:54.426517"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:39:54.433519"
    },
    {
        "index1": "1.0",
        "index2": "16.0",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:39:56.024861"
    },
    {
        "index": "1.0",
        "text": "from urllib.request import urlopen\n \nfail = open(\"andmed.txt\", \"a\") # fail avatakse juurde kirjutamiseks\np\u00e4evad = [31,28,31,30,31,30,31,31,30,31,30,31]\naasta = 2017\n \nfor kuu in range(1,13): # v\u00e4limine ts\u00fckkel kuude j\u00e4rjenumbrite kaupa\n    for p\u00e4ev in range(1, p\u00e4evad[kuu-1]+1): # sisemine ts\u00fckkel p\u00e4evade kaupa\n        # konkreetse p\u00e4eva andmed\n        vastus = urlopen(\"http://meteo.physic.ut.ee/et/showperiod.php?type=setday&year=\"+str(aasta)+\"&month=\"+str(kuu)+\"&day=\"+str(p\u00e4ev))\n        baidid = vastus.read()\n        tekst = baidid.decode()\n \n        otsitav = \"<SMALL>keskmine</SMALL><BR><B>\"\n        algus = tekst.index(otsitav) # leitakse \u00f5ige koht\n        temp_algus = algus + len(otsitav) # siit algab temperatuur\n        deg = tekst.index(\" &deg;\") # siin l\u00f5peb\n        temp = tekst[temp_algus:deg] # viilutades leitakse temperatuur\n        # funktsioon rjust paneb \u00fchekohalisele p\u00e4eva ja kuu j\u00e4rjenumbrile 0 ette, et oleks kahekohaline. \n        fail.write(str(p\u00e4ev).rjust(2,\"0\")+\".\"+str(kuu).rjust(2,\"0\")+\".\"+str(aasta)+\": \"+str(temp)+\"\\n\")\n \n \nvastus.close()\nfail.close()",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:39:56.027860"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Paste>>",
        "time": "2020-11-14T21:39:56.028862"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:39:56.838332"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T21:39:56.931434"
    },
    {
        "index1": "267.4",
        "index2": "268.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:39:56.941434"
    },
    {
        "index": "267.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:39:56.941434"
    },
    {
        "index1": "268.0",
        "index2": "268.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:39:56.942434"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T21:39:56.942434"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T21:39:57.107434"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:40:01.754262"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:40:09.854101"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:40:10.132230"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:40:10.604388"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:40:12.004202"
    },
    {
        "index": "268.0",
        "text": "\n========================= RESTART =========================\n",
        "tags": "('magic',)",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:40:12.148313"
    },
    {
        "index": "270.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:40:12.336313"
    },
    {
        "index1": "270.4",
        "index2": "271.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:40:12.367314"
    },
    {
        "index": "270.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:40:12.368315"
    },
    {
        "index1": "271.0",
        "index2": "271.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:40:12.368315"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T21:40:12.369314"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T21:40:12.528314"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:40:13.377637"
    },
    {
        "widget_id": 95756336,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:40:15.397992"
    },
    {
        "index": "271.0",
        "text": "\n========================= RESTART =========================\n",
        "tags": "('magic',)",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:40:15.490065"
    },
    {
        "index": "273.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:40:15.659066"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:40:31.695544"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:41:03.843845"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:41:03.845843"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:41:58.727380"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:41:58.728378"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:41:58.729380"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:41:59.514925"
    },
    {
        "index1": "1.0",
        "index2": "25.0",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:42:01.159282"
    },
    {
        "index": "1.0",
        "text": "print(ord(\"A\"))\nprint(ord(\"a\"))\nprint(ord(\"\u00e4\"))\nprint(ord(\"\u00f5\"))\nprint(ord(\" \"))",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:42:01.161282"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Paste>>",
        "time": "2020-11-14T21:42:01.161282"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:42:02.051978"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T21:42:02.150087"
    },
    {
        "index1": "273.4",
        "index2": "274.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:42:02.159086"
    },
    {
        "index": "273.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:42:02.160086"
    },
    {
        "index1": "274.0",
        "index2": "274.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:42:02.160086"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T21:42:02.161087"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T21:42:02.318088"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:42:02.320087"
    },
    {
        "index": "274.0",
        "text": "6",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:42:02.320087"
    },
    {
        "index": "274.1",
        "text": "5\n97\n228\n245\n32\n",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:42:02.320087"
    },
    {
        "index": "279.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:42:02.328087"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:42:24.450196"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:42:25.204509"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:42:25.207512"
    },
    {
        "index1": "1.0",
        "index2": "5.15",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:42:25.993956"
    },
    {
        "index": "1.0",
        "text": "print(chr(65))",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:42:25.995956"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Paste>>",
        "time": "2020-11-14T21:42:25.995956"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:42:28.062509"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T21:42:28.187624"
    },
    {
        "index1": "279.4",
        "index2": "280.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:42:28.196639"
    },
    {
        "index": "279.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:42:28.197637"
    },
    {
        "index1": "280.0",
        "index2": "280.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:42:28.198637"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T21:42:28.198637"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T21:42:28.357638"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:42:28.358637"
    },
    {
        "index": "280.0",
        "text": "A",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:42:28.359638"
    },
    {
        "index": "280.1",
        "text": "\n",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:42:28.359638"
    },
    {
        "index": "281.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:42:28.366638"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:42:59.397390"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:42:59.918712"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:42:59.921714"
    },
    {
        "index1": "1.0",
        "index2": "1.14",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:43:00.838191"
    },
    {
        "index": "1.0",
        "text": "def kodeeri(s\u00fcmbol, nihe):\n     return chr(ord(s\u00fcmbol) + nihe)\n \ndef \u0161ifreeri(failinimi, nihe):\n    f = open(failinimi, \"w\")\n    kiri = input(\"Sisesta lause \")\n    for s\u00fcmbol in kiri:\n        f.write(kodeeri(s\u00fcmbol, nihe))\n    f.close()\n \nfailinimi = input(\"Faili nimi? \")\nnihe = int(input(\"Nihe? \"))\n\u0161ifreeri(failinimi, nihe)",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:43:00.841191"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Paste>>",
        "time": "2020-11-14T21:43:00.841191"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:43:01.578649"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T21:43:01.694747"
    },
    {
        "index1": "281.4",
        "index2": "282.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:43:01.703746"
    },
    {
        "index": "281.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:43:01.704747"
    },
    {
        "index1": "282.0",
        "index2": "282.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:43:01.705748"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T21:43:01.705748"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T21:43:01.863748"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:43:01.865748"
    },
    {
        "index": "282.0",
        "text": "F",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:43:01.865748"
    },
    {
        "index": "282.1",
        "text": "aili nimi? ",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:43:01.866747"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:43:05.769935"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:43:08.717242"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:43:08.719247"
    },
    {
        "widget_id": 46743376,
        "widget_class": "ShellText",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "text_widget_context": "shell",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:43:09.999937"
    },
    {
        "widget_id": 46743376,
        "widget_class": "ShellText",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "text_widget_context": "shell",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:43:10.313075"
    },
    {
        "index": "282.12",
        "text": "a",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:43:10.984571"
    },
    {
        "index": "282.13",
        "text": "d",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:43:11.155707"
    },
    {
        "index": "282.14",
        "text": "m",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:43:11.312797"
    },
    {
        "index": "282.15",
        "text": "e",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:43:12.074466"
    },
    {
        "index": "282.16",
        "text": "d",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:43:12.258557"
    },
    {
        "index": "282.17",
        "text": ".",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:43:12.782960"
    },
    {
        "index": "282.18",
        "text": "t",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:43:13.046144"
    },
    {
        "index": "282.19",
        "text": "x",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:43:13.548628"
    },
    {
        "index": "282.20",
        "text": "t",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:43:13.891821"
    },
    {
        "index": "282.21",
        "text": "\n",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:43:14.333269"
    },
    {
        "input_text": "admed.txt\n",
        "sequence": "ShellInput",
        "time": "2020-11-14T21:43:14.333269"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:43:14.382283"
    },
    {
        "index": "283.0",
        "text": "Nihe? ",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:43:14.383285"
    },
    {
        "index": "283.6",
        "text": "4",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:43:16.450151"
    },
    {
        "index": "283.7",
        "text": "\n",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:43:16.547216"
    },
    {
        "input_text": "4\n",
        "sequence": "ShellInput",
        "time": "2020-11-14T21:43:16.548217"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:43:16.594269"
    },
    {
        "index": "284.0",
        "text": "Sisesta lause ",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:43:16.594269"
    },
    {
        "index": "284.14",
        "text": "4",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:43:17.544114"
    },
    {
        "index1": "284.14",
        "index2": "None",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:43:17.834397"
    },
    {
        "index": "284.14",
        "text": "p",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:43:18.327688"
    },
    {
        "index": "284.15",
        "text": "e",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:43:18.425754"
    },
    {
        "index1": "284.15",
        "index2": "None",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:43:18.735963"
    },
    {
        "index1": "284.14",
        "index2": "None",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:43:18.973164"
    },
    {
        "index": "284.14",
        "text": "p",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:43:19.462340"
    },
    {
        "index": "284.15",
        "text": "e",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:43:19.535367"
    },
    {
        "index": "284.16",
        "text": "t",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:43:19.718532"
    },
    {
        "index": "284.17",
        "text": "s",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:43:19.972753"
    },
    {
        "index": "284.18",
        "text": "\n",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:43:20.094826"
    },
    {
        "input_text": "pets\n",
        "sequence": "ShellInput",
        "time": "2020-11-14T21:43:20.095828"
    },
    {
        "index": "285.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:43:20.125827"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:43:22.531079"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:43:28.832839"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:43:45.028438"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:44:59.742130"
    },
    {
        "widget_id": 91981488,
        "widget_class": "Label",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:45:00.503647"
    },
    {
        "widget_id": 92030928,
        "widget_class": "Label",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:45:01.861585"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:45:01.905587"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:45:39.573948"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:45:40.715707"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:45:45.428689"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:45:45.429688"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:45:45.429688"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:45:48.350791"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:45:50.212023"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:45:50.215021"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:45:50.489022"
    },
    {
        "index1": "1.0",
        "index2": "13.25",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:45:51.242172"
    },
    {
        "index": "1.0",
        "text": "from easygui import *                              # EasyGui kasutamiseks importida\n \nmsgbox(\"Minu esimene graafiline kasutajaliides!!\") # teateaken",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:45:51.243173"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Paste>>",
        "time": "2020-11-14T21:45:51.244171"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:45:51.945452"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T21:45:52.043541"
    },
    {
        "index1": "285.4",
        "index2": "286.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:45:52.052541"
    },
    {
        "index": "285.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:45:52.052541"
    },
    {
        "index1": "286.0",
        "index2": "286.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:45:52.053541"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T21:45:52.054541"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T21:45:52.212541"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:45:52.311541"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:45:58.350805"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:45:58.352805"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:46:00.308449"
    },
    {
        "index": "286.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:46:01.222876"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:46:12.768606"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:46:12.771608"
    },
    {
        "index1": "1.0",
        "index2": "3.62",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:46:13.764774"
    },
    {
        "index": "1.0",
        "text": "from easygui import *\n \nnupud = [\"lihtne\",\"ok\",\"keeruline\"]\nvajutati = buttonbox(\"Programmeerimine on \", choices = nupud)\nmsgbox(\"Te arvate, et programmeerimine on \" + vajutati + \"!\")",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:46:13.766772"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Paste>>",
        "time": "2020-11-14T21:46:13.766772"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:46:14.628329"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T21:46:14.710385"
    },
    {
        "index1": "286.4",
        "index2": "287.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:46:14.722385"
    },
    {
        "index": "286.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:46:14.722385"
    },
    {
        "index1": "287.0",
        "index2": "287.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:46:14.723385"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T21:46:14.724385"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T21:46:14.883384"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:46:14.984384"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:46:17.525071"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:46:17.611069"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:46:19.727609"
    },
    {
        "index": "287.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:46:19.766625"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:46:21.824701"
    },
    {
        "index1": "287.4",
        "index2": "288.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:46:21.914700"
    },
    {
        "index": "287.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:46:21.915701"
    },
    {
        "index1": "288.0",
        "index2": "288.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:46:21.916701"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T21:46:21.916701"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T21:46:22.074702"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:46:22.172702"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:46:22.871087"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:46:22.955088"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:46:23.659718"
    },
    {
        "index": "288.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:46:23.722772"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:46:24.555917"
    },
    {
        "index1": "288.4",
        "index2": "289.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:46:24.635002"
    },
    {
        "index": "288.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:46:24.636001"
    },
    {
        "index1": "289.0",
        "index2": "289.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:46:24.636001"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T21:46:24.637003"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T21:46:24.793003"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:46:24.891004"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:46:25.513485"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:46:25.596484"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:46:26.465089"
    },
    {
        "index": "289.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:46:26.516115"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:47:02.902142"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:47:03.827671"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:47:03.830672"
    },
    {
        "index1": "1.0",
        "index2": "6.0",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:47:04.467128"
    },
    {
        "index": "1.0",
        "text": "from easygui import *\n \nvariandid = [\"minu lemmik\",\"lihtne\",\"ok\",\"keeruline\"]\nvajutati = choicebox(\"Programmeerimine on \", choices = variandid)\nif vajutati == None:\n    msgbox(\"Te ei valinud midagi!\")\nelif vajutati == \"minu lemmik\":\n    msgbox(\"Programmeerimine on teie lemmik! Muidugi nii peakski olema!\")\nelse:\n    msgbox(\"Te arvate, et programmeerimine on \" + vajutati + \", hmm, v\u00e4ga huvitav!\")",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:47:04.469129"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Paste>>",
        "time": "2020-11-14T21:47:04.470128"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:47:05.390844"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T21:47:05.505953"
    },
    {
        "index1": "289.4",
        "index2": "290.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:47:05.517970"
    },
    {
        "index": "289.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:47:05.517970"
    },
    {
        "index1": "290.0",
        "index2": "290.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:47:05.518968"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T21:47:05.518968"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T21:47:05.676970"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:47:05.777969"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:47:05.840968"
    },
    {
        "index": "290.0",
        "text": "[",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:47:05.840968"
    },
    {
        "index": "290.1",
        "text": "0]\n",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:47:05.841971"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:47:09.206547"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:47:09.211548"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:47:09.295548"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:47:10.969823"
    },
    {
        "index": "291.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:47:11.005834"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:47:12.934368"
    },
    {
        "index1": "291.4",
        "index2": "292.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:47:13.030471"
    },
    {
        "index": "291.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:47:13.030471"
    },
    {
        "index1": "292.0",
        "index2": "292.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:47:13.031471"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T21:47:13.032475"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T21:47:13.188471"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:47:13.287469"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:47:13.341471"
    },
    {
        "index": "292.0",
        "text": "[",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:47:13.341471"
    },
    {
        "index": "292.1",
        "text": "0]\n",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:47:13.342469"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:47:14.604174"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:47:14.610174"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:47:14.688175"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:47:16.875879"
    },
    {
        "index": "293.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:47:16.893876"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:47:17.550879"
    },
    {
        "index1": "293.4",
        "index2": "294.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:47:17.663876"
    },
    {
        "index": "293.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:47:17.664876"
    },
    {
        "index1": "294.0",
        "index2": "294.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:47:17.665876"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T21:47:17.665876"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T21:47:17.825876"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:47:17.929877"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:47:17.995876"
    },
    {
        "index": "294.0",
        "text": "[",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:47:17.995876"
    },
    {
        "index": "294.1",
        "text": "0]\n",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:47:17.996877"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:47:19.171347"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:47:19.178347"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:47:19.255347"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:47:21.018723"
    },
    {
        "index": "295.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:47:21.061733"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:47:21.873733"
    },
    {
        "index1": "295.4",
        "index2": "296.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:47:21.960733"
    },
    {
        "index": "295.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:47:21.961734"
    },
    {
        "index1": "296.0",
        "index2": "296.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:47:21.961734"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T21:47:21.962735"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T21:47:22.123734"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:47:22.221734"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:47:22.242734"
    },
    {
        "index": "296.0",
        "text": "[",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:47:22.243734"
    },
    {
        "index": "296.1",
        "text": "0]\n",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:47:22.243734"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:47:23.559445"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:47:23.565445"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:47:23.642446"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:47:25.121444"
    },
    {
        "index": "297.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:47:25.187459"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:47:37.924220"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:47:38.538640"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:47:38.541640"
    },
    {
        "index1": "1.0",
        "index2": "11.0",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:47:39.965682"
    },
    {
        "index": "1.0",
        "text": "from easygui import *\n \nnimi = enterbox(\"Tere, kuidas on teie nimi?\")\nvanus = integerbox(\"Kui vana te olete?\", lowerbound = 1, upperbound = 120)\nif nimi == None or vanus == None or nimi == \"\":\n    msgbox(\"Palun sisestage andmed korrektselt!\")\nelse:\n    msgbox(\"Tere, \" + str(vanus)  + \"-aastane \" + nimi + \"!\")",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:47:39.967683"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Paste>>",
        "time": "2020-11-14T21:47:39.967683"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:47:40.733319"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T21:47:40.833404"
    },
    {
        "index1": "297.4",
        "index2": "298.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:47:40.843403"
    },
    {
        "index": "297.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:47:40.843403"
    },
    {
        "index1": "298.0",
        "index2": "298.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:47:40.844403"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T21:47:40.844403"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T21:47:41.006405"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:47:41.108404"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:47:43.884553"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:47:43.963554"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:47:46.448666"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:47:46.536663"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:47:48.205042"
    },
    {
        "index": "298.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:47:48.266055"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:47:56.928283"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:48:07.750675"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:48:07.751675"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:51:27.595913"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:51:27.597910"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:51:27.597910"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:51:28.927904"
    },
    {
        "index1": "1.0",
        "index2": "9.0",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:51:29.804739"
    },
    {
        "index": "1.0",
        "text": "from easygui import *\n \nnimi = enterbox(\"Palun sisesta oma nimi: \")\nvanus = integerbox(\"Palun sisesta oma vanus: \", lowerbound = 1, upperbound = 120)\naadress = enterbox(\"Palun sisesta oma aadress: \")\n \nfailinimi = filesavebox()\n \nf = open(failinimi, \"w\")\nf.write(nimi + \"\\n\")\nf.write(str(vanus) + \"\\n\")\nf.write(aadress + \"\\n\")\nf.close()",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:51:29.807738"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Paste>>",
        "time": "2020-11-14T21:51:29.807738"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:51:30.837425"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T21:51:30.926514"
    },
    {
        "index1": "298.4",
        "index2": "299.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:51:30.936514"
    },
    {
        "index": "298.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:51:30.937514"
    },
    {
        "index1": "299.0",
        "index2": "299.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:51:30.938515"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T21:51:30.938515"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T21:51:31.098514"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:51:31.197514"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:51:33.392277"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:51:33.471280"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:51:34.744209"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:51:34.826213"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:51:37.064850"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:51:37.145851"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:51:39.143270"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:51:39.224272"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:51:41.818395"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:51:42.155395"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:51:45.918605"
    },
    {
        "index": "299.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:51:45.928605"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:51:51.206555"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:51:56.889503"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:51:56.892503"
    },
    {
        "index1": "1.0",
        "index2": "13.9",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:51:58.128126"
    },
    {
        "index": "1.0",
        "text": "from easygui import *\n \nfailinimi = fileopenbox()\n \nf = open(failinimi)\n \nnimi = f.readline().strip()\nvanus = f.readline().strip()\naadress = f.readline().strip()\n \nf.close()\n \ntekst = \"Nimi: \" + nimi + \"\\n\"+ \"Vanus: \" + vanus + \" aastat\\n\" + \"Aadress: \" + aadress\n \nmsgbox(tekst)",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:51:58.131127"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Paste>>",
        "time": "2020-11-14T21:51:58.131127"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:51:59.394103"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T21:51:59.472194"
    },
    {
        "index1": "299.4",
        "index2": "300.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:51:59.481194"
    },
    {
        "index": "299.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:51:59.481194"
    },
    {
        "index1": "300.0",
        "index2": "300.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:51:59.482195"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T21:51:59.482195"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T21:51:59.641195"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:51:59.753194"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:52:03.153362"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:52:03.238361"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:52:08.631962"
    },
    {
        "index": "300.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:52:08.641962"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:52:10.122978"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:53:18.388933"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:53:18.391931"
    },
    {
        "index1": "1.0",
        "index2": "15.13",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:53:19.570518"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:53:21.177494"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:54:03.384371"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:54:03.385373"
    },
    {
        "index": "1.0",
        "text": "from datetime import datetime\nkuup\u00e4ev_kellaeg = datetime.today()\nprint(\"Kuup\u00e4ev ja kellaeg: \" + str(kuup\u00e4ev_kellaeg))",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:54:04.477420"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Paste>>",
        "time": "2020-11-14T21:54:04.477420"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:54:08.183619"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:54:15.866949"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:54:15.867953"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:54:34.262071"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:54:34.263072"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:54:34.263072"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:54:50.279599"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:55:11.154806"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:55:11.157808"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:55:13.146181"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T21:55:13.278288"
    },
    {
        "index1": "300.4",
        "index2": "301.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:55:13.288288"
    },
    {
        "index": "300.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:55:13.288288"
    },
    {
        "index1": "301.0",
        "index2": "301.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:55:13.289290"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T21:55:13.290289"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T21:55:13.450291"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:55:13.507318"
    },
    {
        "index": "301.0",
        "text": "K",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:55:13.508321"
    },
    {
        "index": "301.1",
        "text": "uup\u00e4ev ja kellaeg: 2020-11-14 21:55:13.452291\n",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:55:13.508321"
    },
    {
        "index": "302.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:55:13.516319"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:55:15.661379"
    },
    {
        "index": "3.52",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:55:17.032619"
    },
    {
        "index": "4.0",
        "text": "",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:55:17.033623"
    },
    {
        "index": "4.0",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:55:17.221830"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:55:19.503772"
    },
    {
        "index": "1.0",
        "text": "#",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:55:20.804392"
    },
    {
        "index": "2.0",
        "text": "#",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:55:20.806392"
    },
    {
        "index": "3.0",
        "text": "#",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:55:20.807392"
    },
    {
        "index1": "1.0",
        "index2": "1.1",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:55:22.473689"
    },
    {
        "index1": "2.0",
        "index2": "2.1",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:55:22.474693"
    },
    {
        "index1": "3.0",
        "index2": "3.1",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:55:22.475690"
    },
    {
        "index": "1.0",
        "text": "#",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:55:22.941979"
    },
    {
        "index": "2.0",
        "text": "#",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:55:22.943980"
    },
    {
        "index": "3.0",
        "text": "#",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:55:22.945977"
    },
    {
        "index1": "1.0",
        "index2": "1.1",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:55:23.830690"
    },
    {
        "index1": "2.0",
        "index2": "2.1",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:55:23.831692"
    },
    {
        "index1": "3.0",
        "index2": "3.1",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:55:23.833692"
    },
    {
        "index": "1.0",
        "text": "#",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:55:24.069846"
    },
    {
        "index": "2.0",
        "text": "#",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:55:24.071849"
    },
    {
        "index": "3.0",
        "text": "#",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:55:24.072848"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:55:24.281035"
    },
    {
        "index": "5.0",
        "text": "f",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:55:29.207548"
    },
    {
        "index": "5.1",
        "text": "f",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:55:29.283597"
    },
    {
        "index": "5.2",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:55:29.543848"
    },
    {
        "index": "5.3",
        "text": "=",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:55:29.641949"
    },
    {
        "index": "5.4",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:55:29.746023"
    },
    {
        "index1": "5.4",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:55:30.076240"
    },
    {
        "index1": "5.3",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:55:30.254293"
    },
    {
        "index1": "5.2",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:55:30.413426"
    },
    {
        "index1": "5.1",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:55:30.588551"
    },
    {
        "index": "5.1",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:55:31.127958"
    },
    {
        "index": "5.2",
        "text": "=",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:55:31.241049"
    },
    {
        "index": "5.3",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:55:31.324124"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:55:32.732908"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:55:34.640045"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:55:34.642045"
    },
    {
        "index": "5.4",
        "text": "o",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:55:35.688972"
    },
    {
        "index": "5.5",
        "text": "p",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:55:35.858012"
    },
    {
        "index": "5.6",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:55:35.986128"
    },
    {
        "index": "5.7",
        "text": "n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:55:36.164279"
    },
    {
        "index": "5.8",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:55:36.388472"
    },
    {
        "index1": "5.8",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:55:36.752688"
    },
    {
        "index": "5.8",
        "text": ")",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:55:37.191134"
    },
    {
        "index1": "5.8",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:55:37.527431"
    },
    {
        "index": "5.8",
        "text": "(",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:55:37.730566"
    },
    {
        "index": "5.9",
        "text": ")",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:55:37.925745"
    },
    {
        "widget_id": 46743376,
        "widget_class": "ShellText",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "text_widget_context": "shell",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:55:59.118186"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:56:00.618681"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:56:01.146985"
    },
    {
        "index": "5.9",
        "text": "\"",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:03.371934"
    },
    {
        "index": "5.10",
        "text": "\"",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:03.522036"
    },
    {
        "index": "5.10",
        "text": "p",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:07.578792"
    },
    {
        "index": "5.11",
        "text": "a",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:07.669842"
    },
    {
        "index": "5.12",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:07.860006"
    },
    {
        "index1": "5.12",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:56:08.436454"
    },
    {
        "index": "5.12",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:08.990858"
    },
    {
        "index": "5.13",
        "text": "v",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:09.248083"
    },
    {
        "index": "5.14",
        "text": "i",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:09.426231"
    },
    {
        "index": "5.15",
        "text": "k",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:09.597394"
    },
    {
        "index": "5.16",
        "text": ".",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:09.823632"
    },
    {
        "index": "5.17",
        "text": "r",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:10.020723"
    },
    {
        "index1": "5.17",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:56:10.224935"
    },
    {
        "index": "5.17",
        "text": "t",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:10.341060"
    },
    {
        "index": "5.18",
        "text": "x",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:10.691300"
    },
    {
        "index": "5.19",
        "text": "r",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:11.012553"
    },
    {
        "index": "5.20",
        "text": "t",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:11.024553"
    },
    {
        "index1": "5.20",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:56:11.558077"
    },
    {
        "index1": "5.19",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:56:11.738255"
    },
    {
        "index": "5.19",
        "text": "t",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:11.891411"
    },
    {
        "index": "5.21",
        "text": ".",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:13.954294"
    },
    {
        "index": "5.22",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:14.170542"
    },
    {
        "index": "5.23",
        "text": "'",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:15.059756"
    },
    {
        "index": "5.24",
        "text": "a",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:15.561782"
    },
    {
        "index": "5.25",
        "text": "'",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:15.908063"
    },
    {
        "index": "5.26",
        "text": ".",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:17.296385"
    },
    {
        "index": "5.27",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:17.976995"
    },
    {
        "index1": "5.27",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:56:18.674549"
    },
    {
        "index1": "5.26",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:56:18.873715"
    },
    {
        "index1": "5.25",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:56:19.180890"
    },
    {
        "index1": "5.24",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:56:19.364020"
    },
    {
        "index1": "5.23",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:56:19.527176"
    },
    {
        "index1": "5.22",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:56:19.688304"
    },
    {
        "index": "5.22",
        "text": ",",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:20.429957"
    },
    {
        "index1": "5.22",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:56:20.991257"
    },
    {
        "index1": "5.21",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:56:21.183449"
    },
    {
        "index": "5.21",
        "text": ",",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:21.962171"
    },
    {
        "index": "5.22",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:22.048222"
    },
    {
        "index": "5.23",
        "text": "'",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:22.473578"
    },
    {
        "index": "5.24",
        "text": "a",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:22.740786"
    },
    {
        "index": "5.25",
        "text": "'",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:23.006095"
    },
    {
        "index": "5.26",
        "text": ",",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:23.990977"
    },
    {
        "index": "5.27",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:24.079001"
    },
    {
        "index": "5.28",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:26.011603"
    },
    {
        "index": "5.29",
        "text": "n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:26.177704"
    },
    {
        "index": "5.30",
        "text": "c",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:26.560968"
    },
    {
        "index": "5.31",
        "text": "o",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:26.741113"
    },
    {
        "index": "5.32",
        "text": "d",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:27.069409"
    },
    {
        "index": "5.33",
        "text": "i",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:27.185510"
    },
    {
        "index": "5.34",
        "text": "n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:27.421632"
    },
    {
        "index": "5.35",
        "text": "g",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:27.528738"
    },
    {
        "index": "5.36",
        "text": "=",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:28.276407"
    },
    {
        "index": "5.37",
        "text": "'",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:30.904380"
    },
    {
        "index": "5.38",
        "text": "U",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:31.443652"
    },
    {
        "index": "5.39",
        "text": "T",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:31.700884"
    },
    {
        "index": "5.40",
        "text": "F",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:32.262349"
    },
    {
        "index": "5.41",
        "text": "-",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:32.785832"
    },
    {
        "index": "5.42",
        "text": "8",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:33.603493"
    },
    {
        "index": "5.43",
        "text": "'",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:35.405078"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:56:39.290920"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:56:39.821178"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:56:40.070304"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:56:43.126319"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:56:43.128320"
    },
    {
        "index": "5.45",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:45.278848"
    },
    {
        "index": "6.0",
        "text": "",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:45.280849"
    },
    {
        "index": "6.0",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:45.937417"
    },
    {
        "index": "7.0",
        "text": "p",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:46.241672"
    },
    {
        "index": "7.1",
        "text": "r",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:46.431764"
    },
    {
        "index": "7.2",
        "text": "i",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:46.587958"
    },
    {
        "index": "7.3",
        "text": "n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:46.786175"
    },
    {
        "index": "7.4",
        "text": "t",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:46.896289"
    },
    {
        "index": "7.5",
        "text": "(",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:48.728735"
    },
    {
        "index": "7.6",
        "text": "F",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:49.090029"
    },
    {
        "index1": "7.6",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:56:49.742693"
    },
    {
        "index": "7.6",
        "text": "f",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:49.858780"
    },
    {
        "index": "7.7",
        "text": ")",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:56:50.172011"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:56:51.569821"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T21:56:51.649874"
    },
    {
        "index1": "302.4",
        "index2": "303.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:56:51.664874"
    },
    {
        "index": "302.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:56:51.664874"
    },
    {
        "index1": "303.0",
        "index2": "303.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:56:51.665873"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T21:56:51.666874"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T21:56:51.823874"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:56:51.825873"
    },
    {
        "index": "303.0",
        "text": "<",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:56:51.825873"
    },
    {
        "index": "303.1",
        "text": "_io.TextIOWrapper name='paevik.txt' mode='a' encoding='UTF-8'>\n",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:56:51.826873"
    },
    {
        "index": "304.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:56:51.833877"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:57:06.759527"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:57:15.748434"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:57:15.751432"
    },
    {
        "index": "6.0",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:57:16.625200"
    },
    {
        "index": "7.0",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:57:16.769351"
    },
    {
        "index1": "6.0",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:57:22.167823"
    },
    {
        "index": "6.0",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:57:22.542173"
    },
    {
        "index": "7.0",
        "text": "f",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:57:23.255863"
    },
    {
        "index": "7.1",
        "text": ".",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:57:24.055549"
    },
    {
        "index": "7.2",
        "text": "w",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:57:24.171707"
    },
    {
        "index": "7.3",
        "text": "r",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:57:24.490019"
    },
    {
        "index": "7.4",
        "text": "i",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:57:24.659171"
    },
    {
        "index": "7.5",
        "text": "t",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:57:24.928395"
    },
    {
        "index": "7.6",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:57:24.986435"
    },
    {
        "index": "7.7",
        "text": "(",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:57:25.810172"
    },
    {
        "index": "7.8",
        "text": ")",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:57:26.475728"
    },
    {
        "index": "7.8",
        "text": "k",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:57:28.288280"
    },
    {
        "index": "7.9",
        "text": "u",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:57:28.625597"
    },
    {
        "index": "7.10",
        "text": "u",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:57:28.776769"
    },
    {
        "index": "7.11",
        "text": "p",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:57:30.856344"
    },
    {
        "index": "7.12",
        "text": "\u00e4",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:57:33.690626"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:57:37.279899"
    },
    {
        "index1": "2.0",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:57:38.394812"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:57:39.778114"
    },
    {
        "index": "7.13",
        "text": "ev_kellaeg",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:57:40.143424"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:58:07.213106"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:58:07.635526"
    },
    {
        "index1": "7.2",
        "index2": "7.7",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:58:08.535145"
    },
    {
        "index": "7.2",
        "text": "a",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:08.537145"
    },
    {
        "index": "7.3",
        "text": "p",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:08.719333"
    },
    {
        "index": "7.4",
        "text": "p",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:08.851422"
    },
    {
        "index": "7.5",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:08.949509"
    },
    {
        "index": "7.6",
        "text": "n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:09.126600"
    },
    {
        "index": "7.7",
        "text": "d",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:09.688032"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:58:10.363516"
    },
    {
        "index": "7.25",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:10.999024"
    },
    {
        "index": "8.0",
        "text": "",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:11.001024"
    },
    {
        "index": "8.0",
        "text": "f",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:11.806688"
    },
    {
        "index": "8.1",
        "text": ".",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:14.080516"
    },
    {
        "index": "8.2",
        "text": "a",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:15.593785"
    },
    {
        "index": "8.3",
        "text": "p",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:15.789992"
    },
    {
        "index": "8.4",
        "text": "p",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:15.916104"
    },
    {
        "index": "8.5",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:16.019182"
    },
    {
        "index": "8.6",
        "text": "n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:16.189281"
    },
    {
        "index": "8.7",
        "text": "m",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:16.201286"
    },
    {
        "index": "8.8",
        "text": "d",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:16.264307"
    },
    {
        "index1": "8.8",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:58:16.586611"
    },
    {
        "index1": "8.7",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:58:16.763779"
    },
    {
        "index": "8.7",
        "text": "d",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:17.630536"
    },
    {
        "index": "8.8",
        "text": "(",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:18.489384"
    },
    {
        "index": "8.9",
        "text": "k",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:19.858532"
    },
    {
        "index": "8.10",
        "text": "i",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:20.027665"
    },
    {
        "index": "8.11",
        "text": "r",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:20.158735"
    },
    {
        "index": "8.12",
        "text": "j",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:20.298872"
    },
    {
        "index": "8.13",
        "text": "u",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:20.480074"
    },
    {
        "index": "8.14",
        "text": "t",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:20.707305"
    },
    {
        "index": "8.15",
        "text": "a",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:20.782372"
    },
    {
        "index": "8.16",
        "text": "t",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:20.924524"
    },
    {
        "index": "8.17",
        "text": "u",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:21.230710"
    },
    {
        "index": "8.18",
        "text": ")",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:22.355567"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:58:23.740209"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:58:27.437941"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:58:27.439940"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:58:27.975359"
    },
    {
        "index": "4.0",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:31.122785"
    },
    {
        "index": "5.0",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:31.261824"
    },
    {
        "index": "5.0",
        "text": "k",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:32.934119"
    },
    {
        "index": "5.1",
        "text": "i",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:33.188360"
    },
    {
        "index": "5.2",
        "text": "r",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:33.500600"
    },
    {
        "index": "5.3",
        "text": "j",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:33.681783"
    },
    {
        "index": "5.4",
        "text": "u",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:33.843933"
    },
    {
        "index": "5.5",
        "text": "t",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:34.230298"
    },
    {
        "index": "5.6",
        "text": "a",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:34.386398"
    },
    {
        "index": "5.7",
        "text": "t",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:34.469450"
    },
    {
        "index": "5.8",
        "text": "u",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:34.704695"
    },
    {
        "index": "5.9",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:35.844570"
    },
    {
        "index": "5.10",
        "text": "=",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:35.987669"
    },
    {
        "index": "5.11",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:36.049707"
    },
    {
        "index": "5.12",
        "text": "i",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:42.406226"
    },
    {
        "index": "5.13",
        "text": "n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:42.651453"
    },
    {
        "index": "5.14",
        "text": "p",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:43.016607"
    },
    {
        "index": "5.15",
        "text": "u",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:43.301855"
    },
    {
        "index": "5.16",
        "text": "t",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:43.518047"
    },
    {
        "index": "5.17",
        "text": "(",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:43.944381"
    },
    {
        "index": "5.18",
        "text": ")",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:44.520866"
    },
    {
        "index": "5.18",
        "text": "'",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:45.912184"
    },
    {
        "index": "5.19",
        "text": "'",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:46.037283"
    },
    {
        "index": "5.19",
        "text": "S",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:48.117227"
    },
    {
        "index": "5.20",
        "text": "i",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:49.116130"
    },
    {
        "index": "5.21",
        "text": "s",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:49.348331"
    },
    {
        "index": "5.22",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:50.102976"
    },
    {
        "index": "5.23",
        "text": "s",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:50.348182"
    },
    {
        "index": "5.24",
        "text": "t",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:50.966750"
    },
    {
        "index": "5.25",
        "text": "a",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:51.048808"
    },
    {
        "index": "5.26",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:51.180910"
    },
    {
        "index": "5.27",
        "text": "s",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:51.543110"
    },
    {
        "index": "5.28",
        "text": "i",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:52.078497"
    },
    {
        "index": "5.29",
        "text": "s",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:52.209593"
    },
    {
        "index": "5.30",
        "text": "s",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:52.363736"
    },
    {
        "index": "5.31",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:52.608919"
    },
    {
        "index": "5.32",
        "text": "k",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:52.939195"
    },
    {
        "index": "5.33",
        "text": "a",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:53.059241"
    },
    {
        "index": "5.34",
        "text": "n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:53.344353"
    },
    {
        "index": "5.35",
        "text": "d",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:53.432433"
    },
    {
        "index": "5.36",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:53.586531"
    },
    {
        "index": "5.37",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:55.368140"
    },
    {
        "index": "5.38",
        "text": "t",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:56.100696"
    },
    {
        "index": "5.39",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:56.220796"
    },
    {
        "index": "5.40",
        "text": "k",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:56.622133"
    },
    {
        "index": "5.41",
        "text": "s",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:56.842333"
    },
    {
        "index": "5.42",
        "text": "t",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:56.967413"
    },
    {
        "index": "5.43",
        "text": "r",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:58:56.981416"
    },
    {
        "index1": "5.43",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:58:58.101500"
    },
    {
        "index": "5.43",
        "text": ":",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:59:00.037925"
    },
    {
        "index": "5.44",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:59:00.301109"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:59:01.774261"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T21:59:01.863341"
    },
    {
        "index1": "304.4",
        "index2": "305.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:01.872341"
    },
    {
        "index": "304.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:01.872341"
    },
    {
        "index1": "305.0",
        "index2": "305.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:01.873341"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T21:59:01.874342"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T21:59:02.032344"
    },
    {
        "view_id": "AssistantView",
        "view_class": "AssistantView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:59:02.113342"
    },
    {
        "index": "305.0",
        "text": "Traceback (most recent call last):\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:02.123342"
    },
    {
        "index": "306.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_64321072')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:02.123342"
    },
    {
        "index": "306.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1171, in wrapper",
        "tags": "('io', 'stderr', 'frame_64321072', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:02.124342"
    },
    {
        "index": "306.113",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_64321072')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:02.124342"
    },
    {
        "index": "307.0",
        "text": "    result = method(self, *args, **kwargs)\n",
        "tags": "('io', 'stderr', 'frame_64321072')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:02.124342"
    },
    {
        "index": "308.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_64320688')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:02.125342"
    },
    {
        "index": "308.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1158, in wrapper",
        "tags": "('io', 'stderr', 'frame_64320688', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:02.125342"
    },
    {
        "index": "308.113",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_64320688')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:02.125342"
    },
    {
        "index": "309.0",
        "text": "    return method(self, *args, **kwargs)\n",
        "tags": "('io', 'stderr', 'frame_64320688')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:02.126342"
    },
    {
        "index": "310.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_69036240')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:02.126342"
    },
    {
        "index": "310.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1232, in _execute_prepared_user_code",
        "tags": "('io', 'stderr', 'frame_69036240', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:02.126342"
    },
    {
        "index": "310.133",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_69036240')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:02.126342"
    },
    {
        "index": "311.0",
        "text": "    exec(statements, global_vars)\n",
        "tags": "('io', 'stderr', 'frame_69036240')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:02.127342"
    },
    {
        "index": "312.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_69049840')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:02.127342"
    },
    {
        "index": "312.2",
        "text": "File \"C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py\", line 2, in <module>",
        "tags": "('io', 'stderr', 'frame_69049840', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:02.127342"
    },
    {
        "index": "312.75",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_69049840')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:02.128343"
    },
    {
        "index": "313.0",
        "text": "    kuup\u00e4ev_kellaeg = datetime.today()\n",
        "tags": "('io', 'stderr', 'frame_69049840')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:02.128343"
    },
    {
        "index": "314.0",
        "text": "NameError: name 'datetime' is not defined\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:02.128343"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:59:02.129343"
    },
    {
        "index": "315.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:02.130341"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:59:04.441328"
    },
    {
        "index1": "1.0",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:59:05.033726"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:59:05.653274"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:59:09.034338"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T21:59:09.143458"
    },
    {
        "index1": "315.4",
        "index2": "316.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:09.153471"
    },
    {
        "index": "315.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:09.153471"
    },
    {
        "index1": "316.0",
        "index2": "316.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:09.154473"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T21:59:09.155473"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T21:59:09.311471"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:59:09.368471"
    },
    {
        "index": "316.0",
        "text": "S",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:09.369473"
    },
    {
        "index": "316.1",
        "text": "isesta sissekande tekst: ",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:09.369473"
    },
    {
        "index": "316.26",
        "text": "t",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:10.939760"
    },
    {
        "index": "316.27",
        "text": "e",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:11.048850"
    },
    {
        "index": "316.28",
        "text": "r",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:11.181939"
    },
    {
        "index": "316.29",
        "text": "e",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:11.334058"
    },
    {
        "index": "316.30",
        "text": "\n",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:11.643295"
    },
    {
        "input_text": "tere\n",
        "sequence": "ShellInput",
        "time": "2020-11-14T21:59:11.644296"
    },
    {
        "view_id": "AssistantView",
        "view_class": "AssistantView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:59:11.716335"
    },
    {
        "index": "317.0",
        "text": "Traceback (most recent call last):\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:11.727339"
    },
    {
        "index": "318.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_52655664')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:11.727339"
    },
    {
        "index": "318.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1171, in wrapper",
        "tags": "('io', 'stderr', 'frame_52655664', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:11.728336"
    },
    {
        "index": "318.113",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_52655664')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:11.728336"
    },
    {
        "index": "319.0",
        "text": "    result = method(self, *args, **kwargs)\n",
        "tags": "('io', 'stderr', 'frame_52655664')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:11.728336"
    },
    {
        "index": "320.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_52655280')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:11.729336"
    },
    {
        "index": "320.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1158, in wrapper",
        "tags": "('io', 'stderr', 'frame_52655280', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:11.729336"
    },
    {
        "index": "320.113",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_52655280')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:11.729336"
    },
    {
        "index": "321.0",
        "text": "    return method(self, *args, **kwargs)\n",
        "tags": "('io', 'stderr', 'frame_52655280')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:11.729336"
    },
    {
        "index": "322.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_57297104')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:11.730336"
    },
    {
        "index": "322.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1232, in _execute_prepared_user_code",
        "tags": "('io', 'stderr', 'frame_57297104', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:11.730336"
    },
    {
        "index": "322.133",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_57297104')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:11.730336"
    },
    {
        "index": "323.0",
        "text": "    exec(statements, global_vars)\n",
        "tags": "('io', 'stderr', 'frame_57297104')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:11.731336"
    },
    {
        "index": "324.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_57314800')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:11.731336"
    },
    {
        "index": "324.2",
        "text": "File \"C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py\", line 9, in <module>",
        "tags": "('io', 'stderr', 'frame_57314800', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:11.731336"
    },
    {
        "index": "324.75",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_57314800')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:11.732336"
    },
    {
        "index": "325.0",
        "text": "    f.append(kuup\u00e4ev_kellaeg)\n",
        "tags": "('io', 'stderr', 'frame_57314800')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:11.732336"
    },
    {
        "index": "326.0",
        "text": "AttributeError: '_io.TextIOWrapper' object has no attribute 'append'\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:11.732336"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:59:11.732336"
    },
    {
        "index": "327.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:11.734335"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:59:14.494026"
    },
    {
        "index1": "9.2",
        "index2": "9.8",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:59:16.119316"
    },
    {
        "index": "9.2",
        "text": "w",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:59:16.121317"
    },
    {
        "index": "9.3",
        "text": "r",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:59:16.690781"
    },
    {
        "index": "9.4",
        "text": "i",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:59:16.798844"
    },
    {
        "index": "9.5",
        "text": "t",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:59:17.093051"
    },
    {
        "index": "9.6",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:59:17.224130"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:59:18.865543"
    },
    {
        "index1": "10.2",
        "index2": "10.8",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:59:19.811023"
    },
    {
        "index": "10.2",
        "text": "w",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:59:19.812025"
    },
    {
        "index": "10.3",
        "text": "r",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:59:20.119229"
    },
    {
        "index": "10.4",
        "text": "i",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:59:20.392482"
    },
    {
        "index": "10.5",
        "text": "t",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:59:20.655709"
    },
    {
        "index": "10.6",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:59:20.781800"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:59:24.248740"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T21:59:24.361834"
    },
    {
        "index1": "327.4",
        "index2": "328.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:24.370835"
    },
    {
        "index": "327.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:24.371836"
    },
    {
        "index1": "328.0",
        "index2": "328.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:24.371836"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T21:59:24.372835"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T21:59:24.529834"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:59:24.587834"
    },
    {
        "index": "328.0",
        "text": "S",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:24.588834"
    },
    {
        "index": "328.1",
        "text": "isesta sissekande tekst: ",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:24.588834"
    },
    {
        "index": "328.26",
        "text": "t",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:28.539345"
    },
    {
        "index": "328.27",
        "text": "e",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:28.659394"
    },
    {
        "index": "328.28",
        "text": "r",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:28.766423"
    },
    {
        "index": "328.29",
        "text": "e",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:28.928511"
    },
    {
        "index": "328.30",
        "text": "\n",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:29.256756"
    },
    {
        "input_text": "tere\n",
        "sequence": "ShellInput",
        "time": "2020-11-14T21:59:29.256756"
    },
    {
        "view_id": "AssistantView",
        "view_class": "AssistantView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:59:29.280755"
    },
    {
        "index": "329.0",
        "text": "Traceback (most recent call last):\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:29.291756"
    },
    {
        "index": "330.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_59012656')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:29.291756"
    },
    {
        "index": "330.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1171, in wrapper",
        "tags": "('io', 'stderr', 'frame_59012656', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:29.291756"
    },
    {
        "index": "330.113",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_59012656')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:29.292756"
    },
    {
        "index": "331.0",
        "text": "    result = method(self, *args, **kwargs)\n",
        "tags": "('io', 'stderr', 'frame_59012656')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:29.292756"
    },
    {
        "index": "332.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_59012272')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:29.293756"
    },
    {
        "index": "332.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1158, in wrapper",
        "tags": "('io', 'stderr', 'frame_59012272', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:29.293756"
    },
    {
        "index": "332.113",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_59012272')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:29.293756"
    },
    {
        "index": "333.0",
        "text": "    return method(self, *args, **kwargs)\n",
        "tags": "('io', 'stderr', 'frame_59012272')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:29.293756"
    },
    {
        "index": "334.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_64186576')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:29.294756"
    },
    {
        "index": "334.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1232, in _execute_prepared_user_code",
        "tags": "('io', 'stderr', 'frame_64186576', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:29.294756"
    },
    {
        "index": "334.133",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_64186576')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:29.294756"
    },
    {
        "index": "335.0",
        "text": "    exec(statements, global_vars)\n",
        "tags": "('io', 'stderr', 'frame_64186576')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:29.295756"
    },
    {
        "index": "336.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_64196080')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:29.295756"
    },
    {
        "index": "336.2",
        "text": "File \"C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py\", line 9, in <module>",
        "tags": "('io', 'stderr', 'frame_64196080', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:29.295756"
    },
    {
        "index": "336.75",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_64196080')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:29.296756"
    },
    {
        "index": "337.0",
        "text": "    f.write(kuup\u00e4ev_kellaeg)\n",
        "tags": "('io', 'stderr', 'frame_64196080')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:29.296756"
    },
    {
        "index": "338.0",
        "text": "TypeError: write() argument must be str, not datetime.datetime\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:29.296756"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:59:29.296756"
    },
    {
        "index": "339.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:29.298756"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:59:34.524180"
    },
    {
        "index": "10.8",
        "text": "s",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:59:35.633157"
    },
    {
        "index": "10.9",
        "text": "t",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:59:35.753231"
    },
    {
        "index": "10.10",
        "text": "r",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:59:35.904320"
    },
    {
        "index": "10.11",
        "text": "(",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:59:36.378686"
    },
    {
        "index1": "10.11",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:59:37.655911"
    },
    {
        "index1": "10.10",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:59:37.872107"
    },
    {
        "index1": "10.9",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:59:38.108201"
    },
    {
        "index1": "10.8",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T21:59:38.479492"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:59:39.156034"
    },
    {
        "index": "9.8",
        "text": "s",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:59:40.026834"
    },
    {
        "index": "9.9",
        "text": "t",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:59:40.281009"
    },
    {
        "index": "9.10",
        "text": "r",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:59:40.474162"
    },
    {
        "index": "9.11",
        "text": "(",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:59:40.814499"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:59:41.837374"
    },
    {
        "index": "9.27",
        "text": ")",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T21:59:42.511943"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:59:43.602760"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T21:59:43.702836"
    },
    {
        "index1": "339.4",
        "index2": "340.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:43.711837"
    },
    {
        "index": "339.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:43.711837"
    },
    {
        "index1": "340.0",
        "index2": "340.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:43.712835"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T21:59:43.712835"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T21:59:43.872835"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:59:43.925835"
    },
    {
        "index": "340.0",
        "text": "S",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:43.926835"
    },
    {
        "index": "340.1",
        "text": "isesta sissekande tekst: ",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:43.926835"
    },
    {
        "index": "340.26",
        "text": "t",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:44.737409"
    },
    {
        "index": "340.27",
        "text": "e",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:44.847474"
    },
    {
        "index": "340.28",
        "text": "r",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:44.936514"
    },
    {
        "index": "340.29",
        "text": "e",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:45.073636"
    },
    {
        "index": "340.30",
        "text": "\n",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:45.269797"
    },
    {
        "input_text": "tere\n",
        "sequence": "ShellInput",
        "time": "2020-11-14T21:59:45.270797"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:59:45.271796"
    },
    {
        "index": "341.0",
        "text": "<_io.TextIOWrapper name='paevik.txt' mode='a' encoding='UTF-8'>\n",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:45.271796"
    },
    {
        "index": "342.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:45.280797"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:59:46.723194"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:59:52.181882"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:59:52.182881"
    },
    {
        "index1": "342.4",
        "index2": "343.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:52.318982"
    },
    {
        "index": "342.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:52.318982"
    },
    {
        "index1": "343.0",
        "index2": "343.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:52.319981"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T21:59:52.319981"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T21:59:52.475982"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:59:52.532981"
    },
    {
        "index": "343.0",
        "text": "S",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:52.532981"
    },
    {
        "index": "343.1",
        "text": "isesta sissekande tekst: ",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:52.533982"
    },
    {
        "index": "343.26",
        "text": "t",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:53.811974"
    },
    {
        "index": "343.27",
        "text": "e",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:53.913039"
    },
    {
        "index": "343.28",
        "text": "r",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:54.054037"
    },
    {
        "index": "343.29",
        "text": "e",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:54.204052"
    },
    {
        "index": "343.30",
        "text": "\n",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:54.535260"
    },
    {
        "input_text": "tere\n",
        "sequence": "ShellInput",
        "time": "2020-11-14T21:59:54.535260"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T21:59:54.544260"
    },
    {
        "index": "344.0",
        "text": "<_io.TextIOWrapper name='paevik.txt' mode='a' encoding='UTF-8'>\n",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:54.544260"
    },
    {
        "index": "345.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T21:59:54.552260"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T21:59:56.332834"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T21:59:59.941587"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T21:59:59.944585"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:00:01.877155"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:00:03.232997"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:00:03.234995"
    },
    {
        "index": "11.0",
        "text": "f",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:00:05.614809"
    },
    {
        "index": "11.1",
        "text": ".",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:00:05.919996"
    },
    {
        "index": "11.2",
        "text": "c",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:00:06.196195"
    },
    {
        "index": "11.3",
        "text": "l",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:00:06.370381"
    },
    {
        "index": "11.4",
        "text": "o",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:00:06.533511"
    },
    {
        "index": "11.5",
        "text": "s",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:00:06.591527"
    },
    {
        "index": "11.6",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:00:06.790678"
    },
    {
        "index": "11.7",
        "text": "(",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:00:07.534268"
    },
    {
        "index": "11.8",
        "text": ")",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:00:07.730382"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:00:08.911148"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T22:00:09.003245"
    },
    {
        "index1": "345.4",
        "index2": "346.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:00:09.013244"
    },
    {
        "index": "345.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:00:09.014244"
    },
    {
        "index1": "346.0",
        "index2": "346.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:00:09.015244"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T22:00:09.015244"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T22:00:09.174246"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T22:00:09.227244"
    },
    {
        "index": "346.0",
        "text": "S",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:00:09.228245"
    },
    {
        "index": "346.1",
        "text": "isesta sissekande tekst: ",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:00:09.228245"
    },
    {
        "index": "346.26",
        "text": "t",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:00:10.017864"
    },
    {
        "index": "346.27",
        "text": "e",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:00:10.137918"
    },
    {
        "index": "346.28",
        "text": "r",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:00:10.278007"
    },
    {
        "index": "346.29",
        "text": "e",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:00:10.425148"
    },
    {
        "index": "346.30",
        "text": "\n",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:00:10.596249"
    },
    {
        "input_text": "tere\n",
        "sequence": "ShellInput",
        "time": "2020-11-14T22:00:10.597250"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T22:00:10.619250"
    },
    {
        "index": "347.0",
        "text": "<_io.TextIOWrapper name='paevik.txt' mode='a' encoding='UTF-8'>\n",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:00:10.619250"
    },
    {
        "index": "348.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:00:10.627250"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:00:11.755388"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:00:19.838558"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:00:19.840558"
    },
    {
        "index": "9.28",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:00:25.527817"
    },
    {
        "index": "9.29",
        "text": "=",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:00:25.978221"
    },
    {
        "index": "9.30",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:00:26.099322"
    },
    {
        "index1": "9.30",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:00:26.409591"
    },
    {
        "index1": "9.29",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:00:26.602786"
    },
    {
        "index": "9.29",
        "text": "+",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:00:26.841896"
    },
    {
        "index": "9.30",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:00:27.298238"
    },
    {
        "index": "9.31",
        "text": "'",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:00:28.839533"
    },
    {
        "index": "9.32",
        "text": "\\",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:00:30.092405"
    },
    {
        "index": "9.33",
        "text": "n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:00:30.885160"
    },
    {
        "index": "9.34",
        "text": "'",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:00:31.421705"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:00:32.803570"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T22:00:32.879666"
    },
    {
        "index1": "348.4",
        "index2": "349.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:00:32.889668"
    },
    {
        "index": "348.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:00:32.889668"
    },
    {
        "index1": "349.0",
        "index2": "349.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:00:32.890668"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T22:00:32.891668"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T22:00:33.049668"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T22:00:33.051668"
    },
    {
        "index": "349.0",
        "text": "S",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:00:33.052668"
    },
    {
        "index": "349.1",
        "text": "isesta sissekande tekst: ",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:00:33.052668"
    },
    {
        "index": "349.26",
        "text": "t",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:00:33.892199"
    },
    {
        "index": "349.27",
        "text": "e",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:00:33.959197"
    },
    {
        "index": "349.28",
        "text": "r",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:00:34.042224"
    },
    {
        "index": "349.29",
        "text": "e",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:00:34.186302"
    },
    {
        "index": "349.30",
        "text": "\n",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:00:34.361380"
    },
    {
        "input_text": "tere\n",
        "sequence": "ShellInput",
        "time": "2020-11-14T22:00:34.362381"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T22:00:34.372379"
    },
    {
        "index": "350.0",
        "text": "<_io.TextIOWrapper name='paevik.txt' mode='a' encoding='UTF-8'>\n",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:00:34.372379"
    },
    {
        "index": "351.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:00:34.380384"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:00:35.762703"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:00:40.189885"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:00:41.182476"
    },
    {
        "index": "10.17",
        "text": "/",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:00:42.266364"
    },
    {
        "index1": "10.17",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:00:42.925011"
    },
    {
        "index": "10.17",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:00:44.199188"
    },
    {
        "index": "10.18",
        "text": "+",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:00:44.879578"
    },
    {
        "index": "10.19",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:00:45.146683"
    },
    {
        "index": "10.20",
        "text": "'",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:00:46.319675"
    },
    {
        "index": "10.21",
        "text": "\\",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:00:46.647955"
    },
    {
        "index": "10.22",
        "text": "n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:00:47.119412"
    },
    {
        "index": "10.23",
        "text": "\\",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:00:47.401658"
    },
    {
        "index1": "10.23",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:00:48.106285"
    },
    {
        "index": "10.23",
        "text": "'",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:00:48.749826"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:00:50.322115"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:00:51.454129"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:00:52.638321"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:00:53.327768"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:00:53.904150"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:01:01.952674"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:01:01.953674"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:01:01.953674"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:01:03.204165"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T22:01:03.280216"
    },
    {
        "index1": "351.4",
        "index2": "352.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:03.289228"
    },
    {
        "index": "351.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:03.289228"
    },
    {
        "index1": "352.0",
        "index2": "352.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:03.290228"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T22:01:03.291230"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T22:01:03.448228"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T22:01:03.501230"
    },
    {
        "index": "352.0",
        "text": "S",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:03.501230"
    },
    {
        "index": "352.1",
        "text": "isesta sissekande tekst: ",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:03.501230"
    },
    {
        "index": "352.26",
        "text": "t",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:04.577902"
    },
    {
        "index": "352.27",
        "text": "e",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:04.684953"
    },
    {
        "index": "352.28",
        "text": "r",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:04.786046"
    },
    {
        "index": "352.29",
        "text": "e",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:04.921111"
    },
    {
        "index": "352.30",
        "text": "\n",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:05.189225"
    },
    {
        "input_text": "tere\n",
        "sequence": "ShellInput",
        "time": "2020-11-14T22:01:05.190228"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T22:01:05.198226"
    },
    {
        "index": "353.0",
        "text": "<_io.TextIOWrapper name='paevik.txt' mode='a' encoding='UTF-8'>\n",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:05.199226"
    },
    {
        "index": "354.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:05.206227"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:01:06.310413"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:01:08.630754"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:01:09.044019"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:01:20.136029"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:01:20.137027"
    },
    {
        "index1": "354.4",
        "index2": "355.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:20.257076"
    },
    {
        "index": "354.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:20.258076"
    },
    {
        "index1": "355.0",
        "index2": "355.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:20.259077"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T22:01:20.259077"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T22:01:20.417078"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T22:01:20.469076"
    },
    {
        "index": "355.0",
        "text": "S",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:20.470076"
    },
    {
        "index": "355.1",
        "text": "isesta sissekande tekst: ",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:20.470076"
    },
    {
        "index": "355.26",
        "text": "t",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:21.697094"
    },
    {
        "index": "355.27",
        "text": "e",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:21.803118"
    },
    {
        "index": "355.28",
        "text": "r",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:21.892118"
    },
    {
        "index": "355.29",
        "text": "e",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:22.048222"
    },
    {
        "index": "355.30",
        "text": "\n",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:22.306324"
    },
    {
        "input_text": "tere\n",
        "sequence": "ShellInput",
        "time": "2020-11-14T22:01:22.307323"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T22:01:22.352337"
    },
    {
        "index": "356.0",
        "text": "<_io.TextIOWrapper name='paevik.txt' mode='a' encoding='UTF-8'>\n",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:22.352337"
    },
    {
        "index": "357.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:22.360337"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:01:23.260351"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:01:27.926269"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:01:27.927269"
    },
    {
        "index1": "357.4",
        "index2": "358.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:28.018323"
    },
    {
        "index": "357.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:28.018323"
    },
    {
        "index1": "358.0",
        "index2": "358.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:28.019321"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T22:01:28.019321"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T22:01:28.178322"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T22:01:28.229322"
    },
    {
        "index": "358.0",
        "text": "S",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:28.229322"
    },
    {
        "index": "358.1",
        "text": "isesta sissekande tekst: ",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:28.230321"
    },
    {
        "index": "358.26",
        "text": "t",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:29.064951"
    },
    {
        "index": "358.27",
        "text": "e",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:29.142004"
    },
    {
        "index": "358.28",
        "text": "r",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:29.208002"
    },
    {
        "index": "358.29",
        "text": "e",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:29.368100"
    },
    {
        "index": "358.30",
        "text": "\n",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:29.615283"
    },
    {
        "input_text": "tere\n",
        "sequence": "ShellInput",
        "time": "2020-11-14T22:01:29.616292"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T22:01:29.665316"
    },
    {
        "index": "359.0",
        "text": "<_io.TextIOWrapper name='paevik.txt' mode='a' encoding='UTF-8'>\n",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:29.665316"
    },
    {
        "index": "360.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:29.673316"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:01:30.557317"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:01:34.535788"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:01:35.019960"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:01:36.237455"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:01:36.627680"
    },
    {
        "index": "10.25",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:01:37.953849"
    },
    {
        "index": "11.0",
        "text": "",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:01:37.955848"
    },
    {
        "index": "11.0",
        "text": "f.write(kirjutatu + '\\n')",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:01:38.282100"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Paste>>",
        "time": "2020-11-14T22:01:38.282100"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:01:39.780336"
    },
    {
        "index1": "11.8",
        "index2": "11.18",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:01:41.963833"
    },
    {
        "index": "11.8",
        "text": "'",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:01:41.965831"
    },
    {
        "index": "11.9",
        "text": "'",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:01:43.625232"
    },
    {
        "index": "11.10",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:01:43.851414"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:01:45.447494"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:01:50.378598"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:01:50.379598"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T22:01:50.486667"
    },
    {
        "index1": "360.4",
        "index2": "361.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:50.496666"
    },
    {
        "index": "360.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:50.496666"
    },
    {
        "index1": "361.0",
        "index2": "361.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:50.497666"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T22:01:50.498668"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T22:01:50.655667"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T22:01:50.710667"
    },
    {
        "index": "361.0",
        "text": "S",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:50.711668"
    },
    {
        "index": "361.1",
        "text": "isesta sissekande tekst: ",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:50.711668"
    },
    {
        "index": "361.26",
        "text": "t",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:51.909707"
    },
    {
        "index": "361.27",
        "text": "e",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:52.001771"
    },
    {
        "index": "361.28",
        "text": "r",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:52.096846"
    },
    {
        "index": "361.29",
        "text": "e",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:52.240861"
    },
    {
        "index": "361.30",
        "text": "\n",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:53.187445"
    },
    {
        "input_text": "tere\n",
        "sequence": "ShellInput",
        "time": "2020-11-14T22:01:53.188446"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T22:01:53.189446"
    },
    {
        "index": "362.0",
        "text": "<_io.TextIOWrapper name='paevik.txt' mode='a' encoding='UTF-8'>\n",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:53.190447"
    },
    {
        "index": "363.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:53.198451"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:01:54.215500"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:01:56.911162"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:01:56.914161"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:01:57.777717"
    },
    {
        "index1": "363.4",
        "index2": "364.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:57.878788"
    },
    {
        "index": "363.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:57.878788"
    },
    {
        "index1": "364.0",
        "index2": "364.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:57.879788"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T22:01:57.879788"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T22:01:58.039789"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T22:01:58.095788"
    },
    {
        "index": "364.0",
        "text": "S",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:58.096790"
    },
    {
        "index": "364.1",
        "text": "isesta sissekande tekst: ",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:58.096790"
    },
    {
        "index": "364.26",
        "text": "t",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:59.038583"
    },
    {
        "index": "364.27",
        "text": "e",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:59.112582"
    },
    {
        "index": "364.28",
        "text": "r",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:59.188621"
    },
    {
        "index1": "364.28",
        "index2": "None",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:59.525908"
    },
    {
        "index1": "364.27",
        "index2": "None",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:59.691011"
    },
    {
        "index1": "364.26",
        "index2": "None",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:01:59.986135"
    },
    {
        "index": "364.26",
        "text": "s",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:02:00.133163"
    },
    {
        "index": "364.27",
        "text": "v",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:02:00.414360"
    },
    {
        "index": "364.28",
        "text": "e",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:02:00.611445"
    },
    {
        "index": "364.29",
        "text": "i",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:02:00.756558"
    },
    {
        "index": "364.30",
        "text": "k",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:02:00.913671"
    },
    {
        "index": "364.31",
        "text": "i",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:02:01.055721"
    },
    {
        "index": "364.32",
        "text": "\n",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:02:01.909410"
    },
    {
        "input_text": "sveiki\n",
        "sequence": "ShellInput",
        "time": "2020-11-14T22:02:01.909410"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T22:02:01.933408"
    },
    {
        "index": "365.0",
        "text": "<_io.TextIOWrapper name='paevik.txt' mode='a' encoding='UTF-8'>\n",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:02:01.933408"
    },
    {
        "index": "366.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:02:01.941410"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:02:02.579409"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:02:10.679733"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:02:10.681734"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:02:11.762446"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:02:19.622070"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:02:19.625070"
    },
    {
        "index1": "3.0",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:02:20.241599"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:02:20.789125"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:02:22.592195"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:02:23.206781"
    },
    {
        "index": "12.9",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:02:23.910363"
    },
    {
        "index": "13.0",
        "text": "",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:02:23.913364"
    },
    {
        "index": "13.0",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:02:24.094539"
    },
    {
        "index": "14.0",
        "text": "print(\"Kuup\u00e4ev ja kellaeg: \" + str(kuup\u00e4ev_kellaeg))",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:02:25.313529"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Paste>>",
        "time": "2020-11-14T22:02:25.314529"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:02:26.622356"
    },
    {
        "index1": "15.6",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:02:30.157327"
    },
    {
        "index": "15.6",
        "text": "k",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:02:30.730787"
    },
    {
        "index": "15.7",
        "text": "i",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:02:30.926915"
    },
    {
        "index": "15.8",
        "text": "r",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:02:31.021979"
    },
    {
        "index": "15.9",
        "text": "jutatu",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:02:31.627166"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:02:32.969250"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T22:02:33.061344"
    },
    {
        "index1": "366.4",
        "index2": "367.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:02:33.070342"
    },
    {
        "index": "366.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:02:33.070342"
    },
    {
        "index1": "367.0",
        "index2": "367.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:02:33.071343"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T22:02:33.072342"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T22:02:33.228344"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T22:02:33.231344"
    },
    {
        "index": "367.0",
        "text": "K",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:02:33.231344"
    },
    {
        "index": "367.1",
        "text": "uup\u00e4ev ja kellaeg: 2020-11-14 22:02:33.230344\nSisesta sissekande tekst: ",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:02:33.232344"
    },
    {
        "index": "368.26",
        "text": "t",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:02:34.003873"
    },
    {
        "index": "368.27",
        "text": "e",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:02:34.110934"
    },
    {
        "index": "368.28",
        "text": "r",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:02:34.233974"
    },
    {
        "index": "368.29",
        "text": "e",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:02:34.381037"
    },
    {
        "index": "368.30",
        "text": "\n",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:02:34.712304"
    },
    {
        "input_text": "tere\n",
        "sequence": "ShellInput",
        "time": "2020-11-14T22:02:34.712304"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T22:02:34.773321"
    },
    {
        "index": "369.0",
        "text": "Kuup\u00e4ev ja kellaeg: 2020-11-14 22:02:33.230344\ntere\n",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:02:34.774319"
    },
    {
        "index": "371.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:02:34.781318"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:02:37.525485"
    },
    {
        "index1": "3.0",
        "index2": "3.52",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:02:38.517887"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:02:39.161437"
    },
    {
        "index1": "3.0",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:02:39.580809"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:02:40.437511"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T22:02:40.541608"
    },
    {
        "index1": "371.4",
        "index2": "372.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:02:40.549606"
    },
    {
        "index": "371.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:02:40.550606"
    },
    {
        "index1": "372.0",
        "index2": "372.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:02:40.551606"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T22:02:40.551606"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T22:02:40.708608"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T22:02:40.759619"
    },
    {
        "index": "372.0",
        "text": "S",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:02:40.759619"
    },
    {
        "index": "372.1",
        "text": "isesta sissekande tekst: ",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:02:40.760618"
    },
    {
        "index": "372.26",
        "text": "t",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:02:41.454126"
    },
    {
        "index": "372.27",
        "text": "e",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:02:41.513151"
    },
    {
        "index": "372.28",
        "text": "r",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:02:41.626150"
    },
    {
        "index": "372.29",
        "text": "e",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:02:41.769264"
    },
    {
        "index": "372.30",
        "text": "\n",
        "tags": "('io', 'stdin')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:02:41.925399"
    },
    {
        "input_text": "tere\n",
        "sequence": "ShellInput",
        "time": "2020-11-14T22:02:41.926401"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T22:02:41.952401"
    },
    {
        "index": "373.0",
        "text": "Kuup\u00e4ev ja kellaeg: 2020-11-14 22:02:40.710606\ntere\n",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:02:41.952401"
    },
    {
        "index": "375.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:02:41.960401"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:02:44.193651"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:02:49.804184"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:02:49.806182"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:02:52.496193"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:03:31.619833"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:03:31.624834"
    },
    {
        "index1": "1.0",
        "index2": "15.0",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:03:33.407231"
    },
    {
        "index": "1.0",
        "text": "from easygui import *\n \nnimi = enterbox(\"Tere, kuidas on teie nimi?\")\nvanus = integerbox(\"Kui vana te olete?\", lowerbound = 1, upperbound = 120)\nif nimi == None or vanus == None or nimi == \"\":\n    msgbox(\"Palun sisestage andmed korrektselt!\")\nelse:\n    msgbox(\"Tere, \" + str(vanus)  + \"-aastane \" + nimi + \"!\")",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:03:33.409231"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Paste>>",
        "time": "2020-11-14T22:03:33.409231"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:03:35.365749"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:03:36.090327"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:03:38.154421"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:03:38.157424"
    },
    {
        "index1": "3.0",
        "index2": "3.4",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:03:38.870793"
    },
    {
        "index": "3.0",
        "text": "a",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:03:38.872794"
    },
    {
        "index": "3.1",
        "text": "r",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:03:39.081978"
    },
    {
        "index": "3.2",
        "text": "v",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:03:39.345252"
    },
    {
        "index": "3.3",
        "text": "1",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:03:40.000947"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:03:42.249708"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:03:43.547939"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:03:44.984311"
    },
    {
        "index1": "4.0",
        "index2": "4.5",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:03:45.561528"
    },
    {
        "index": "4.0",
        "text": "a",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:03:45.562529"
    },
    {
        "index": "4.1",
        "text": "r",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:03:45.864771"
    },
    {
        "index": "4.2",
        "text": "v",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:03:46.112949"
    },
    {
        "index": "4.3",
        "text": "2",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:03:46.618395"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:03:48.457663"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:03:53.654881"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:03:53.657881"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:03:55.275735"
    },
    {
        "index": "4.73",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:03:56.047430"
    },
    {
        "index": "5.0",
        "text": "",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:03:56.049431"
    },
    {
        "index": "5.0",
        "text": "arv2 = integerbox(\"Kui vana te olete?\", lowerbound = 1, upperbound = 120)",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:03:56.295632"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Paste>>",
        "time": "2020-11-14T22:03:56.296631"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:03:57.454642"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:03:57.930700"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:03:59.214419"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:03:59.868003"
    },
    {
        "index1": "6.0",
        "index2": "9.61",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:04:00.569261"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:04:02.016331"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:04:02.467777"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:04:03.182161"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:04:03.648531"
    },
    {
        "index1": "5.0",
        "index2": "5.4",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:04:04.886289"
    },
    {
        "index": "5.0",
        "text": "m",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:04.887289"
    },
    {
        "index": "5.1",
        "text": "2",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:05.107428"
    },
    {
        "index": "5.2",
        "text": "r",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:05.302553"
    },
    {
        "index": "5.3",
        "text": "k",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:05.434632"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:04:08.300939"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:04:10.602350"
    },
    {
        "index1": "3.7",
        "index2": "3.45",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:04:12.144137"
    },
    {
        "index": "3.7",
        "text": "integerbox(\"Kui vana te olete?\", lowerbound = 1, upperbound = 120)",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:12.145136"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Paste>>",
        "time": "2020-11-14T22:04:12.146136"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:04:13.288148"
    },
    {
        "index1": "3.53",
        "index2": "3.54",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:04:14.600280"
    },
    {
        "index": "3.53",
        "text": "-",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:14.602280"
    },
    {
        "index": "3.54",
        "text": "1",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:15.724236"
    },
    {
        "index": "3.55",
        "text": "2",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:16.052556"
    },
    {
        "index": "3.56",
        "text": "0",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:16.156643"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:04:17.466655"
    },
    {
        "index1": "4.53",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:04:18.185195"
    },
    {
        "index": "4.53",
        "text": "-",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:18.681687"
    },
    {
        "index": "4.54",
        "text": "1",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:18.798792"
    },
    {
        "index": "4.55",
        "text": "0",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:19.220193"
    },
    {
        "index1": "4.55",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:04:19.536473"
    },
    {
        "index": "4.55",
        "text": "2",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:19.612509"
    },
    {
        "index": "4.56",
        "text": "0",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:19.738611"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:04:25.048238"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:04:26.038072"
    },
    {
        "index1": "3.19",
        "index2": "3.37",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:04:28.668899"
    },
    {
        "index": "3.19",
        "text": "S",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:28.670900"
    },
    {
        "index": "3.20",
        "text": "i",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:28.896072"
    },
    {
        "index": "3.21",
        "text": "s",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:29.582483"
    },
    {
        "index": "3.22",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:29.784656"
    },
    {
        "index": "3.23",
        "text": "s",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:29.979795"
    },
    {
        "index": "3.24",
        "text": "t",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:30.150905"
    },
    {
        "index": "3.25",
        "text": "a",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:30.285973"
    },
    {
        "index": "3.26",
        "text": "g",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:30.366037"
    },
    {
        "index": "3.27",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:30.473114"
    },
    {
        "index": "3.28",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:31.656151"
    },
    {
        "index": "3.29",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:31.867341"
    },
    {
        "index": "3.30",
        "text": "s",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:32.081518"
    },
    {
        "index": "3.31",
        "text": "i",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:32.243665"
    },
    {
        "index": "3.32",
        "text": "m",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:32.470892"
    },
    {
        "index": "3.33",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:32.646002"
    },
    {
        "index": "3.34",
        "text": "n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:32.878198"
    },
    {
        "index": "3.35",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:32.939263"
    },
    {
        "index": "3.36",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:34.242511"
    },
    {
        "index": "3.37",
        "text": "t",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:34.666870"
    },
    {
        "index": "3.38",
        "text": "\u00e4",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:35.957088"
    },
    {
        "index": "3.39",
        "text": "i",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:36.606569"
    },
    {
        "index": "3.40",
        "text": "s",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:36.668633"
    },
    {
        "index": "3.41",
        "text": "a",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:36.847752"
    },
    {
        "index": "3.42",
        "text": "r",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:37.068991"
    },
    {
        "index": "3.43",
        "text": "v",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:37.315144"
    },
    {
        "index": "3.44",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:38.583105"
    },
    {
        "index": "3.45",
        "text": "l",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:39.075455"
    },
    {
        "index": "3.46",
        "text": "\u00f5",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:39.645938"
    },
    {
        "index": "3.47",
        "text": "i",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:41.098181"
    },
    {
        "index": "3.48",
        "text": "g",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:41.312344"
    },
    {
        "index": "3.49",
        "text": "u",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:41.453447"
    },
    {
        "index": "3.50",
        "text": "s",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:41.547521"
    },
    {
        "index": "3.51",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:41.667607"
    },
    {
        "index": "3.52",
        "text": "1",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:42.010973"
    },
    {
        "index": "3.53",
        "text": "+",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:42.455260"
    },
    {
        "index": "3.54",
        "text": "1",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:42.635393"
    },
    {
        "index": "3.55",
        "text": "0",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:42.822493"
    },
    {
        "index1": "3.53",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:04:44.210824"
    },
    {
        "index": "3.53",
        "text": "+",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:44.771268"
    },
    {
        "index1": "3.53",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:04:45.294765"
    },
    {
        "index": "3.53",
        "text": "-",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:45.865284"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:04:48.261315"
    },
    {
        "index": "3.56",
        "text": "\u00d6",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:49.565220"
    },
    {
        "index1": "3.56",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:04:49.966561"
    },
    {
        "index": "3.56",
        "text": ":",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:50.781177"
    },
    {
        "index": "3.57",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:50.980396"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:04:53.358860"
    },
    {
        "index1": "3.74",
        "index2": "3.78",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:04:55.028072"
    },
    {
        "index": "3.74",
        "text": "1",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:55.030072"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:04:55.936931"
    },
    {
        "index1": "3.91",
        "index2": "3.93",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:04:56.985522"
    },
    {
        "index": "3.91",
        "text": "0",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:56.987522"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:04:58.164518"
    },
    {
        "index1": "4.53",
        "index2": "4.57",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:04:59.354083"
    },
    {
        "index": "4.53",
        "text": "1",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:04:59.356083"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:05:00.068617"
    },
    {
        "index1": "4.69",
        "index2": "4.72",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:05:01.323478"
    },
    {
        "index": "4.69",
        "text": "0",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:05:01.325478"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:05:07.900010"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:05:19.574244"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:05:19.578245"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:05:20.389746"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:05:23.508981"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:05:23.511982"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:05:25.241361"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:05:27.131356"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:05:27.471529"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:05:27.853903"
    },
    {
        "index1": "3.57",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:05:28.527589"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:05:29.380058"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:05:32.827288"
    },
    {
        "index1": "4.19",
        "index2": "4.37",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:05:33.785834"
    },
    {
        "index": "4.19",
        "text": "Sisestage esimene t\u00e4isarv l\u00f5igus 1-10:",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:05:33.787834"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Paste>>",
        "time": "2020-11-14T22:05:33.787834"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:05:34.735696"
    },
    {
        "index1": "4.29",
        "index2": "4.36",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:05:36.049446"
    },
    {
        "index": "4.29",
        "text": "t",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:05:36.051448"
    },
    {
        "index": "4.30",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:05:36.163517"
    },
    {
        "index": "4.31",
        "text": "i",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:05:36.392627"
    },
    {
        "index": "4.32",
        "text": "n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:05:36.591749"
    },
    {
        "index": "4.33",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:05:36.658804"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:05:38.223222"
    },
    {
        "index1": "5.19",
        "index2": "5.37",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:05:40.378455"
    },
    {
        "index": "5.19",
        "text": "V",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:05:40.379455"
    },
    {
        "index": "5.20",
        "text": "a",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:05:40.650675"
    },
    {
        "index": "5.21",
        "text": "l",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:05:40.748766"
    },
    {
        "index": "5.22",
        "text": "i",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:05:40.959944"
    },
    {
        "index": "5.23",
        "text": "g",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:05:41.224148"
    },
    {
        "index": "5.24",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:05:41.309176"
    },
    {
        "index": "5.25",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:05:41.450304"
    },
    {
        "index": "5.26",
        "text": "t",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:05:41.695481"
    },
    {
        "index": "5.27",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:05:41.812570"
    },
    {
        "index": "5.28",
        "text": "h",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:05:41.944618"
    },
    {
        "index": "5.29",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:05:42.023646"
    },
    {
        "index": "5.30",
        "text": "\u00d6",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:05:42.455034"
    },
    {
        "index": "5.31",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:05:42.939402"
    },
    {
        "index1": "5.31",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:05:43.672033"
    },
    {
        "index1": "5.30",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:05:43.862158"
    },
    {
        "index": "5.30",
        "text": ":",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:05:44.651858"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:05:46.585534"
    },
    {
        "index1": "5.32",
        "index2": "5.66",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:05:47.957141"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:05:48.675724"
    },
    {
        "index": "6.0",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:05:50.010685"
    },
    {
        "index": "7.0",
        "text": "i",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:05:54.535641"
    },
    {
        "index": "7.1",
        "text": "f",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:05:54.667740"
    },
    {
        "index": "7.2",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:05:55.050013"
    },
    {
        "index": "7.3",
        "text": "m",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:05:56.857588"
    },
    {
        "index": "7.4",
        "text": "2",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:05:56.918638"
    },
    {
        "index": "7.5",
        "text": "r",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:05:57.068779"
    },
    {
        "index": "7.6",
        "text": "k",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:05:57.178869"
    },
    {
        "index": "7.7",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:04.149607"
    },
    {
        "index": "7.8",
        "text": "\u00b4",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:04.368752"
    },
    {
        "index1": "7.8",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:06:04.814151"
    },
    {
        "index1": "7.7",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:06:04.960298"
    },
    {
        "index": "7.7",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:05.796958"
    },
    {
        "index": "7.8",
        "text": "=",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:06.700698"
    },
    {
        "index": "7.9",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:07.087069"
    },
    {
        "index": "7.10",
        "text": "=",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:12.007421"
    },
    {
        "index1": "7.10",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:06:12.916190"
    },
    {
        "index1": "7.9",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:06:13.247475"
    },
    {
        "index": "7.9",
        "text": "=",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:14.151370"
    },
    {
        "index": "7.10",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:14.445621"
    },
    {
        "index": "7.11",
        "text": "+",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:14.794952"
    },
    {
        "index": "7.12",
        "text": "'",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:15.872956"
    },
    {
        "index1": "7.12",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:06:16.232368"
    },
    {
        "index": "7.12",
        "text": ";",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:16.431531"
    },
    {
        "index1": "7.12",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:06:16.917898"
    },
    {
        "index": "7.12",
        "text": ":",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:17.475331"
    },
    {
        "index": "7.13",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:17.723540"
    },
    {
        "index": "8.0",
        "text": "",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:17.724543"
    },
    {
        "index": "8.0",
        "text": "    ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:17.727540"
    },
    {
        "index": "8.4",
        "text": "A",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:21.812904"
    },
    {
        "index": "8.5",
        "text": "R",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:22.077114"
    },
    {
        "index": "8.6",
        "text": "V",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:22.328316"
    },
    {
        "index1": "8.6",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:06:23.566337"
    },
    {
        "index1": "8.5",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:06:23.752487"
    },
    {
        "index1": "8.4",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:06:23.939621"
    },
    {
        "index": "8.4",
        "text": "v",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:29.316587"
    },
    {
        "index": "8.5",
        "text": "a",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:29.414588"
    },
    {
        "index": "8.6",
        "text": "s",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:29.509587"
    },
    {
        "index": "8.7",
        "text": "t",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:29.631688"
    },
    {
        "index": "8.8",
        "text": "u",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:29.839798"
    },
    {
        "index": "8.9",
        "text": "y",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:29.852799"
    },
    {
        "index": "8.10",
        "text": "s",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:29.949903"
    },
    {
        "index1": "8.10",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:06:30.212973"
    },
    {
        "index1": "8.9",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:06:30.410141"
    },
    {
        "index": "8.9",
        "text": "s",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:31.001628"
    },
    {
        "index": "8.10",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:31.283914"
    },
    {
        "index": "8.11",
        "text": "=",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:31.380976"
    },
    {
        "index": "8.12",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:31.457005"
    },
    {
        "index": "8.13",
        "text": "a",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:32.840199"
    },
    {
        "index": "8.14",
        "text": "r",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:33.062379"
    },
    {
        "index": "8.15",
        "text": "v",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:33.393728"
    },
    {
        "index": "8.16",
        "text": "1",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:34.333653"
    },
    {
        "index": "8.17",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:34.603892"
    },
    {
        "index": "8.18",
        "text": "=",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:34.864027"
    },
    {
        "index1": "8.18",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:06:35.235331"
    },
    {
        "index": "8.18",
        "text": "+",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:35.495506"
    },
    {
        "index": "8.19",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:35.792747"
    },
    {
        "index": "8.20",
        "text": "a",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:36.298230"
    },
    {
        "index": "8.21",
        "text": "r",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:36.527355"
    },
    {
        "index": "8.22",
        "text": "v",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:36.757576"
    },
    {
        "index": "8.23",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:37.094880"
    },
    {
        "index1": "8.23",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:06:37.478107"
    },
    {
        "index": "8.23",
        "text": "2",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:37.584199"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:06:41.282282"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:06:45.188944"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:06:45.190946"
    },
    {
        "index": "8.24",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:46.650210"
    },
    {
        "index": "9.0",
        "text": "    ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:46.652210"
    },
    {
        "index": "9.4",
        "text": "\n    ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:47.033568"
    },
    {
        "index1": "10.0",
        "index2": "10.4",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:06:47.427911"
    },
    {
        "index": "9.0",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:48.929947"
    },
    {
        "index": "9.1",
        "text": "l",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:49.034045"
    },
    {
        "index": "9.2",
        "text": "i",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:49.238247"
    },
    {
        "index": "9.3",
        "text": "f",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:49.345358"
    },
    {
        "index": "9.4",
        "text": ":",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:49.900840"
    },
    {
        "index": "10.0",
        "text": "    ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:51.925380"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:06:55.627317"
    },
    {
        "index1": "9.6",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:06:56.573059"
    },
    {
        "index1": "9.5",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:06:56.781186"
    },
    {
        "index1": "9.4",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:06:57.039365"
    },
    {
        "index": "9.4",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:57.323577"
    },
    {
        "index": "9.5",
        "text": "m",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:57.841028"
    },
    {
        "index": "9.6",
        "text": "2",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:58.239402"
    },
    {
        "index": "9.7",
        "text": "r",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:58.435570"
    },
    {
        "index": "9.8",
        "text": "k",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:58.567658"
    },
    {
        "index": "9.9",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:58.696738"
    },
    {
        "index": "9.10",
        "text": "=",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:59.575493"
    },
    {
        "index": "9.11",
        "text": "=",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:06:59.820686"
    },
    {
        "index": "9.12",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:00.157968"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:07:02.315242"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:07:03.731263"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:07:03.733267"
    },
    {
        "index1": "9.13",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:07:05.911035"
    },
    {
        "index": "9.13",
        "text": "-",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:07.084980"
    },
    {
        "index": "9.14",
        "text": "\"",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:08.174748"
    },
    {
        "index": "9.13",
        "text": "\"",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:09.513919"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:07:10.738814"
    },
    {
        "index": "7.12",
        "text": "\"",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:11.492435"
    },
    {
        "index": "7.11",
        "text": "\"",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:12.715632"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:07:13.439149"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:07:13.829402"
    },
    {
        "index1": "9.16",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:07:14.497918"
    },
    {
        "index": "9.16",
        "text": ":",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:14.820224"
    },
    {
        "index": "9.17",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:15.270607"
    },
    {
        "index": "10.0",
        "text": "",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:15.272607"
    },
    {
        "index": "10.0",
        "text": "    ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:15.274607"
    },
    {
        "index": "10.4",
        "text": "v",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:16.716952"
    },
    {
        "index": "10.5",
        "text": "a",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:16.881079"
    },
    {
        "index": "10.6",
        "text": "s",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:17.074236"
    },
    {
        "index": "10.7",
        "text": "t",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:17.267348"
    },
    {
        "index": "10.8",
        "text": "u",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:17.497574"
    },
    {
        "index": "10.9",
        "text": "s",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:17.601657"
    },
    {
        "index": "10.10",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:18.263123"
    },
    {
        "index": "10.11",
        "text": "=",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:18.380213"
    },
    {
        "index": "10.12",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:18.441230"
    },
    {
        "index": "10.13",
        "text": "a",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:20.959264"
    },
    {
        "index": "10.14",
        "text": "r",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:21.220455"
    },
    {
        "index": "10.15",
        "text": "v",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:21.454642"
    },
    {
        "index": "10.16",
        "text": "1",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:22.938083"
    },
    {
        "index": "10.17",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:23.520544"
    },
    {
        "index": "10.18",
        "text": "-",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:24.327185"
    },
    {
        "index": "10.19",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:24.708540"
    },
    {
        "index": "10.20",
        "text": "a",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:25.552255"
    },
    {
        "index": "10.21",
        "text": "r",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:25.736459"
    },
    {
        "index": "10.22",
        "text": "v",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:25.946582"
    },
    {
        "index": "10.23",
        "text": "2",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:26.194782"
    },
    {
        "index": "10.24",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:27.477941"
    },
    {
        "index": "11.0",
        "text": "    ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:27.479942"
    },
    {
        "index1": "11.0",
        "index2": "11.4",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:07:28.067409"
    },
    {
        "index": "11.0",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:28.744028"
    },
    {
        "index": "11.1",
        "text": "l",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:29.041277"
    },
    {
        "index": "11.2",
        "text": "s",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:29.157357"
    },
    {
        "index": "11.3",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:29.362555"
    },
    {
        "index": "11.4",
        "text": ":",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:30.056146"
    },
    {
        "index": "12.4",
        "text": "v",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:33.685294"
    },
    {
        "index": "12.5",
        "text": "a",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:33.765352"
    },
    {
        "index": "12.6",
        "text": "s",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:33.863441"
    },
    {
        "index": "12.7",
        "text": "r",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:34.001581"
    },
    {
        "index1": "12.7",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:07:34.794265"
    },
    {
        "index": "12.7",
        "text": "t",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:35.070487"
    },
    {
        "index": "12.8",
        "text": "u",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:35.281648"
    },
    {
        "index": "12.9",
        "text": "s",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:35.388720"
    },
    {
        "index": "12.10",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:36.375662"
    },
    {
        "index": "12.11",
        "text": "=",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:36.727864"
    },
    {
        "index": "12.12",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:36.800916"
    },
    {
        "index": "12.13",
        "text": "a",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:38.044885"
    },
    {
        "index": "12.14",
        "text": "r",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:38.311134"
    },
    {
        "index": "12.15",
        "text": "v",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:38.557290"
    },
    {
        "index": "12.16",
        "text": "1",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:38.927652"
    },
    {
        "index": "12.17",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:39.592127"
    },
    {
        "index": "12.18",
        "text": "8",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:44.678293"
    },
    {
        "index1": "12.18",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:07:45.226713"
    },
    {
        "index": "12.18",
        "text": "*",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:45.958384"
    },
    {
        "index": "12.19",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:46.764070"
    },
    {
        "index": "12.20",
        "text": "a",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:46.941209"
    },
    {
        "index": "12.21",
        "text": "r",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:47.183424"
    },
    {
        "index": "12.22",
        "text": "v",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:47.376581"
    },
    {
        "index": "12.23",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:47.606789"
    },
    {
        "index": "12.24",
        "text": "2",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:47.716883"
    },
    {
        "index1": "12.24",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:07:47.947152"
    },
    {
        "index1": "12.23",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:07:48.136264"
    },
    {
        "index": "12.23",
        "text": "2",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:07:48.228340"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:07:56.974866"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:08:10.711506"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:08:10.713506"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:08:11.783209"
    },
    {
        "index": "12.24",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:12.448856"
    },
    {
        "index": "13.0",
        "text": "    ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:12.451855"
    },
    {
        "index": "13.4",
        "text": "\n    ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:13.322337"
    },
    {
        "index1": "14.0",
        "index2": "14.4",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:08:14.376201"
    },
    {
        "index": "14.0",
        "text": "m",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:16.937372"
    },
    {
        "index": "14.1",
        "text": "a",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:17.062500"
    },
    {
        "index": "14.2",
        "text": "g",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:17.329786"
    },
    {
        "index": "14.3",
        "text": "b",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:18.852043"
    },
    {
        "index": "14.4",
        "text": "o",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:19.715828"
    },
    {
        "index": "14.5",
        "text": "x",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:19.813922"
    },
    {
        "index": "14.6",
        "text": "(",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:22.222950"
    },
    {
        "index": "14.7",
        "text": "'",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:28.108184"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:08:31.154257"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:08:32.981323"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:08:32.983324"
    },
    {
        "index": "14.8",
        "text": "T",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:33.814008"
    },
    {
        "index": "14.9",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:34.091189"
    },
    {
        "index": "14.10",
        "text": "h",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:34.194262"
    },
    {
        "index": "14.11",
        "text": "t",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:34.384372"
    },
    {
        "index": "14.12",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:34.446412"
    },
    {
        "index": "14.13",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:34.648506"
    },
    {
        "index": "14.14",
        "text": "t",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:34.886678"
    },
    {
        "index": "14.15",
        "text": "u",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:35.015813"
    },
    {
        "index": "14.16",
        "text": "l",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:35.252015"
    },
    {
        "index": "14.17",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:35.399155"
    },
    {
        "index": "14.18",
        "text": "m",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:35.482168"
    },
    {
        "index": "14.19",
        "text": "u",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:35.696337"
    },
    {
        "index": "14.20",
        "text": "s",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:35.831450"
    },
    {
        "index": "14.21",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:36.274869"
    },
    {
        "index": "14.22",
        "text": "o",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:36.750053"
    },
    {
        "index": "14.23",
        "text": "n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:36.976204"
    },
    {
        "index": "14.24",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:40.206096"
    },
    {
        "index": "14.25",
        "text": "'",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:40.387240"
    },
    {
        "index": "14.26",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:40.540354"
    },
    {
        "index": "14.27",
        "text": "=",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:42.776138"
    },
    {
        "index1": "14.27",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:08:43.143449"
    },
    {
        "index": "14.27",
        "text": "+",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:43.498729"
    },
    {
        "index": "14.28",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:43.918007"
    },
    {
        "index": "14.29",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:44.078098"
    },
    {
        "index": "14.30",
        "text": "s",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:44.451398"
    },
    {
        "index": "14.31",
        "text": "t",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:44.693468"
    },
    {
        "index": "14.32",
        "text": "r",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:44.846568"
    },
    {
        "index": "14.33",
        "text": "(",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:45.870569"
    },
    {
        "index": "14.34",
        "text": "v",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:46.939422"
    },
    {
        "index": "14.35",
        "text": "a",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:46.994475"
    },
    {
        "index": "14.36",
        "text": "s",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:47.159612"
    },
    {
        "index": "14.37",
        "text": "t",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:47.269699"
    },
    {
        "index": "14.38",
        "text": "u",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:47.524929"
    },
    {
        "index": "14.39",
        "text": "s",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:47.612970"
    },
    {
        "index": "14.40",
        "text": ")",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:47.957216"
    },
    {
        "index": "14.41",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:49.047207"
    },
    {
        "index": "14.42",
        "text": "+",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:49.720881"
    },
    {
        "index": "14.43",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:50.052122"
    },
    {
        "index": "14.44",
        "text": "'",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:54.067673"
    },
    {
        "index": "14.45",
        "text": ".",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:55.119526"
    },
    {
        "index": "14.46",
        "text": "'",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:55.245618"
    },
    {
        "index": "14.47",
        "text": ")",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:08:56.053348"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:08:57.697519"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T22:08:57.809592"
    },
    {
        "index1": "375.4",
        "index2": "376.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:08:57.819592"
    },
    {
        "index": "375.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:08:57.820592"
    },
    {
        "index1": "376.0",
        "index2": "376.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:08:57.821592"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T22:08:57.821592"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T22:08:57.985594"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:08:58.084593"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:08:59.640805"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:08:59.718805"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:09:00.435299"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:09:00.515302"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:09:05.320936"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:09:05.401934"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:09:06.629770"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:09:06.708770"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:09:07.578328"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:09:07.583325"
    },
    {
        "view_id": "AssistantView",
        "view_class": "AssistantView",
        "sequence": "ShowView",
        "time": "2020-11-14T22:09:07.610327"
    },
    {
        "index": "376.0",
        "text": "Traceback (most recent call last):\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:09:07.622325"
    },
    {
        "index": "377.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_64635696')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:09:07.622325"
    },
    {
        "index": "377.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1171, in wrapper",
        "tags": "('io', 'stderr', 'frame_64635696', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:09:07.623327"
    },
    {
        "index": "377.113",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_64635696')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:09:07.623327"
    },
    {
        "index": "378.0",
        "text": "    result = method(self, *args, **kwargs)\n",
        "tags": "('io', 'stderr', 'frame_64635696')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:09:07.623327"
    },
    {
        "index": "379.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_63075888')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:09:07.624325"
    },
    {
        "index": "379.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1158, in wrapper",
        "tags": "('io', 'stderr', 'frame_63075888', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:09:07.624325"
    },
    {
        "index": "379.113",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_63075888')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:09:07.624325"
    },
    {
        "index": "380.0",
        "text": "    return method(self, *args, **kwargs)\n",
        "tags": "('io', 'stderr', 'frame_63075888')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:09:07.624325"
    },
    {
        "index": "381.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_68249808')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:09:07.625326"
    },
    {
        "index": "381.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1232, in _execute_prepared_user_code",
        "tags": "('io', 'stderr', 'frame_68249808', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:09:07.625326"
    },
    {
        "index": "381.133",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_68249808')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:09:07.625326"
    },
    {
        "index": "382.0",
        "text": "    exec(statements, global_vars)\n",
        "tags": "('io', 'stderr', 'frame_68249808')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:09:07.626326"
    },
    {
        "index": "383.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_68259312')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:09:07.626326"
    },
    {
        "index": "383.2",
        "text": "File \"C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py\", line 12, in <module>",
        "tags": "('io', 'stderr', 'frame_68259312', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:09:07.626326"
    },
    {
        "index": "383.76",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_68259312')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:09:07.627328"
    },
    {
        "index": "384.0",
        "text": "    vastus = arv1 * arv2\n",
        "tags": "('io', 'stderr', 'frame_68259312')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:09:07.627328"
    },
    {
        "index": "385.0",
        "text": "TypeError: unsupported operand type(s) for *: 'int' and 'NoneType'\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:09:07.627328"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T22:09:07.627328"
    },
    {
        "index": "386.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:09:07.629326"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:09:08.972545"
    },
    {
        "index": "4.87",
        "text": "1",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:09:09.214720"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:09:10.323760"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T22:09:10.413837"
    },
    {
        "index1": "386.4",
        "index2": "387.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:09:10.423838"
    },
    {
        "index": "386.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:09:10.423838"
    },
    {
        "index1": "387.0",
        "index2": "387.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:09:10.424836"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T22:09:10.424836"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T22:09:10.580837"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:09:10.680838"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:09:12.114010"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:09:12.189011"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:09:13.144702"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:09:13.220702"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:09:16.814922"
    },
    {
        "view_id": "AssistantView",
        "view_class": "AssistantView",
        "sequence": "ShowView",
        "time": "2020-11-14T22:09:16.907932"
    },
    {
        "index": "387.0",
        "text": "Traceback (most recent call last):\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:09:16.919934"
    },
    {
        "index": "388.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_62931760')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:09:16.919934"
    },
    {
        "index": "388.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1171, in wrapper",
        "tags": "('io', 'stderr', 'frame_62931760', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:09:16.920933"
    },
    {
        "index": "388.113",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_62931760')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:09:16.920933"
    },
    {
        "index": "389.0",
        "text": "    result = method(self, *args, **kwargs)\n",
        "tags": "('io', 'stderr', 'frame_62931760')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:09:16.920933"
    },
    {
        "index": "390.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_61371952')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:09:16.921935"
    },
    {
        "index": "390.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1158, in wrapper",
        "tags": "('io', 'stderr', 'frame_61371952', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:09:16.921935"
    },
    {
        "index": "390.113",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_61371952')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:09:16.921935"
    },
    {
        "index": "391.0",
        "text": "    return method(self, *args, **kwargs)\n",
        "tags": "('io', 'stderr', 'frame_61371952')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:09:16.922932"
    },
    {
        "index": "392.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_66549968')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:09:16.922932"
    },
    {
        "index": "392.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1232, in _execute_prepared_user_code",
        "tags": "('io', 'stderr', 'frame_66549968', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:09:16.922932"
    },
    {
        "index": "392.133",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_66549968')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:09:16.923932"
    },
    {
        "index": "393.0",
        "text": "    exec(statements, global_vars)\n",
        "tags": "('io', 'stderr', 'frame_66549968')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:09:16.923932"
    },
    {
        "index": "394.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_66559472')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:09:16.923932"
    },
    {
        "index": "394.2",
        "text": "File \"C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py\", line 14, in <module>",
        "tags": "('io', 'stderr', 'frame_66559472', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:09:16.923932"
    },
    {
        "index": "394.76",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_66559472')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:09:16.924934"
    },
    {
        "index": "395.0",
        "text": "    magbox('Tehte tulemus on ' +  str(vastus) + '.')\n",
        "tags": "('io', 'stderr', 'frame_66559472')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:09:16.924934"
    },
    {
        "index": "396.0",
        "text": "NameError: name 'magbox' is not defined\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:09:16.924934"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T22:09:16.925932"
    },
    {
        "index": "397.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:09:16.926934"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:09:20.750385"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:09:39.683104"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:09:39.686103"
    },
    {
        "index": "5.0",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:09:40.456699"
    },
    {
        "index": "6.0",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:09:40.616778"
    },
    {
        "index": "6.0",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:09:42.880624"
    },
    {
        "index": "6.0",
        "text": "n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:09:44.179651"
    },
    {
        "index": "6.1",
        "text": "u",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:09:44.271740"
    },
    {
        "index": "6.2",
        "text": "p",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:09:44.544903"
    },
    {
        "index": "6.3",
        "text": "u",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:09:44.765092"
    },
    {
        "index": "6.4",
        "text": "d",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:09:44.850134"
    },
    {
        "index": "6.5",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:09:46.792871"
    },
    {
        "index": "6.6",
        "text": "=",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:09:47.010046"
    },
    {
        "index": "6.7",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:09:47.133101"
    },
    {
        "index": "6.8",
        "text": "[",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:09:47.996886"
    },
    {
        "index": "6.9",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:09:51.173637"
    },
    {
        "index1": "6.9",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:09:51.629977"
    },
    {
        "index": "6.9",
        "text": "+",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:09:51.897178"
    },
    {
        "index": "6.10",
        "text": ",",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:09:52.680837"
    },
    {
        "index": "6.11",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:09:52.839997"
    },
    {
        "index": "6.12",
        "text": "-",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:09:53.205075"
    },
    {
        "index": "6.13",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:09:53.315139"
    },
    {
        "index1": "6.13",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:09:53.891647"
    },
    {
        "index1": "6.12",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:09:55.741262"
    },
    {
        "index1": "6.11",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:09:55.934399"
    },
    {
        "index1": "6.10",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:09:56.109523"
    },
    {
        "index1": "6.9",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:09:56.277625"
    },
    {
        "index": "6.9",
        "text": "\"",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:09:57.046239"
    },
    {
        "index": "6.10",
        "text": "\"",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:09:57.295439"
    },
    {
        "index1": "6.10",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:09:58.422426"
    },
    {
        "index1": "6.9",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:09:58.569529"
    },
    {
        "index": "6.9",
        "text": "'",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:09:58.997906"
    },
    {
        "index": "6.10",
        "text": "'",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:09:59.112004"
    },
    {
        "index": "6.10",
        "text": "+",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:10:00.453186"
    },
    {
        "index": "6.12",
        "text": ",",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:10:01.688194"
    },
    {
        "index": "6.13",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:10:01.768232"
    },
    {
        "index": "6.14",
        "text": "'",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:10:02.764117"
    },
    {
        "index": "6.15",
        "text": "_",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:10:03.603679"
    },
    {
        "index1": "6.15",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:10:04.102056"
    },
    {
        "index": "6.15",
        "text": "-",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:10:04.390282"
    },
    {
        "index": "6.16",
        "text": "'",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:10:05.557119"
    },
    {
        "index": "6.17",
        "text": ",",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:10:06.592990"
    },
    {
        "index": "6.18",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:10:06.686061"
    },
    {
        "index": "6.19",
        "text": "'",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:10:07.905073"
    },
    {
        "index": "6.20",
        "text": "*",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:10:09.182274"
    },
    {
        "index": "6.21",
        "text": "'",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:10:09.748718"
    },
    {
        "index": "6.22",
        "text": ")",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:10:11.151846"
    },
    {
        "index1": "6.22",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:10:12.848333"
    },
    {
        "index": "6.22",
        "text": "]",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:10:13.100464"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:10:16.914157"
    },
    {
        "index1": "8.7",
        "index2": "8.17",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:10:18.335278"
    },
    {
        "index": "8.7",
        "text": "Sisestage esimene t\u00e4isarv l\u00f5igus 1-10:",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:10:18.338278"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Paste>>",
        "time": "2020-11-14T22:10:18.338278"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:10:20.551892"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:10:22.416460"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:10:22.419464"
    },
    {
        "index1": "8.7",
        "index2": "8.44",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:10:23.338812"
    },
    {
        "index": "8.7",
        "text": "buttonbox",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:10:23.340812"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Paste>>",
        "time": "2020-11-14T22:10:23.341812"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:10:30.186079"
    },
    {
        "index": "8.32",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:10:30.835544"
    },
    {
        "index": "8.33",
        "text": ",",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:10:31.016667"
    },
    {
        "index": "8.34",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:10:31.092730"
    },
    {
        "index1": "8.34",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:10:31.861450"
    },
    {
        "index1": "8.33",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:10:32.048604"
    },
    {
        "index1": "8.32",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:10:32.195699"
    },
    {
        "index": "8.32",
        "text": ",",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:10:33.078510"
    },
    {
        "index": "8.33",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:10:33.141572"
    },
    {
        "index": "8.34",
        "text": "c",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:10:33.402793"
    },
    {
        "index": "8.35",
        "text": "h",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:10:33.625917"
    },
    {
        "index": "8.36",
        "text": "o",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:10:34.067201"
    },
    {
        "index": "8.37",
        "text": "i",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:10:35.219163"
    },
    {
        "index": "8.38",
        "text": "c",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:10:35.617444"
    },
    {
        "index": "8.39",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:10:35.819577"
    },
    {
        "index": "8.40",
        "text": "s",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:10:36.092782"
    },
    {
        "index": "8.41",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:10:36.614296"
    },
    {
        "index": "8.42",
        "text": "=",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:10:36.827419"
    },
    {
        "index": "8.43",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:10:36.895443"
    },
    {
        "index": "8.44",
        "text": "n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:10:37.652111"
    },
    {
        "index": "8.45",
        "text": "u",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:10:37.795200"
    },
    {
        "index": "8.46",
        "text": "p",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:10:38.118453"
    },
    {
        "index": "8.47",
        "text": "u",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:10:38.377655"
    },
    {
        "index": "8.48",
        "text": "d",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:10:38.493753"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:10:39.735797"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T22:10:39.833896"
    },
    {
        "index1": "397.4",
        "index2": "398.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:10:39.843895"
    },
    {
        "index": "397.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:10:39.843895"
    },
    {
        "index1": "398.0",
        "index2": "398.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:10:39.844893"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T22:10:39.844893"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T22:10:40.002895"
    },
    {
        "view_id": "AssistantView",
        "view_class": "AssistantView",
        "sequence": "ShowView",
        "time": "2020-11-14T22:10:40.100893"
    },
    {
        "index": "398.0",
        "text": "Traceback (most recent call last):\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:10:40.110895"
    },
    {
        "index": "399.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_65053920')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:10:40.111895"
    },
    {
        "index": "399.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1208, in execute_source",
        "tags": "('io', 'stderr', 'frame_65053920', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:10:40.111895"
    },
    {
        "index": "399.120",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_65053920')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:10:40.111895"
    },
    {
        "index": "400.0",
        "text": "    root = self._prepare_ast(source, filename, mode)\n",
        "tags": "('io', 'stderr', 'frame_65053920')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:10:40.111895"
    },
    {
        "index": "401.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_65029984')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:10:40.112896"
    },
    {
        "index": "401.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1244, in _prepare_ast",
        "tags": "('io', 'stderr', 'frame_65029984', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:10:40.112896"
    },
    {
        "index": "401.118",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_65029984')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:10:40.112896"
    },
    {
        "index": "402.0",
        "text": "    return ast.parse(source, filename, mode)\n",
        "tags": "('io', 'stderr', 'frame_65029984')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:10:40.113895"
    },
    {
        "index": "403.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_62460672')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:10:40.113895"
    },
    {
        "index": "403.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\ast.py\", line 35, in parse",
        "tags": "('io', 'stderr', 'frame_62460672', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:10:40.113895"
    },
    {
        "index": "403.84",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_62460672')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:10:40.114896"
    },
    {
        "index": "404.0",
        "text": "    return compile(source, filename, mode, PyCF_ONLY_AST)\n",
        "tags": "('io', 'stderr', 'frame_62460672')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:10:40.114896"
    },
    {
        "index": "405.0",
        "text": "  ",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:10:40.114896"
    },
    {
        "index": "405.2",
        "text": "File \"C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py\", line 8",
        "tags": "('io', 'stderr', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:10:40.115893"
    },
    {
        "index": "405.62",
        "text": "\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:10:40.115893"
    },
    {
        "index": "406.0",
        "text": "    m2rk = buttonbox:(\"Valige tehe:\", choices = nupud)\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:10:40.115893"
    },
    {
        "index": "407.0",
        "text": "                    ^\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:10:40.115893"
    },
    {
        "index": "408.0",
        "text": "SyntaxError: invalid syntax\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:10:40.116893"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T22:10:40.116893"
    },
    {
        "index": "409.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:10:40.117893"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:10:42.708511"
    },
    {
        "index1": "8.16",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:10:43.355049"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:10:44.083465"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T22:10:44.179542"
    },
    {
        "index1": "409.4",
        "index2": "410.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:10:44.188542"
    },
    {
        "index": "409.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:10:44.188542"
    },
    {
        "index1": "410.0",
        "index2": "410.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:10:44.189542"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T22:10:44.190543"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T22:10:44.345542"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:10:44.443544"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:10:45.820605"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:10:45.896604"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:10:46.408900"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:10:47.659627"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:10:47.760682"
    },
    {
        "view_id": "AssistantView",
        "view_class": "AssistantView",
        "sequence": "ShowView",
        "time": "2020-11-14T22:10:47.857680"
    },
    {
        "index": "410.0",
        "text": "Traceback (most recent call last):\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:10:47.869681"
    },
    {
        "index": "411.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_55653168')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:10:47.869681"
    },
    {
        "index": "411.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1171, in wrapper",
        "tags": "('io', 'stderr', 'frame_55653168', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:10:47.869681"
    },
    {
        "index": "411.113",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_55653168')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:10:47.870682"
    },
    {
        "index": "412.0",
        "text": "    result = method(self, *args, **kwargs)\n",
        "tags": "('io', 'stderr', 'frame_55653168')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:10:47.870682"
    },
    {
        "index": "413.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_54097456')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:10:47.870682"
    },
    {
        "index": "413.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1158, in wrapper",
        "tags": "('io', 'stderr', 'frame_54097456', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:10:47.871681"
    },
    {
        "index": "413.113",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_54097456')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:10:47.871681"
    },
    {
        "index": "414.0",
        "text": "    return method(self, *args, **kwargs)\n",
        "tags": "('io', 'stderr', 'frame_54097456')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:10:47.871681"
    },
    {
        "index": "415.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_58747088')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:10:47.872681"
    },
    {
        "index": "415.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1232, in _execute_prepared_user_code",
        "tags": "('io', 'stderr', 'frame_58747088', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:10:47.872681"
    },
    {
        "index": "415.133",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_58747088')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:10:47.872681"
    },
    {
        "index": "416.0",
        "text": "    exec(statements, global_vars)\n",
        "tags": "('io', 'stderr', 'frame_58747088')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:10:47.873681"
    },
    {
        "index": "417.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_58756592')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:10:47.873681"
    },
    {
        "index": "417.2",
        "text": "File \"C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py\", line 17, in <module>",
        "tags": "('io', 'stderr', 'frame_58756592', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:10:47.873681"
    },
    {
        "index": "417.76",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_58756592')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:10:47.873681"
    },
    {
        "index": "418.0",
        "text": "    magbox('Tehte tulemus on ' +  str(vastus) + '.')\n",
        "tags": "('io', 'stderr', 'frame_58756592')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:10:47.874682"
    },
    {
        "index": "419.0",
        "text": "NameError: name 'magbox' is not defined\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:10:47.874682"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T22:10:47.874682"
    },
    {
        "index": "420.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:10:47.876680"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:10:51.366614"
    },
    {
        "index1": "17.1",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:10:52.375393"
    },
    {
        "index": "17.1",
        "text": "s",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:10:52.461434"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:10:53.736279"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T22:10:53.825321"
    },
    {
        "index1": "420.4",
        "index2": "421.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:10:53.834321"
    },
    {
        "index": "420.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:10:53.834321"
    },
    {
        "index1": "421.0",
        "index2": "421.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:10:53.835323"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T22:10:53.836322"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T22:10:53.992323"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:10:54.097322"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:10:55.321403"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:10:55.399401"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:10:55.890812"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:10:57.256467"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:10:57.354530"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:10:57.438530"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:10:59.149887"
    },
    {
        "index": "421.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:10:59.177882"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:10:59.502884"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:11:01.250530"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:11:51.394818"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:11:51.401819"
    },
    {
        "index1": "1.0",
        "index2": "18.0",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:11:52.133410"
    },
    {
        "index": "1.0",
        "text": "tulemapidi = int(input(\"Mitu inimest on kutsutud? \"))\ntuleb = int(input(\"Mitu inimest tuleb? \"))\n\ndef eelarve(x):\n    summa = x * 10 + 55\n    return summa\n\nmaks = eelarve(tulemapidi)\nmini = eelarve(tuleb)\n\nprint('Maksimaalne eelarve on: ' + str(maks))\nprint('Minimaalne eelarve on: ' + str(mini))\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:11:52.135410"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Paste>>",
        "time": "2020-11-14T22:11:52.135410"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:11:53.322229"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:12:25.062057"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:12:25.065061"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:12:25.471059"
    },
    {
        "index": "1.0",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:12:26.160305"
    },
    {
        "index": "2.0",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:12:26.304421"
    },
    {
        "index": "3.0",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:12:26.445511"
    },
    {
        "index": "1.0",
        "text": "failinimi = input(\"Sisesta failinimi: \")\n\nf = open(failinimi, encoding=\"UTF-8\")",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:12:27.457230"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<<Paste>>",
        "time": "2020-11-14T22:12:27.457230"
    },
    {
        "widget_id": 92290000,
        "widget_class": "Text",
        "text_widget_id": 92290000,
        "text_widget_class": "Text",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:12:33.319720"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:12:33.636021"
    },
    {
        "index": "1.0",
        "text": "#",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:12:35.719646"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:12:37.988150"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:12:41.101210"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:12:41.104208"
    },
    {
        "index1": "3.9",
        "index2": "3.18",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:12:42.492999"
    },
    {
        "index": "3.9",
        "text": "n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:12:42.496000"
    },
    {
        "index": "3.10",
        "text": "i",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:12:43.225677"
    },
    {
        "index": "3.11",
        "text": "m",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:12:43.795177"
    },
    {
        "index": "3.12",
        "text": "i",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:12:44.031370"
    },
    {
        "index": "3.13",
        "text": ".",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:12:44.849217"
    },
    {
        "index": "3.14",
        "text": "t",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:12:45.305574"
    },
    {
        "index": "3.15",
        "text": "x",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:12:45.485720"
    },
    {
        "index": "3.16",
        "text": "t",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:12:45.583730"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:12:46.591411"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:14:19.788937"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:14:19.792937"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:14:20.708246"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:14:21.169692"
    },
    {
        "index1": "6.13",
        "index2": "6.53",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:14:22.445122"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:14:22.938482"
    },
    {
        "index1": "7.8",
        "index2": "7.42",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:14:23.717697"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:14:24.100036"
    },
    {
        "index": "6.13",
        "text": "f",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:14:26.624286"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:14:31.980364"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:15:03.831643"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:15:03.832643"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:15:19.118813"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:15:19.119813"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:15:19.119813"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:15:39.544608"
    },
    {
        "index1": "6.13",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:15:40.539337"
    },
    {
        "index": "6.13",
        "text": "0",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:15:41.416151"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:15:41.787469"
    },
    {
        "index": "7.8",
        "text": "0",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:15:42.049730"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:15:42.797389"
    },
    {
        "index": "8.0",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:15:43.269788"
    },
    {
        "index": "9.0",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:15:43.498956"
    },
    {
        "index": "10.0",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:15:43.729133"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:15:44.050364"
    },
    {
        "index": "9.0",
        "text": "f",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:15:46.357474"
    },
    {
        "index": "9.1",
        "text": "o",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:15:46.565570"
    },
    {
        "index": "9.2",
        "text": "r",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:15:46.667635"
    },
    {
        "index": "9.3",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:15:49.051501"
    },
    {
        "index": "9.4",
        "text": "r",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:15:49.241633"
    },
    {
        "index": "9.5",
        "text": "i",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:15:49.918164"
    },
    {
        "index": "9.6",
        "text": "d",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:15:50.040255"
    },
    {
        "index": "9.7",
        "text": "a",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:15:50.909959"
    },
    {
        "index": "9.8",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:15:51.075065"
    },
    {
        "index": "9.9",
        "text": "i",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:15:51.327294"
    },
    {
        "index": "9.10",
        "text": "n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:15:51.559393"
    },
    {
        "index": "9.11",
        "text": "f",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:15:52.019787"
    },
    {
        "index1": "9.11",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:15:52.631326"
    },
    {
        "index": "9.11",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:15:52.852484"
    },
    {
        "index": "9.12",
        "text": "f",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:15:53.020623"
    },
    {
        "index": "9.13",
        "text": ":",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:15:54.681955"
    },
    {
        "index": "9.14",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:15:55.089254"
    },
    {
        "index": "10.0",
        "text": "",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:15:55.092252"
    },
    {
        "index": "10.0",
        "text": "    ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:15:55.094255"
    },
    {
        "index": "10.4",
        "text": "s",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:02.999752"
    },
    {
        "index": "10.5",
        "text": "]",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:03.161879"
    },
    {
        "index1": "10.5",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:16:03.614313"
    },
    {
        "index": "10.5",
        "text": "\u00f5",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:04.427010"
    },
    {
        "index": "10.6",
        "text": "n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:05.590965"
    },
    {
        "index": "10.7",
        "text": "a",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:05.735098"
    },
    {
        "index": "10.8",
        "text": "d",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:05.864225"
    },
    {
        "index": "10.9",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:06.262514"
    },
    {
        "index": "10.10",
        "text": "\u00b4",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:06.775912"
    },
    {
        "index1": "10.10",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:16:07.227281"
    },
    {
        "index1": "10.9",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:16:07.411429"
    },
    {
        "index": "10.9",
        "text": "=",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:07.924854"
    },
    {
        "index1": "10.9",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:16:08.477319"
    },
    {
        "index": "10.9",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:08.703402"
    },
    {
        "index": "10.10",
        "text": "=",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:10.508814"
    },
    {
        "index": "10.11",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:12.582524"
    },
    {
        "index": "10.12",
        "text": "r",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:13.893659"
    },
    {
        "index": "10.13",
        "text": "i",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:14.059800"
    },
    {
        "index": "10.14",
        "text": "d",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:14.159862"
    },
    {
        "index": "10.15",
        "text": "a",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:14.803444"
    },
    {
        "index": "10.16",
        "text": ".",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:15.379999"
    },
    {
        "index": "10.17",
        "text": "s",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:15.535143"
    },
    {
        "index": "10.18",
        "text": "p",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:16.004526"
    },
    {
        "index": "10.19",
        "text": "l",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:16.209690"
    },
    {
        "index": "10.20",
        "text": "i",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:16.439864"
    },
    {
        "index": "10.21",
        "text": "t",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:16.666110"
    },
    {
        "index": "10.22",
        "text": "(",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:17.082425"
    },
    {
        "index": "10.23",
        "text": ")",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:17.403712"
    },
    {
        "index": "10.24",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:18.136349"
    },
    {
        "index": "11.0",
        "text": "    ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:18.139349"
    },
    {
        "index": "11.4",
        "text": "f",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:20.394319"
    },
    {
        "index": "11.5",
        "text": "o",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:20.572472"
    },
    {
        "index": "11.6",
        "text": "r",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:20.688548"
    },
    {
        "index": "11.7",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:20.973799"
    },
    {
        "index": "11.8",
        "text": "s",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:21.246082"
    },
    {
        "index": "11.9",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:22.239002"
    },
    {
        "index": "11.10",
        "text": "i",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:22.747493"
    },
    {
        "index": "11.11",
        "text": "n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:22.976680"
    },
    {
        "index": "11.12",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:23.031695"
    },
    {
        "index": "11.13",
        "text": "s",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:23.221869"
    },
    {
        "index": "11.14",
        "text": "]",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:27.836622"
    },
    {
        "index1": "11.14",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:16:28.279942"
    },
    {
        "index": "11.14",
        "text": "\u00f5",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:28.660222"
    },
    {
        "index": "11.15",
        "text": "nad",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:28.717250"
    },
    {
        "index": "11.18",
        "text": "\"",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:34.097490"
    },
    {
        "index1": "11.18",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:16:34.806108"
    },
    {
        "index": "11.18",
        "text": ":",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:35.326537"
    },
    {
        "index": "11.19",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:36.224391"
    },
    {
        "index": "12.0",
        "text": "    ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:36.227393"
    },
    {
        "index1": "12.0",
        "index2": "12.4",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:16:36.229391"
    },
    {
        "index": "12.0",
        "text": "        ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:36.232391"
    },
    {
        "index": "12.8",
        "text": "i",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:38.043629"
    },
    {
        "index": "12.9",
        "text": "f",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:38.160720"
    },
    {
        "index": "12.10",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:38.291787"
    },
    {
        "index": "12.11",
        "text": "s",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:38.489020"
    },
    {
        "index": "12.12",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:38.650155"
    },
    {
        "index": "12.13",
        "text": "=",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:39.138528"
    },
    {
        "index": "12.14",
        "text": "=",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:39.330700"
    },
    {
        "index": "12.15",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:40.552730"
    },
    {
        "index": "12.16",
        "text": "\"",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:41.261239"
    },
    {
        "index": "12.17",
        "text": "\"",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:41.490385"
    },
    {
        "index": "12.17",
        "text": "=",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:43.123881"
    },
    {
        "index1": "12.17",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:16:43.944652"
    },
    {
        "index": "12.17",
        "text": "+",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:44.229873"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:16:46.720059"
    },
    {
        "index": "12.19",
        "text": "\"",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:47.672823"
    },
    {
        "index1": "12.19",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:16:48.111123"
    },
    {
        "index": "12.19",
        "text": "\u00d6",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:53.935178"
    },
    {
        "index1": "12.19",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:16:54.782821"
    },
    {
        "index": "12.19",
        "text": ":",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:16:55.429459"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:16:57.129755"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:17:00.791595"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:17:00.794595"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:17:01.363029"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:17:01.748297"
    },
    {
        "index": "13.0",
        "text": "    ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:17:02.910335"
    },
    {
        "index1": "13.0",
        "index2": "13.4",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:17:03.214615"
    },
    {
        "index": "13.0",
        "text": "        ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:17:03.217616"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:17:03.760015"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:17:04.091219"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:17:04.543619"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:17:05.008031"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:17:05.384380"
    },
    {
        "index1": "13.8",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:17:05.765740"
    },
    {
        "index1": "13.4",
        "index2": "13.8",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:17:06.121086"
    },
    {
        "index1": "13.0",
        "index2": "13.4",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:17:06.468323"
    },
    {
        "index1": "12.20",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:17:06.691523"
    },
    {
        "index": "12.20",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:17:07.380168"
    },
    {
        "index": "13.0",
        "text": "        ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:17:07.383168"
    },
    {
        "index1": "13.0",
        "index2": "13.8",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:17:07.386168"
    },
    {
        "index": "13.0",
        "text": "            ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:17:07.388170"
    },
    {
        "index": "13.12",
        "text": "t",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:17:13.958429"
    },
    {
        "index": "13.13",
        "text": "u",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:17:14.093543"
    },
    {
        "index": "13.14",
        "text": "l",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:17:14.335687"
    },
    {
        "index": "13.15",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:17:14.442754"
    },
    {
        "index": "13.16",
        "text": "b",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:17:14.721950"
    },
    {
        "index": "13.17",
        "text": "=",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:17:21.523213"
    },
    {
        "index1": "13.17",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:17:21.880432"
    },
    {
        "index": "13.17",
        "text": "+",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:17:22.303791"
    },
    {
        "index1": "13.17",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:17:23.663930"
    },
    {
        "index": "13.17",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:17:24.895920"
    },
    {
        "index": "13.18",
        "text": "+",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:17:25.808721"
    },
    {
        "index": "13.19",
        "text": "=",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:17:26.528338"
    },
    {
        "index": "13.20",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:17:27.116875"
    },
    {
        "index": "13.21",
        "text": "1",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:17:27.254996"
    },
    {
        "index": "13.22",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:17:28.212756"
    },
    {
        "index": "14.0",
        "text": "            ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:17:28.216757"
    },
    {
        "index1": "14.8",
        "index2": "14.12",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:17:28.713120"
    },
    {
        "index1": "14.4",
        "index2": "14.8",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:17:29.230534"
    },
    {
        "index": "14.4",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:17:32.091884"
    },
    {
        "index": "14.5",
        "text": "l",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:17:32.368186"
    },
    {
        "index": "14.6",
        "text": "f",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:17:32.624452"
    },
    {
        "index": "14.7",
        "text": "i",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:17:32.774560"
    },
    {
        "index1": "14.7",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:17:33.556328"
    },
    {
        "index1": "14.6",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:17:33.877562"
    },
    {
        "index": "14.6",
        "text": "i",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:17:34.763379"
    },
    {
        "index": "14.7",
        "text": "f",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:17:34.860442"
    },
    {
        "index": "14.8",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:17:35.933315"
    },
    {
        "index": "14.9",
        "text": "s",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:17:37.002230"
    },
    {
        "index": "14.10",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:17:37.296407"
    },
    {
        "index": "14.11",
        "text": "o",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:17:37.453503"
    },
    {
        "index1": "14.11",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:17:38.121062"
    },
    {
        "index": "14.11",
        "text": "i",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:17:38.757609"
    },
    {
        "index": "14.12",
        "text": "n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:17:38.990740"
    },
    {
        "index": "14.13",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:17:39.432183"
    },
    {
        "index": "14.14",
        "text": "s",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:17:40.008613"
    },
    {
        "index": "14.15",
        "text": "]",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:17:40.749141"
    },
    {
        "index1": "14.15",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:17:41.105431"
    },
    {
        "index": "14.15",
        "text": "\u00f5",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:17:41.439670"
    },
    {
        "index": "14.16",
        "text": "nad",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:17:42.218160"
    },
    {
        "index": "14.19",
        "text": ":",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:17:43.166877"
    },
    {
        "index": "14.20",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:17:43.904551"
    },
    {
        "index": "15.0",
        "text": "    ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:17:43.907551"
    },
    {
        "index1": "15.0",
        "index2": "15.4",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:17:43.910551"
    },
    {
        "index": "15.0",
        "text": "        ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:17:43.913551"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:17:48.241415"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:17:52.261476"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:17:53.571438"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:17:53.971713"
    },
    {
        "index1": "14.0",
        "index2": "14.4",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:17:54.667243"
    },
    {
        "index": "14.0",
        "text": "        ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:17:54.671244"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:17:55.548126"
    },
    {
        "index1": "14.15",
        "index2": "14.24",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:17:58.122917"
    },
    {
        "index": "14.15",
        "text": "=",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:17:58.125916"
    },
    {
        "index": "14.16",
        "text": "=",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:17:58.488287"
    },
    {
        "index": "14.17",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:17:58.995795"
    },
    {
        "index": "14.18",
        "text": "'",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:18:01.566776"
    },
    {
        "index": "14.19",
        "text": "?",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:18:01.888965"
    },
    {
        "index": "14.20",
        "text": "'",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:18:02.666568"
    },
    {
        "index": "14.21",
        "text": ":",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:18:04.505210"
    },
    {
        "index1": "14.20",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:18:06.483019"
    },
    {
        "index": "14.20",
        "text": "\"",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:18:06.802214"
    },
    {
        "index1": "14.18",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:18:07.920201"
    },
    {
        "index": "14.18",
        "text": "\"",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:18:08.116338"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:18:11.027765"
    },
    {
        "index1": "15.0",
        "index2": "15.8",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:18:11.955455"
    },
    {
        "index": "15.0",
        "text": "            ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:18:11.958458"
    },
    {
        "index": "15.12",
        "text": "t",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:18:13.922194"
    },
    {
        "index": "15.13",
        "text": "u",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:18:14.111385"
    },
    {
        "index": "15.14",
        "text": "l",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:18:14.724998"
    },
    {
        "index": "15.15",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:18:14.857064"
    },
    {
        "index": "15.16",
        "text": "m",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:18:15.341440"
    },
    {
        "index": "15.17",
        "text": "a",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:18:15.419489"
    },
    {
        "index": "15.18",
        "text": "p",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:18:15.698737"
    },
    {
        "index": "15.19",
        "text": "i",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:18:15.931882"
    },
    {
        "index": "15.20",
        "text": "d",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:18:16.032935"
    },
    {
        "index": "15.21",
        "text": "i",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:18:16.146021"
    },
    {
        "index": "15.22",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:18:23.401008"
    },
    {
        "index1": "15.22",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:18:23.689190"
    },
    {
        "index": "15.22",
        "text": "=",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:18:24.133600"
    },
    {
        "index1": "15.22",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:18:24.588931"
    },
    {
        "index": "15.22",
        "text": "+",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:18:24.914183"
    },
    {
        "index1": "15.22",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:18:27.745565"
    },
    {
        "index": "15.22",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:18:27.947672"
    },
    {
        "index": "15.23",
        "text": "+",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:18:28.416008"
    },
    {
        "index": "15.24",
        "text": "=",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:18:28.848375"
    },
    {
        "index": "15.25",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:18:29.381862"
    },
    {
        "index": "15.26",
        "text": "1",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:18:29.493864"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:18:30.777711"
    },
    {
        "index": "15.27",
        "text": "\n",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:18:31.434153"
    },
    {
        "index": "16.0",
        "text": "            ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:18:31.437151"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:18:34.084380"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:18:34.830460"
    },
    {
        "index1": "16.8",
        "index2": "16.12",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:18:35.701232"
    },
    {
        "index1": "16.4",
        "index2": "16.8",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:18:35.980486"
    },
    {
        "index1": "16.0",
        "index2": "16.4",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:18:36.341755"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:18:41.473979"
    },
    {
        "index": "16.0",
        "text": "    ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:18:41.935464"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:18:42.483862"
    },
    {
        "index1": "16.0",
        "index2": "16.4",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:18:42.869275"
    },
    {
        "index": "16.0",
        "text": "        ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:18:42.872277"
    },
    {
        "index": "16.8",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:18:44.059392"
    },
    {
        "index": "16.9",
        "text": ";",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:18:44.275493"
    },
    {
        "index": "16.10",
        "text": "s",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:18:44.396544"
    },
    {
        "index1": "16.10",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:18:44.806902"
    },
    {
        "index1": "16.9",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:18:44.987065"
    },
    {
        "index1": "16.8",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:18:45.149173"
    },
    {
        "index1": "16.4",
        "index2": "16.8",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:18:45.314336"
    },
    {
        "index1": "16.0",
        "index2": "16.4",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:18:45.473426"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:18:50.611793"
    },
    {
        "index": "21.25",
        "text": "+",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:18:53.375127"
    },
    {
        "index1": "21.25",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:18:53.895558"
    },
    {
        "index": "21.25",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:18:54.119797"
    },
    {
        "index": "21.26",
        "text": "+",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:18:54.552168"
    },
    {
        "index": "21.27",
        "text": " ",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:18:54.992577"
    },
    {
        "index": "21.28",
        "text": "t",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:18:55.339862"
    },
    {
        "index": "21.29",
        "text": "u",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:18:55.541043"
    },
    {
        "index": "21.30",
        "text": "l",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:18:55.893256"
    },
    {
        "index": "21.31",
        "text": "e",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:18:56.852021"
    },
    {
        "index": "21.32",
        "text": "b",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:18:57.226359"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:19:01.626461"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T22:19:01.743548"
    },
    {
        "index1": "421.4",
        "index2": "422.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:19:01.753561"
    },
    {
        "index": "421.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:19:01.753561"
    },
    {
        "index1": "422.0",
        "index2": "422.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:19:01.754562"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T22:19:01.754562"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T22:19:01.912562"
    },
    {
        "view_id": "AssistantView",
        "view_class": "AssistantView",
        "sequence": "ShowView",
        "time": "2020-11-14T22:19:01.997563"
    },
    {
        "index": "422.0",
        "text": "Traceback (most recent call last):\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:19:02.008563"
    },
    {
        "index": "423.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_52196912')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:19:02.008563"
    },
    {
        "index": "423.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1171, in wrapper",
        "tags": "('io', 'stderr', 'frame_52196912', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:19:02.009563"
    },
    {
        "index": "423.113",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_52196912')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:19:02.009563"
    },
    {
        "index": "424.0",
        "text": "    result = method(self, *args, **kwargs)\n",
        "tags": "('io', 'stderr', 'frame_52196912')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:19:02.009563"
    },
    {
        "index": "425.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_52196528')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:19:02.010561"
    },
    {
        "index": "425.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1158, in wrapper",
        "tags": "('io', 'stderr', 'frame_52196528', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:19:02.010561"
    },
    {
        "index": "425.113",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_52196528')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:19:02.010561"
    },
    {
        "index": "426.0",
        "text": "    return method(self, *args, **kwargs)\n",
        "tags": "('io', 'stderr', 'frame_52196528')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:19:02.010561"
    },
    {
        "index": "427.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_57231568')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:19:02.011562"
    },
    {
        "index": "427.2",
        "text": "File \"C:\\Users\\Arvuti\\AppData\\Local\\Programs\\Thonny\\lib\\site-packages\\thonny\\backend.py\", line 1232, in _execute_prepared_user_code",
        "tags": "('io', 'stderr', 'frame_57231568', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:19:02.011562"
    },
    {
        "index": "427.133",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_57231568')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:19:02.011562"
    },
    {
        "index": "428.0",
        "text": "    exec(statements, global_vars)\n",
        "tags": "('io', 'stderr', 'frame_57231568')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:19:02.012561"
    },
    {
        "index": "429.0",
        "text": "  ",
        "tags": "('io', 'stderr', 'frame_57274416')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:19:02.012561"
    },
    {
        "index": "429.2",
        "text": "File \"C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py\", line 3, in <module>",
        "tags": "('io', 'stderr', 'frame_57274416', 'hyperlink', 'io_hyperlink')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:19:02.012561"
    },
    {
        "index": "429.75",
        "text": "\n",
        "tags": "('io', 'stderr', 'frame_57274416')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:19:02.013561"
    },
    {
        "index": "430.0",
        "text": "    f = open(nimi.txt, encoding=\"UTF-8\")\n",
        "tags": "('io', 'stderr', 'frame_57274416')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:19:02.013561"
    },
    {
        "index": "431.0",
        "text": "NameError: name 'nimi' is not defined\n",
        "tags": "('io', 'stderr')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:19:02.013561"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T22:19:02.014561"
    },
    {
        "index": "432.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:19:02.015563"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:19:06.420118"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:19:09.009964"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:19:09.011962"
    },
    {
        "index": "3.9",
        "text": "'",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:19:10.571253"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:19:11.060643"
    },
    {
        "index": "3.18",
        "text": "'",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:19:11.242789"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:19:11.880095"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T22:19:11.993177"
    },
    {
        "index1": "432.4",
        "index2": "433.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:19:12.003179"
    },
    {
        "index": "432.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:19:12.004177"
    },
    {
        "index1": "433.0",
        "index2": "433.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:19:12.005177"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T22:19:12.005177"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T22:19:12.161177"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T22:19:12.222177"
    },
    {
        "index": "433.0",
        "text": "M",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:19:12.223179"
    },
    {
        "index": "433.1",
        "text": "aksimaalne eelarve on: 135\nMinimaalne eelarve on: 105\n",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:19:12.223179"
    },
    {
        "index": "435.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:19:12.232179"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:19:17.176682"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:19:17.800126"
    },
    {
        "index1": "1.0",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:19:19.214123"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:19:19.839689"
    },
    {
        "index1": "1.1",
        "index2": "1.9",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:19:20.804147"
    },
    {
        "index": "1.1",
        "text": "s",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:19:20.807147"
    },
    {
        "index1": "1.1",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:19:21.973971"
    },
    {
        "index": "1.1",
        "text": "f",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:19:22.059039"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:19:23.034726"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:19:24.018341"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:19:24.834705"
    },
    {
        "index1": "3.10",
        "index2": "3.19",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:19:25.941112"
    },
    {
        "index": "3.10",
        "text": "f",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:19:25.944113"
    },
    {
        "index1": "3.10",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:19:26.946057"
    },
    {
        "index1": "3.9",
        "index2": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextDelete",
        "time": "2020-11-14T22:19:27.099185"
    },
    {
        "index": "3.9",
        "text": "f",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:19:27.197294"
    },
    {
        "index": "3.10",
        "text": "f",
        "tags": "None",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "time": "2020-11-14T22:19:27.412474"
    },
    {
        "widget_id": 92335536,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:19:29.352012"
    },
    {
        "editor_id": 92248624,
        "editor_class": "Editor",
        "filename": "C:\\Users\\Arvuti\\Desktop\\ja\\7. ndal\\7 n2dal.py",
        "sequence": "Save",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "time": "2020-11-14T22:19:29.437075"
    },
    {
        "index1": "435.4",
        "index2": "436.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:19:29.447077"
    },
    {
        "index": "435.4",
        "text": "%Run '7 n2dal.py'\n",
        "tags": "('magic', 'toplevel', 'command')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:19:29.447077"
    },
    {
        "index1": "436.0",
        "index2": "436.0",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextDelete",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:19:29.448077"
    },
    {
        "cmd_line": "%Run '7 n2dal.py'\n",
        "sequence": "MagicCommand",
        "time": "2020-11-14T22:19:29.448077"
    },
    {
        "command_text": "%Run '7 n2dal.py'\n",
        "sequence": "ShellCommand",
        "time": "2020-11-14T22:19:29.605074"
    },
    {
        "view_id": "ShellView",
        "view_class": "ShellView",
        "sequence": "ShowView",
        "time": "2020-11-14T22:19:29.658075"
    },
    {
        "index": "436.0",
        "text": "S",
        "tags": "('io', 'stdout', 'vertically_spaced')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:19:29.659075"
    },
    {
        "index": "436.1",
        "text": "isesta failinimi: ",
        "tags": "('io', 'stdout')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:19:29.659075"
    },
    {
        "widget_id": 95756336,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:19:30.881907"
    },
    {
        "index": "436.19",
        "text": "\n========================= RESTART =========================\n",
        "tags": "('magic',)",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:19:30.973969"
    },
    {
        "index": "438.0",
        "text": ">>> ",
        "tags": "('toplevel', 'prompt')",
        "text_widget_id": 46743376,
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "text_widget_context": "shell",
        "time": "2020-11-14T22:19:31.140968"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:19:32.057400"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:19:33.912949"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:19:44.892480"
    },
    {
        "widget_id": 92248752,
        "widget_class": "CodeViewText",
        "text_widget_id": 92248752,
        "text_widget_class": "CodeViewText",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:19:44.898480"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:19:47.513842"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:19:52.514203"
    },
    {
        "widget_id": 91788784,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:19:52.515203"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusOut>",
        "time": "2020-11-14T22:19:52.621242"
    },
    {
        "widget_id": 46742992,
        "widget_class": "Workbench",
        "sequence": "<FocusIn>",
        "time": "2020-11-14T22:19:53.770808"
    },
    {
        "widget_id": 95911120,
        "widget_class": "Button",
        "sequence": "<Button-1>",
        "time": "2020-11-14T22:19:54.660108"
    }
]